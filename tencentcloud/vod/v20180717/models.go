// Copyright (c) 2017-2025 Tencent. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v20180717

import (
    tcerr "github.com/tencentcloud/tencentcloud-sdk-go-intl-en/tencentcloud/common/errors"
    tchttp "github.com/tencentcloud/tencentcloud-sdk-go-intl-en/tencentcloud/common/http"
    "github.com/tencentcloud/tencentcloud-sdk-go-intl-en/tencentcloud/common/json"
)

type AIAnalysisTemplateItem struct {
	// Unique ID of intelligent analysis template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Intelligent analysis template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Intelligent analysis template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter of intelligent categorization task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ClassificationConfigure *ClassificationConfigureInfo `json:"ClassificationConfigure,omitnil,omitempty" name:"ClassificationConfigure"`

	// Control parameter of intelligent tagging task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TagConfigure *TagConfigureInfo `json:"TagConfigure,omitnil,omitempty" name:"TagConfigure"`

	// Control parameter of intelligent cover generating task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	CoverConfigure *CoverConfigureInfo `json:"CoverConfigure,omitnil,omitempty" name:"CoverConfigure"`

	// Control parameter of intelligent frame-specific tagging task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FrameTagConfigure *FrameTagConfigureInfo `json:"FrameTagConfigure,omitnil,omitempty" name:"FrameTagConfigure"`

	// Control parameter of an intelligent highlight generating task.
	HighlightConfigure *HighlightsConfigureInfo `json:"HighlightConfigure,omitnil,omitempty" name:"HighlightConfigure"`

	// Creation time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

type AIRecognitionTemplateItem struct {
	// Unique ID of video content recognition template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Video content recognition template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Video content recognition template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Template type, values:
	// <li>Preset: system preset template;</li>
	// <li>Custom: user-defined template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Control parameter of opening and closing credits recognition.
	// Note: this field may return null, indicating that no valid values can be obtained.
	HeadTailConfigure *HeadTailConfigureInfo `json:"HeadTailConfigure,omitnil,omitempty" name:"HeadTailConfigure"`

	// Control parameter of splitting recognition.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SegmentConfigure *SegmentConfigureInfo `json:"SegmentConfigure,omitnil,omitempty" name:"SegmentConfigure"`

	// Face recognition control parameter.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FaceConfigure *FaceConfigureInfo `json:"FaceConfigure,omitnil,omitempty" name:"FaceConfigure"`

	// Full text recognition control parameter.
	// Note: this field may return null, indicating that no valid values can be obtained.
	OcrFullTextConfigure *OcrFullTextConfigureInfo `json:"OcrFullTextConfigure,omitnil,omitempty" name:"OcrFullTextConfigure"`

	// Text keyword recognition control parameter.
	// Note: this field may return null, indicating that no valid values can be obtained.
	OcrWordsConfigure *OcrWordsConfigureInfo `json:"OcrWordsConfigure,omitnil,omitempty" name:"OcrWordsConfigure"`

	// Full speech recognition control parameter.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AsrFullTextConfigure *AsrFullTextConfigureInfo `json:"AsrFullTextConfigure,omitnil,omitempty" name:"AsrFullTextConfigure"`

	// Speech keyword recognition control parameter.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AsrWordsConfigure *AsrWordsConfigureInfo `json:"AsrWordsConfigure,omitnil,omitempty" name:"AsrWordsConfigure"`

	// Voice translation control parameter.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AsrTranslateConfigure *AsrTranslateConfigureInfo `json:"AsrTranslateConfigure,omitnil,omitempty" name:"AsrTranslateConfigure"`

	// Control parameter of object recognition.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ObjectConfigure *ObjectConfigureInfo `json:"ObjectConfigure,omitnil,omitempty" name:"ObjectConfigure"`

	// Screencapturing interval in seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`

	// Creation time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

type AbnormalLightingConfigureInfo struct {
	// low brightness and overexposure inspection switch, optional values: 
	// <li>ON: enabled;</li> 
	// <li>OFF: disabled.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type AbnormalLightingConfigureInfoForUpdate struct {
	// low brightness and overexposure inspection switch, optional values: 
	// <li>ON: enabled;</li> 
	// <li>OFF: disabled.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type AccelerateAreaInfo struct {
	// Acceleration region. Valid values:
	// <li>Chinese Mainland</li>
	// <li>Outside Chinese Mainland</li>
	Area *string `json:"Area,omitnil,omitempty" name:"Area"`

	// Reason why acceleration is disabled by Tencent Cloud. Valid values:
	// <li>ForLegalReasons: legal reasons</li>
	// <li>ForOverdueBills: overdue payment</li>
	TencentDisableReason *string `json:"TencentDisableReason,omitnil,omitempty" name:"TencentDisableReason"`

	// CNAME of the acceleration domain name
	TencentEdgeDomain *string `json:"TencentEdgeDomain,omitnil,omitempty" name:"TencentEdgeDomain"`
}

type AdaptiveDynamicStreamingInfoItem struct {
	// Adaptive bitrate streaming specification.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The packaging format. Valid values:
	// <li>`HLS`</li>
	// <li>`DASH`</li>
	Package *string `json:"Package,omitnil,omitempty" name:"Package"`

	// Encryption type.
	DrmType *string `json:"DrmType,omitnil,omitempty" name:"DrmType"`

	// Playback address.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// File size (bytes)
	// <li>If the file is an HLS file, the value of this parameter is the sum of the size of the M3U8 and TS files.</li>
	// <li>If the file is a DASH file, the value of this parameter is the sum of the size of the MPD and segment files.</li>
	// <li><font color=red>Note</font>: For adaptive bitrate streaming files generated before 2022-01-10T16:00:00Z, the value of this parameter is `0`.</li>
	Size *int64 `json:"Size,omitnil,omitempty" name:"Size"`

	// Digital watermark type. Optional values:
	// <li>Trace means traceability watermark processing; </li>
	// <li>CopyRight means copyright watermark processing; </li>
	// <li>None means no digital watermark processing. </li>
	DigitalWatermarkType *string `json:"DigitalWatermarkType,omitnil,omitempty" name:"DigitalWatermarkType"`

	// The information of the streams.
	SubStreamSet []*MediaSubStreamInfoItem `json:"SubStreamSet,omitnil,omitempty" name:"SubStreamSet"`

	// Copyright Information.
	CopyRightWatermarkText *string `json:"CopyRightWatermarkText,omitnil,omitempty" name:"CopyRightWatermarkText"`
}

type AdaptiveDynamicStreamingTaskInput struct {
	// Adaptive bitrate streaming template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// List of up to 10 image or text watermarks.
	// Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkSet []*WatermarkInput `json:"WatermarkSet,omitnil,omitempty" name:"WatermarkSet"`

	// Digital watermark.
	TraceWatermark *TraceWatermarkInput `json:"TraceWatermark,omitnil,omitempty" name:"TraceWatermark"`

	// CopyRight Watermark.
	CopyRightWatermark *CopyRightWatermarkInput `json:"CopyRightWatermark,omitnil,omitempty" name:"CopyRightWatermark"`

	// List of subtitle IDs (maximum: 16)
	SubtitleSet []*string `json:"SubtitleSet,omitnil,omitempty" name:"SubtitleSet"`
}

type AdaptiveDynamicStreamingTemplate struct {
	// Unique ID of a transcoding to adaptive bitrate streaming template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Template type. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Name of a transcoding to adaptive bitrate streaming template.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description of a transcoding to adaptive bitrate streaming template.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Adaptive bitstream format. Valid value:
	// <li>HLS.</li>
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// The DRM type. Valid values:
	// <li>SimpleAES</li>
	// <li>Widevine</li>
	// <li>FairPlay</li>
	// If this parameter is an empty string, it indicates that the video is not protected by DRM.
	DrmType *string `json:"DrmType,omitnil,omitempty" name:"DrmType"`

	// The provider of the DRM key. Valid values:
	// <li>SDMC</li>
	// <li>VOD</li>
	// The default is `VOD`.
	DrmKeyProvider *string `json:"DrmKeyProvider,omitnil,omitempty" name:"DrmKeyProvider"`

	// Parameter information of input stream for adaptive bitrate streaming. Up to 10 streams can be input.
	StreamInfos []*AdaptiveStreamTemplate `json:"StreamInfos,omitnil,omitempty" name:"StreamInfos"`

	// Whether to prohibit transcoding from low bitrate to high bitrate. Valid values:
	// <li>0: no,</li>
	// <li>1: yes.</li>
	DisableHigherVideoBitrate *uint64 `json:"DisableHigherVideoBitrate,omitnil,omitempty" name:"DisableHigherVideoBitrate"`

	// Whether to prohibit transcoding from low resolution to high resolution. Valid values:
	// <li>0: no,</li>
	// <li>1: yes.</li>
	DisableHigherVideoResolution *uint64 `json:"DisableHigherVideoResolution,omitnil,omitempty" name:"DisableHigherVideoResolution"`

	// Creation time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// The segment type. This parameter is valid only if `Format` is `HLS`.
	SegmentType *string `json:"SegmentType,omitnil,omitempty" name:"SegmentType"`
}

type AdaptiveStreamTemplate struct {
	// Video parameter information.
	Video *VideoTemplateInfo `json:"Video,omitnil,omitempty" name:"Video"`

	// Audio parameter information.
	Audio *AudioTemplateInfo `json:"Audio,omitnil,omitempty" name:"Audio"`

	// Whether to remove audio stream. Valid values:
	// <li>0: no,</li>
	// <li>1: yes.</li>
	RemoveAudio *uint64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`

	// Whether to remove a video stream. Valid values:
	// <li>0: no</li>
	// <li>1: yes</li>
	RemoveVideo *uint64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// TESHD transcoding parameters
	// Note: This field may return `null`, indicating that no valid value was found.
	TEHDConfig *TEHDConfig `json:"TEHDConfig,omitnil,omitempty" name:"TEHDConfig"`
}

type AiAnalysisResult struct {
	// Task type. Valid values:
	// <li>Classification: intelligent categorization</li>
	// <li>Cover: intelligent cover generating</li>
	// <li>Tag: intelligent tagging</li>
	// <li>FrameTag: intelligent frame tagging</li>
	// <li>Highlight: intelligent highlight generating</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Query result of intelligent categorization task in video content analysis, which is valid if task type is `Classification`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ClassificationTask *AiAnalysisTaskClassificationResult `json:"ClassificationTask,omitnil,omitempty" name:"ClassificationTask"`

	// Query result of intelligent cover generating task in video content analysis, which is valid if task type is `Cover`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	CoverTask *AiAnalysisTaskCoverResult `json:"CoverTask,omitnil,omitempty" name:"CoverTask"`

	// Query result of intelligent tagging task in video content analysis, which is valid if task type is `Tag`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TagTask *AiAnalysisTaskTagResult `json:"TagTask,omitnil,omitempty" name:"TagTask"`

	// Query result of intelligent frame-specific tagging task in video content analysis, which is valid if task type is `FrameTag`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FrameTagTask *AiAnalysisTaskFrameTagResult `json:"FrameTagTask,omitnil,omitempty" name:"FrameTagTask"`

	// Query result of an intelligent highlight generating task in video content analysis, which is valid when task type is `Highlight`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	HighlightTask *AiAnalysisTaskHighlightResult `json:"HighlightTask,omitnil,omitempty" name:"HighlightTask"`
}

type AiAnalysisTaskClassificationInput struct {
	// Intelligent video categorization template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiAnalysisTaskClassificationOutput struct {
	// List of intelligently generated video categories
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `ClassificationSetFileUrl`.
	ClassificationSet []*MediaAiAnalysisClassificationItem `json:"ClassificationSet,omitnil,omitempty" name:"ClassificationSet"`

	// URL to the file for intelligently generated video categories. The file is in JSON format and has the same data structure as `ClassificationSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `ClassificationSetFileUrlExpireTime`.
	ClassificationSetFileUrl *string `json:"ClassificationSetFileUrl,omitnil,omitempty" name:"ClassificationSetFileUrl"`

	// Expiration time of the URL to the file for intelligently generated video categories, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	ClassificationSetFileUrlExpireTime *string `json:"ClassificationSetFileUrlExpireTime,omitnil,omitempty" name:"ClassificationSetFileUrlExpireTime"`
}

type AiAnalysisTaskClassificationResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input of intelligent categorization task.
	Input *AiAnalysisTaskClassificationInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of intelligent categorization task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiAnalysisTaskClassificationOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an intelligent categorization task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the intelligent classification task started to be executed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the intelligent classification task is completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiAnalysisTaskCoverInput struct {
	// Intelligent video cover generating template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiAnalysisTaskCoverOutput struct {
	// List of intelligently generated thumbnails
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `CoverSetFileUrl`.
	CoverSet []*MediaAiAnalysisCoverItem `json:"CoverSet,omitnil,omitempty" name:"CoverSet"`

	// URL to the file for intelligently generated thumbnails. The file is in JSON format and has the same data structure as `CoverSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `CoverSetFileUrlExpireTime`.
	CoverSetFileUrl *string `json:"CoverSetFileUrl,omitnil,omitempty" name:"CoverSetFileUrl"`

	// Expiration time of the URL to the file for intelligently generated thumbnails, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	CoverSetFileUrlExpireTime *string `json:"CoverSetFileUrlExpireTime,omitnil,omitempty" name:"CoverSetFileUrlExpireTime"`
}

type AiAnalysisTaskCoverResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input of intelligent cover generating task.
	Input *AiAnalysisTaskCoverInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of intelligent cover generating task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiAnalysisTaskCoverOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an intelligent thumbnail generation task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the smart cover task started to be executed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the smart cover task is completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiAnalysisTaskFrameTagInput struct {
	// Intelligent frame-specific video tagging template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiAnalysisTaskFrameTagOutput struct {
	// List of frame-specific video tags
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `SegmentSetFileUrl`.
	SegmentSet []*MediaAiAnalysisFrameTagSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file for frame-specific video tags. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `SegmentSetFileUrlExpireTime`.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL to the file for frame-specific video tags, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiAnalysisTaskFrameTagResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input of intelligent frame-specific tagging task.
	Input *AiAnalysisTaskFrameTagInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of intelligent frame-specific tagging task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiAnalysisTaskFrameTagOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an intelligent labeling by frame task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the intelligent frame labeling task started execution, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the intelligent frame labeling task is completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiAnalysisTaskHighlightInput struct {
	// ID of an intelligent highlight generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiAnalysisTaskHighlightOutput struct {
	// List of intelligently generated highlights
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `HighlightSetFileUrl`.
	HighlightSet []*MediaAiAnalysisHighlightItem `json:"HighlightSet,omitnil,omitempty" name:"HighlightSet"`

	// URL to the file for intelligently generated highlights. The file is in JSON format and has the same data structure as `HighlightSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `HighlightSetFileUrlExpireTime`.
	HighlightSetFileUrl *string `json:"HighlightSetFileUrl,omitnil,omitempty" name:"HighlightSetFileUrl"`

	// Expiration time of the URL to the file for intelligently generated highlights, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	HighlightSetFileUrlExpireTime *string `json:"HighlightSetFileUrlExpireTime,omitnil,omitempty" name:"HighlightSetFileUrlExpireTime"`
}

type AiAnalysisTaskHighlightResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input for an intelligent highlight generating task.
	Input *AiAnalysisTaskHighlightInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of an intelligent highlight generating task.
	// Note: This field may return null, indicating that no valid values can be obtained.
	Output *AiAnalysisTaskHighlightOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an intelligent highlight generation task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the smart highlight task started execution, in [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time the smart highlight task completed, in [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiAnalysisTaskInput struct {
	// Video content analysis template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiAnalysisTaskTagInput struct {
	// Intelligent video tagging template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiAnalysisTaskTagOutput struct {
	// List of intelligently generated video tags
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `TagSetFileUrl`.
	TagSet []*MediaAiAnalysisTagItem `json:"TagSet,omitnil,omitempty" name:"TagSet"`

	// URL to the file for intelligently generated video tags. The file is in JSON format and has the same data structure as `TagSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `TagSetFileUrlExpireTime`.
	TagSetFileUrl *string `json:"TagSetFileUrl,omitnil,omitempty" name:"TagSetFileUrl"`

	// Expiration time of the URL to the file for intelligently generated video tags, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	TagSetFileUrlExpireTime *string `json:"TagSetFileUrlExpireTime,omitnil,omitempty" name:"TagSetFileUrlExpireTime"`
}

type AiAnalysisTaskTagResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input of intelligent tagging task.
	Input *AiAnalysisTaskTagInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of intelligent tagging task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiAnalysisTaskTagOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an intelligent labeling task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the smart label task started executing, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the smart label task is completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiContentReviewResult struct {
	// Task type. Valid values:
	// <li>`Porn`: porn information recognition in images</li>
	// <li>`Terrorism`: terrorism information recognition in images</li>
	// <li>`Political`: politically sensitive information recognition in images</li>
	// <li>`Porn.Asr`: ASR-based porn information recognition in speech</li>
	// <li>`Porn.Ocr`: OCR-based porn information recognition in text</li>
	// <li>`Political.Asr`: ASR-based politically sensitive information recognition in speech</li>
	// <li>`Political.Ocr`: OCR-based politically sensitive information recognition in text</li>
	// <li>`Terrorism.Ocr`: OCR-based terrorism information recognition in text</li>
	// <li>`Prohibited.Asr`: ASR-based prohibited information recognition in speech</li>
	// <li>`Prohibited.Ocr`: OCR-based prohibited information recognition in text</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Result for intelligent recognition of pornographic content in images. This parameter is valid when `Type` is `Porn`.
	// Note: This field may return `null`, indicating that no valid value can be found.
	PornTask *AiReviewTaskPornResult `json:"PornTask,omitnil,omitempty" name:"PornTask"`

	// Result for intelligent recognition of terrorism content in images. This parameter is valid when `Type` is `Terrorism`.
	// Note: This field may return `null`, indicating that no valid value can be found.
	TerrorismTask *AiReviewTaskTerrorismResult `json:"TerrorismTask,omitnil,omitempty" name:"TerrorismTask"`

	// Result for intelligent recognition of politically sensitive content in images. This parameter is valid when `Type` is `Political`.
	// Note: This field may return `null`, indicating that no valid value can be found.
	PoliticalTask *AiReviewTaskPoliticalResult `json:"PoliticalTask,omitnil,omitempty" name:"PoliticalTask"`

	// Result for ASR-based recognition of pornographic content. This parameter is valid when `Type` is `Porn.Asr`.
	// Note: This field may return `null`, indicating that no valid value can be found.
	PornAsrTask *AiReviewTaskPornAsrResult `json:"PornAsrTask,omitnil,omitempty" name:"PornAsrTask"`

	// Result for OCR-based recognition of pornographic content. This parameter is valid when `Type` is `Porn.Ocr`.
	// Note: This field may return `null`, indicating that no valid value can be found.
	PornOcrTask *AiReviewTaskPornOcrResult `json:"PornOcrTask,omitnil,omitempty" name:"PornOcrTask"`

	// Result for ASR-based recognition of politically sensitive content. This parameter is valid when `Type` is `Political.Asr`.
	// Note: This field may return `null`, indicating that no valid value can be found.
	PoliticalAsrTask *AiReviewTaskPoliticalAsrResult `json:"PoliticalAsrTask,omitnil,omitempty" name:"PoliticalAsrTask"`

	// Result for OCR-based recognition of politically sensitive content. This parameter is valid when `Type` is `Political.Ocr`.
	// Note: This field may return `null`, indicating that no valid value can be found.
	PoliticalOcrTask *AiReviewTaskPoliticalOcrResult `json:"PoliticalOcrTask,omitnil,omitempty" name:"PoliticalOcrTask"`

	// Result for OCR-based recognition of terrorism content. This parameter is valid when `Type` is `Terrorism.Ocr`.
	// Note: This field may return `null`, indicating that no valid value can be found.
	TerrorismOcrTask *AiReviewTaskTerrorismOcrResult `json:"TerrorismOcrTask,omitnil,omitempty" name:"TerrorismOcrTask"`

	// Result for OCR-based recognition of banned content. This parameter is valid when `Type` is `Prohibited.Ocr`.
	// Note: This field may return `null`, indicating that no valid value can be found.
	ProhibitedOcrTask *AiReviewTaskProhibitedOcrResult `json:"ProhibitedOcrTask,omitnil,omitempty" name:"ProhibitedOcrTask"`

	// Result for ASR-based recognition of banned content. This parameter is valid when `Type` is `Prohibited.Asr`.
	// Note: This field may return `null`, indicating that no valid value can be found.
	ProhibitedAsrTask *AiReviewTaskProhibitedAsrResult `json:"ProhibitedAsrTask,omitnil,omitempty" name:"ProhibitedAsrTask"`
}

type AiContentReviewTaskInput struct {
	// Intelligent recognition template ID
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiRecognitionResult struct {
	// Task type. Valid values:
	// <li>FaceRecognition: face recognition,</li>
	// <li>AsrWordsRecognition: speech keyword recognition,</li>
	// <li>OcrWordsRecognition: text keyword recognition,</li>
	// <li>AsrFullTextRecognition: full speech recognition,</li>
	// <li>AsrTranslateRecognition: voice translation recognition,</li>
	// <li>OcrFullTextRecognition: full text recognition,</li>
	// <li>HeadTailRecognition: video opening and ending credits recognition,</li>
	// <li>ObjectRecognition: object recognition.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Video opening and ending credits recognition result, which is valid when `Type` is
	//  `HeadTailRecognition`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	HeadTailTask *AiRecognitionTaskHeadTailResult `json:"HeadTailTask,omitnil,omitempty" name:"HeadTailTask"`

	// Video splitting recognition result, which is valid when `Type` is
	//  `SegmentRecognition`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SegmentTask *AiRecognitionTaskSegmentResult `json:"SegmentTask,omitnil,omitempty" name:"SegmentTask"`

	// Face recognition result, which is valid when `Type` is 
	//  `FaceRecognition`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FaceTask *AiRecognitionTaskFaceResult `json:"FaceTask,omitnil,omitempty" name:"FaceTask"`

	// Speech keyword recognition result, which is valid when `Type` is
	//  `AsrWordsRecognition`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AsrWordsTask *AiRecognitionTaskAsrWordsResult `json:"AsrWordsTask,omitnil,omitempty" name:"AsrWordsTask"`

	// Full speech recognition result, which is valid when `Type` is
	//  `AsrFullTextRecognition`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AsrFullTextTask *AiRecognitionTaskAsrFullTextResult `json:"AsrFullTextTask,omitnil,omitempty" name:"AsrFullTextTask"`

	// Voice translation result, valid when Type is AsrTranslateRecognition.
	AsrTranslateTask *AiRecognitionTaskAsrTranslateResult `json:"AsrTranslateTask,omitnil,omitempty" name:"AsrTranslateTask"`

	// Text keyword recognition result, which is valid when `Type` is
	//  `OcrWordsRecognition`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	OcrWordsTask *AiRecognitionTaskOcrWordsResult `json:"OcrWordsTask,omitnil,omitempty" name:"OcrWordsTask"`

	// Full text recognition result, which is valid when `Type` is
	//  `OcrFullTextRecognition`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	OcrFullTextTask *AiRecognitionTaskOcrFullTextResult `json:"OcrFullTextTask,omitnil,omitempty" name:"OcrFullTextTask"`

	// Object recognition result, which is valid when `Type` is
	//  `ObjectRecognition`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ObjectTask *AiRecognitionTaskObjectResult `json:"ObjectTask,omitnil,omitempty" name:"ObjectTask"`
}

type AiRecognitionTaskAsrFullTextResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input information of full speech recognition task.
	Input *AiRecognitionTaskAsrFullTextResultInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output information of full speech recognition task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiRecognitionTaskAsrFullTextResultOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// Speech full-text recognition task progress, value range [0-100].
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the full-text speech recognition task started, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the speech full-text recognition task was completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiRecognitionTaskAsrFullTextResultInput struct {
	// Full speech recognition template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiRecognitionTaskAsrFullTextResultOutput struct {
	// List of full-text speech recognition segments
	// <font color=red>Note</font>: this list displays up to the first 100 results. You can get all the results from the file whose URL is `SegmentSetFileUrl`.
	SegmentSet []*AiRecognitionTaskAsrFullTextSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file of the list for full-text speech recognition segments. The file format is JSON, and the data structure is the same as `SegmentSet`. The file will be deleted upon the expiration time `SegmentSetFileUrlExpireTime`, instead of being stored permanently.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// The expiration time of the URLs of full-text speech recognition segments in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format).
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`

	// The subtitle files generated, whose format is determined by the `SubtitleFormats` parameter of [AsrFullTextConfigureInfo](https://intl.cloud.tencent.com/document/api/266/31773?from_cn_redirect=1#AsrFullTextConfigureInfo).
	SubtitleSet []*AiRecognitionTaskAsrFullTextResultOutputSubtitleItem `json:"SubtitleSet,omitnil,omitempty" name:"SubtitleSet"`

	// The URLs of the subtitle files generated, whose format is determined by the `SubtitleFormats` parameter of [AsrFullTextConfigureInfo](https://intl.cloud.tencent.com/document/api/266/31773?from_cn_redirect=1#AsrFullTextConfigureInfo).
	SubtitleUrl *string `json:"SubtitleUrl,omitnil,omitempty" name:"SubtitleUrl"`
}

type AiRecognitionTaskAsrFullTextResultOutputSubtitleItem struct {
	// Media asset subtitle ID, used for media asset subtitle management, only valid when Format is vtt.
	// <font color=red>Note:</font> Tasks before 2024-11-01T10:00:00Z return this field as invalid.
	Id *string `json:"Id,omitnil,omitempty" name:"Id"`

	// Media asset subtitle name, used for player display, only valid when Format is vtt.
	// <font color=red>Note:</font> Tasks before 2024-11-01T10:00:00Z return this field as invalid.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Subtitle Language.
	Language *string `json:"Language,omitnil,omitempty" name:"Language"`

	// The format of the subtitle files. Valid values:
	// <li>vtt</li>
	// <li>srt</li>
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// The URL of a subtitle file.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`
}

type AiRecognitionTaskAsrFullTextSegmentItem struct {
	// Confidence of recognized segment. Value range: 0-100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Start time offset of recognized segment in seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of recognition segment in seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Recognized text.
	Text *string `json:"Text,omitnil,omitempty" name:"Text"`
}

type AiRecognitionTaskAsrTranslateResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. It is not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input information of the voice translation task.
	Input *AiRecognitionTaskAsrTranslateResultInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output information of the voice translation task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiRecognitionTaskAsrTranslateResultOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// Progress of the voice translation task, value range [0-100].
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// Begin process time of the voice translation task, in [ISO date format](https://cloud.tencent.com/document/product/266/11732#I).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the voice translation task is completed, in [ISO date format](https://cloud.tencent.com/document/product/266/11732#I).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiRecognitionTaskAsrTranslateResultInput struct {
	// Voice translation template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiRecognitionTaskAsrTranslateResultOutput struct {
	// Voice translation segments list.
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `SegmentSetFileUrl`.
	SegmentSet []*AiRecognitionTaskAsrTranslateSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file of the list for voice translation segments. The file format is JSON, and the data structure is the same as `SegmentSet`. The file will be deleted upon the expiration time `SegmentSetFileUrlExpireTime`, instead of being stored permanently.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// The expiration time of the URLs of voice translation segments in [ISO date format](https://cloud.tencent.com/document/product/266/11732#iso-date-format).
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`

	// Generated subtitle list.
	SubtitleSet []*AiRecognitionTaskAsrFullTextResultOutputSubtitleItem `json:"SubtitleSet,omitnil,omitempty" name:"SubtitleSet"`
}

type AiRecognitionTaskAsrTranslateSegmentItem struct {
	// Confidence level of the voice translation segment. Value: 0~100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Start time offset of the voice translation segment in seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of the voice translation segment in seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Recognized text.
	Text *string `json:"Text,omitnil,omitempty" name:"Text"`

	// The translation.
	Translation *string `json:"Translation,omitnil,omitempty" name:"Translation"`
}

type AiRecognitionTaskAsrWordsResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input information of speech keyword recognition task.
	Input *AiRecognitionTaskAsrWordsResultInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output information of speech keyword recognition task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiRecognitionTaskAsrWordsResultOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of a speech keyword recognition task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the speech keyword recognition task started, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the speech keyword recognition task is completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiRecognitionTaskAsrWordsResultInput struct {
	// Speech keyword recognition template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiRecognitionTaskAsrWordsResultItem struct {
	// Speech keyword.
	Word *string `json:"Word,omitnil,omitempty" name:"Word"`

	// List of time segments that contain the speech keyword.
	SegmentSet []*AiRecognitionTaskAsrWordsSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`
}

type AiRecognitionTaskAsrWordsResultOutput struct {
	// Speech keyword recognition result set
	// <font color=red>Note</font>: this list displays up to the first 100 results. You can get all the results from the file whose URL is `SegmentSetFileUrl`.
	ResultSet []*AiRecognitionTaskAsrWordsResultItem `json:"ResultSet,omitnil,omitempty" name:"ResultSet"`

	// URL to the file of the speech keyword recognition result set. The file format is JSON, and the data structure is the same as `SegmentSet`. The file will be deleted upon the expiration time `SegmentSetFileUrlExpireTime`, instead of being stored permanently.
	ResultSetFileUrl *string `json:"ResultSetFileUrl,omitnil,omitempty" name:"ResultSetFileUrl"`

	// Expiration time of the URL to the file of the speech keyword recognition result set, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732)
	ResultSetFileUrlExpireTime *string `json:"ResultSetFileUrlExpireTime,omitnil,omitempty" name:"ResultSetFileUrlExpireTime"`
}

type AiRecognitionTaskAsrWordsSegmentItem struct {
	// Start time offset of recognized segment in seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of recognition segment in seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Confidence of recognized segment. Value range: 0-100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`
}

type AiRecognitionTaskFaceResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input information of face recognition task.
	Input *AiRecognitionTaskFaceResultInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output information of face recognition task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiRecognitionTaskFaceResultOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of a face recognition task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the face recognition task started, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the face recognition task was completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiRecognitionTaskFaceResultInput struct {
	// Face recognition template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiRecognitionTaskFaceResultItem struct {
	// Unique ID of figure.
	Id *string `json:"Id,omitnil,omitempty" name:"Id"`

	// Figure library type, indicating to which figure library the recognized figure belongs:
	// <li>Default: default figure library;</li>
	// <li>UserDefine: custom figure library.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Figure name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Result set of segments that contain a figure.
	SegmentSet []*AiRecognitionTaskFaceSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`
}

type AiRecognitionTaskFaceResultOutput struct {
	// Intelligent face recognition result set
	// <font color=red>Note</font>: this list displays up to the first 100 results. You can get all the results from the file whose URL is `SegmentSetFileUrl`.
	ResultSet []*AiRecognitionTaskFaceResultItem `json:"ResultSet,omitnil,omitempty" name:"ResultSet"`

	// URL to the file of the intelligent face recognition result set. The file format is JSON, and the data structure is the same as `SegmentSet`. The file will be deleted upon the expiration time `SegmentSetFileUrlExpireTime`, instead of being stored permanently.
	ResultSetFileUrl *string `json:"ResultSetFileUrl,omitnil,omitempty" name:"ResultSetFileUrl"`

	// Expiration time of the URL to the file of the intelligent face recognition result set, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732)
	ResultSetFileUrlExpireTime *string `json:"ResultSetFileUrlExpireTime,omitnil,omitempty" name:"ResultSetFileUrlExpireTime"`
}

type AiRecognitionTaskFaceSegmentItem struct {
	// Start time offset of recognized segment in seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of recognition segment in seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Confidence of recognized segment. Value range: 0-100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Zone coordinates of recognition result. The array contains four elements: [x1,y1,x2,y2], i.e., the horizontal and vertical coordinates of the top-left and bottom-right corners.
	AreaCoordSet []*int64 `json:"AreaCoordSet,omitnil,omitempty" name:"AreaCoordSet"`
}

type AiRecognitionTaskHeadTailResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input information of video opening and ending credits recognition task.
	Input *AiRecognitionTaskHeadTailResultInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output information of video opening and ending credits recognition task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiRecognitionTaskHeadTailResultOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an opening/closing segment recognition task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the video start and end recognition task starts, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the video start and end recognition task is completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiRecognitionTaskHeadTailResultInput struct {
	// Video opening and ending credits recognition template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiRecognitionTaskHeadTailResultOutput struct {
	// Confidence of recognized opening credits. Value range: 0-100.
	HeadConfidence *float64 `json:"HeadConfidence,omitnil,omitempty" name:"HeadConfidence"`

	// End time point of video opening credits in seconds.
	HeadTimeOffset *float64 `json:"HeadTimeOffset,omitnil,omitempty" name:"HeadTimeOffset"`

	// Confidence of recognized closing credits. Value range: 0-100.
	TailConfidence *float64 `json:"TailConfidence,omitnil,omitempty" name:"TailConfidence"`

	// Start time point of video closing credits in seconds.
	TailTimeOffset *float64 `json:"TailTimeOffset,omitnil,omitempty" name:"TailTimeOffset"`
}

type AiRecognitionTaskInput struct {
	// Intelligent video recognition template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiRecognitionTaskObjectResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input information of object recognition task.
	Input *AiRecognitionTaskObjectResultInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output information of object recognition task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiRecognitionTaskObjectResultOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an object recognition task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the object recognition task started execution, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the object recognition task is completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiRecognitionTaskObjectResultInput struct {
	// Object recognition template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiRecognitionTaskObjectResultItem struct {
	// Name of recognized object.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// List of segments that contain an object.
	//
	// Deprecated: SegmentSet is deprecated.
	SegmentSet []*AiRecognitionTaskObjectSeqmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// List of fragments in which the object appears.
	RecognitionSegmentSet []*AiRecognitionTaskObjectSegmentItem `json:"RecognitionSegmentSet,omitnil,omitempty" name:"RecognitionSegmentSet"`
}

type AiRecognitionTaskObjectResultOutput struct {
	// Intelligent object recognition result set
	// <font color=red>Note</font>: this list displays up to the first 100 results. You can get all the results from the file whose URL is `SegmentSetFileUrl`.
	ResultSet []*AiRecognitionTaskObjectResultItem `json:"ResultSet,omitnil,omitempty" name:"ResultSet"`

	// URL to the file of the object recognition result set. The file format is JSON, and the data structure is the same as `SegmentSet`. The file will be deleted upon the expiration time `SegmentSetFileUrlExpireTime`, instead of being stored permanently.
	ResultSetFileUrl *string `json:"ResultSetFileUrl,omitnil,omitempty" name:"ResultSetFileUrl"`

	// Expiration time of the URL to the object recognition result set, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732)
	ResultSetFileUrlExpireTime *string `json:"ResultSetFileUrlExpireTime,omitnil,omitempty" name:"ResultSetFileUrlExpireTime"`
}

type AiRecognitionTaskObjectSegmentItem struct {
	// Identifies the offset time of the beginning of the segment, in seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// Offset time to identify the end of the segment, in seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Identify segment confidence. Value: 0~100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// The area coordinates of the recognition result. The array contains 4 elements [x1, y1, x2, y2], which in turn represent the horizontal and vertical coordinates of the upper left point and lower right point of the area.
	AreaCoordSet []*int64 `json:"AreaCoordSet,omitnil,omitempty" name:"AreaCoordSet"`
}

type AiRecognitionTaskObjectSeqmentItem struct {
	// Start time offset of recognized segment in seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of recognition segment in seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Confidence of recognized segment. Value range: 0-100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Zone coordinates of recognition result. The array contains four elements: [x1,y1,x2,y2], i.e., the horizontal and vertical coordinates of the top-left and bottom-right corners.
	AreaCoordSet []*int64 `json:"AreaCoordSet,omitnil,omitempty" name:"AreaCoordSet"`
}

type AiRecognitionTaskOcrFullTextResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input information of full text recognition task.
	Input *AiRecognitionTaskOcrFullTextResultInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output information of full text recognition task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiRecognitionTaskOcrFullTextResultOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of a full text recognition task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the full text recognition task started, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the full text recognition task was completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiRecognitionTaskOcrFullTextResultInput struct {
	// Full text recognition template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiRecognitionTaskOcrFullTextResultOutput struct {
	// Full-text recognition result set
	// <font color=red>Note</font>: this list displays up to the first 100 results. You can get all the results from the file whose URL is `SegmentSetFileUrl`.
	SegmentSet []*AiRecognitionTaskOcrFullTextSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file of the full-text recognition result set. The file format is JSON, and the data structure is the same as `SegmentSet`. The file will be deleted upon the expiration time `SegmentSetFileUrlExpireTime`, instead of being stored permanently.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL to the file of the full-text recognition result set, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiRecognitionTaskOcrFullTextSegmentItem struct {
	// Start time offset of recognized segment in seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of recognition segment in seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Recognition segment result set.
	TextSet []*AiRecognitionTaskOcrFullTextSegmentTextItem `json:"TextSet,omitnil,omitempty" name:"TextSet"`
}

type AiRecognitionTaskOcrFullTextSegmentTextItem struct {
	// Confidence of recognized segment. Value range: 0-100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Zone coordinates of recognition result. The array contains four elements: [x1,y1,x2,y2], i.e., the horizontal and vertical coordinates of the top-left and bottom-right corners.
	AreaCoordSet []*int64 `json:"AreaCoordSet,omitnil,omitempty" name:"AreaCoordSet"`

	// Recognized text.
	Text *string `json:"Text,omitnil,omitempty" name:"Text"`
}

type AiRecognitionTaskOcrWordsResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input information of text keyword recognition task.
	Input *AiRecognitionTaskOcrWordsResultInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output information of text keyword recognition task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiRecognitionTaskOcrWordsResultOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of a text keyword recognition task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the text keyword recognition task started, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the text keyword recognition task is completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiRecognitionTaskOcrWordsResultInput struct {
	// Text keyword recognition template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiRecognitionTaskOcrWordsResultItem struct {
	// Text keyword.
	Word *string `json:"Word,omitnil,omitempty" name:"Word"`

	// List of segments that contain a text keyword.
	SegmentSet []*AiRecognitionTaskOcrWordsSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`
}

type AiRecognitionTaskOcrWordsResultOutput struct {
	// Text keyword recognition result set
	// <font color=red>Note</font>: this list displays up to the first 100 results. You can get all the results from the file whose URL is `SegmentSetFileUrl`.
	ResultSet []*AiRecognitionTaskOcrWordsResultItem `json:"ResultSet,omitnil,omitempty" name:"ResultSet"`

	// URL to the file of the text keyword recognition result set. The file format is JSON, and the data structure is the same as `SegmentSet`. The file will be deleted upon the expiration time `SegmentSetFileUrlExpireTime`, instead of being stored permanently.
	ResultSetFileUrl *string `json:"ResultSetFileUrl,omitnil,omitempty" name:"ResultSetFileUrl"`

	// Expiration time of the URL to the file of the text keyword recognition result set, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732)
	ResultSetFileUrlExpireTime *string `json:"ResultSetFileUrlExpireTime,omitnil,omitempty" name:"ResultSetFileUrlExpireTime"`
}

type AiRecognitionTaskOcrWordsSegmentItem struct {
	// Start time offset of recognized segment in seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of recognition segment in seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Confidence of recognized segment. Value range: 0-100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Zone coordinates of recognition result. The array contains four elements: [x1,y1,x2,y2], i.e., the horizontal and vertical coordinates of the top-left and bottom-right corners.
	AreaCoordSet []*int64 `json:"AreaCoordSet,omitnil,omitempty" name:"AreaCoordSet"`
}

type AiRecognitionTaskSegmentResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input information of video splitting task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Input *AiRecognitionTaskSegmentResultInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output information of video splitting task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *AiRecognitionTaskSegmentResultOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of a video splitting task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the video detachment task started, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the video stripping task is completed is in [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type AiRecognitionTaskSegmentResultInput struct {
	// Video splitting template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiRecognitionTaskSegmentResultOutput struct {
	// List of split video segments
	// <font color=red>Note</font>: this list displays up to the first 100 results. You can get all the results from the file whose URL is `SegmentSetFileUrl`.
	SegmentSet []*AiRecognitionTaskSegmentSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file of the list for split video segments. The file format is JSON, and the data structure is the same as `SegmentSet`. The file will be deleted upon the expiration time `SegmentSetFileUrlExpireTime`, instead of being stored permanently.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL to the file of the list for split video segments, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiRecognitionTaskSegmentSegmentItem struct {
	// File ID, which is valid only when a VOD file is processed and the subsegments generated through segmentation are also VOD files.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Split video segment URL.
	SegmentUrl *string `json:"SegmentUrl,omitnil,omitempty" name:"SegmentUrl"`

	// Confidence of split segment. Value range: 0-100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Start time offset of split segment in seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of split segment in seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Split cover image URL.
	CovImgUrl *string `json:"CovImgUrl,omitnil,omitempty" name:"CovImgUrl"`

	// Special field, which should be ignored.
	SpecialInfo *string `json:"SpecialInfo,omitnil,omitempty" name:"SpecialInfo"`
}

type AiReviewPoliticalAsrTaskInput struct {
	// ID of the template for recognition of politically sensitive content
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiReviewPoliticalAsrTaskOutput struct {
	// Confidence score for the ASR-detected politically sensitive content. Value range: 0-100
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Processing suggestion for the ASR-detected politically sensitive content. Valid values:
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// List of video segments that contain ASR-detected politically sensitive content
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `SegmentSetFileUrl`.
	SegmentSet []*MediaContentReviewAsrTextSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file for video segments that contain ASR-detected politically sensitive content. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `SegmentSetFileUrlExpireTime`.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL to the file for video segments that contain ASR-detected politically sensitive content, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiReviewPoliticalOcrTaskInput struct {
	// ID of the template for recognition of politically sensitive content
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiReviewPoliticalOcrTaskOutput struct {
	// Confidence score for the OCR-detected politically sensitive content. Value range: 0-100
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Processing suggestion for the OCR-detected politically sensitive content. Valid values:
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// List of video segments that contain OCR-detected politically sensitive content
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `SegmentSetFileUrl`.
	SegmentSet []*MediaContentReviewOcrTextSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file for video segments that contain OCR-detected politically sensitive content. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `SegmentSetFileUrlExpireTime`.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL to the file for video segments that contain OCR-detected politically sensitive content, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiReviewPoliticalTaskInput struct {
	// ID of the template for recognition of politically sensitive content
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiReviewPoliticalTaskOutput struct {
	// Confidence score for the detected politically sensitive content. Value range: 0-100
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Processing suggestion for the detected politically sensitive content
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// Labels for the detected politically sensitive content. The relationship between the values of this parameter and those of the `LabelSet` parameter in [PoliticalImgReviewTemplateInfo](https://intl.cloud.tencent.com/document/api/266/31773?from_cn_redirect=1#PoliticalImgReviewTemplateInfo) is as follows:
	// violation_photo:
	// <li>`violation_photo`: banned images</li>
	// Other values (politician/entertainment/sport/entrepreneur/scholar/celebrity/military):
	// <li>`politician`: politically sensitive people</li>
	Label *string `json:"Label,omitnil,omitempty" name:"Label"`

	// List of video segments that contain detected politically sensitive content
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `SegmentSetFileUrl`.
	SegmentSet []*MediaContentReviewPoliticalSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file for video segments that contain detected politically sensitive content. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `SegmentSetFileUrlExpireTime`.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL to the file for video segments that contain politically sensitive content, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiReviewPornAsrTaskInput struct {
	// ID of the template for recognition of pornographic content
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiReviewPornAsrTaskOutput struct {
	// Confidence score for the ASR-detected pornographic content
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Processing suggestion for the ASR-detected pornographic content
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// List of video segments that contain ASR-detected pornographic content
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `SegmentSetFileUrl`.
	SegmentSet []*MediaContentReviewAsrTextSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file for video segments that contain ASR-detected pornographic content. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `SegmentSetFileUrlExpireTime`.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL to the file for video segments that contain ASR-detected pornographic content, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiReviewPornOcrTaskInput struct {
	// ID of the template for recognition of pornographic content
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiReviewPornOcrTaskOutput struct {
	// Confidence score for the OCR-detected pornographic content
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Processing suggestion for the OCR-detected pornographic content
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// List of video segments that contain OCR-detected pornographic content
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `SegmentSetFileUrl`.
	SegmentSet []*MediaContentReviewOcrTextSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file for video segments that contain OCR-detected pornographic content. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `SegmentSetFileUrlExpireTime`.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL to the file for video segments that contain OCR-detected pornographic content, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiReviewPornTaskInput struct {
	// ID of the template for recognition of pornographic content
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiReviewPornTaskOutput struct {
	// Confidence score for the detected pornographic content. Value range: 0-100
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Processing suggestion for the detected pornographic content. Valid values:
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// Labels for the detected pornographic content. Valid values:
	// <li>porn</li>
	// <li>sexy</li>
	// <li>vulgar</li>
	// <li>intimacy</li>
	Label *string `json:"Label,omitnil,omitempty" name:"Label"`

	// List of video segments that contain detected pornographic content
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `SegmentSetFileUrl`.
	SegmentSet []*MediaContentReviewSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file for video segments that contain detected pornographic content. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `SegmentSetFileUrlExpireTime`.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL to the file for video segments that contain detected pornographic content, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiReviewProhibitedAsrTaskInput struct {
	// Prohibited information detection template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiReviewProhibitedAsrTaskOutput struct {
	// Score of ASR-detected prohibited information in speech between 0 and 100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Suggestion for ASR-detected prohibited information in speech. Valid values:
	// <li>pass.</li>
	// <li>review.</li>
	// <li>block.</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// List of video segments that contain ASR-detected prohibited information
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `SegmentSetFileUrl`.
	SegmentSet []*MediaContentReviewAsrTextSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file for video segments that contain ASR-detected prohibited information. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `SegmentSetFileUrlExpireTime`.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL to the file for video segments that contain ASR-detected prohibited information, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiReviewProhibitedOcrTaskInput struct {
	// Prohibited information detection template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiReviewProhibitedOcrTaskOutput struct {
	// Score of OCR-detected prohibited information in text between 0 and 100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Suggestion for OCR-detected prohibited information in text. Valid values:
	// <li>pass.</li>
	// <li>review.</li>
	// <li>block.</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// List of video segments that contain OCR-detected prohibited information
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `SegmentSetFileUrl`.
	SegmentSet []*MediaContentReviewOcrTextSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file for video segments that contain OCR-detected prohibited information. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `SegmentSetFileUrlExpireTime`.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL for video segments that contain OCR-detected prohibited information, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiReviewTaskPoliticalAsrResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input for ASR-based recognition of politically sensitive content
	Input *AiReviewPoliticalAsrTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output for ASR-based recognition of politically sensitive content
	Output *AiReviewPoliticalAsrTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an ASR-based moderation task (politically sensitive content). Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

type AiReviewTaskPoliticalOcrResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input for OCR-based recognition of politically sensitive content
	Input *AiReviewPoliticalOcrTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output for OCR-based recognition of politically sensitive content
	// Note: This field may return `null`, indicating that no valid value can be found.
	Output *AiReviewPoliticalOcrTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// Audio and video review OCR text involves the task progress of inappropriate information, the value range is [0-100].
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

type AiReviewTaskPoliticalResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input for intelligent recognition of politically sensitive content
	Input *AiReviewPoliticalTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output for intelligent recognition of politically sensitive content
	// Note: This field may return `null`, indicating that no valid value can be found.
	Output *AiReviewPoliticalTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of a moderation task (politically sensitive content). Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

type AiReviewTaskPornAsrResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input for ASR-based recognition of pornographic content
	Input *AiReviewPornAsrTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output for ASR-based recognition of pornographic content
	// Note: This field may return `null`, indicating that no valid value can be found.
	Output *AiReviewPornAsrTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an ASR-based moderation task (pornographic content). Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

type AiReviewTaskPornOcrResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input for OCR-based recognition of pornographic content
	Input *AiReviewPornOcrTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output for OCR-based recognition of pornographic content
	// Note: This field may return `null`, indicating that no valid value can be found.
	Output *AiReviewPornOcrTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an OCR-based moderation task (pornographic content). Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

type AiReviewTaskPornResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input for intelligent recognition of pornographic content
	Input *AiReviewPornTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output for intelligent recognition of pornographic content
	// Note: This field may return `null`, indicating that no valid value can be found.
	Output *AiReviewPornTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of a moderation task (pornographic content). Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

type AiReviewTaskProhibitedAsrResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input for ASR-based recognition of banned content
	Input *AiReviewProhibitedAsrTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output for ASR-based recognition of banned content
	// Note: This field may return `null`, indicating that no valid value can be found.
	Output *AiReviewProhibitedAsrTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an ASR-based moderation task (banned content). Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

type AiReviewTaskProhibitedOcrResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input for OCR-based recognition of banned content
	Input *AiReviewProhibitedOcrTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output for OCR-based recognition of banned content
	// Note: This field may return `null`, indicating that no valid value can be found.
	Output *AiReviewProhibitedOcrTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an OCR-based moderation task (banned content). Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

type AiReviewTaskTerrorismOcrResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input for OCR-based recognition of terrorism content
	Input *AiReviewTerrorismOcrTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output for OCR-based recognition of terrorism content
	// Note: This field may return `null`, indicating that no valid value can be found.
	Output *AiReviewTerrorismOcrTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an OCR-based moderation task (terrorist content). Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

type AiReviewTaskTerrorismResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input for intelligent recognition of terrorism content
	Input *AiReviewTerrorismTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output for intelligent recognition of terrorism content
	// Note: This field may return `null`, indicating that no valid value can be found.
	Output *AiReviewTerrorismTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of a moderation task (terrorist content). Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

type AiReviewTerrorismOcrTaskInput struct {
	// ID of the template for recognition of terrorism content
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiReviewTerrorismOcrTaskOutput struct {
	// Confidence score for the OCR-detected terrorism content. Value range: 0-100
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Processing suggestion for the OCR-detected terrorism content
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// List of video segments that contain OCR-detected terrorism content
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `SegmentSetFileUrl`.
	SegmentSet []*MediaContentReviewOcrTextSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file for video segments that contain OCR-detected terrorism content. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `SegmentSetFileUrlExpireTime`.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL to the file for video segments that contain OCR-detected terrorism content, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiReviewTerrorismTaskInput struct {
	// ID of the template for recognition of terrorism content
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type AiReviewTerrorismTaskOutput struct {
	// Score of detected terrorism information in a video between 0 and 100.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Suggestion for detected terrorism information. Valid values:
	// <li>pass.</li>
	// <li>review.</li>
	// <li>block.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// Tag of the detected terrorism information in a video. Valid values:
	// <li>`guns`: weapons and guns</li>
	// <li>`crowd`: crowds</li>
	// <li>`police`: police forces</li>
	// <li>`bloody`: bloody images</li>
	// <li>`banners`: terrorism flags</li>
	// <li>`militant`: militants</li>
	// <li>`explosion`: explosions and fires</li>
	// <li>`terrorists`: terrorists</li>
	// <li>`scenario`: terrorism images</li>
	Label *string `json:"Label,omitnil,omitempty" name:"Label"`

	// List of video segments that contain terrorism information
	// <font color=red>Note</font>: This list displays the first 100 results at most. You can get all the results from the file at the URL specified by `SegmentSetFileUrl`.
	SegmentSet []*MediaContentReviewSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// URL to the file for video segments that contain terrorism information. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time specified by `SegmentSetFileUrlExpireTime`.
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Expiration time of the URL to the file for video segments that contain terrorism information, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type AiSampleFaceInfo struct {
	// Face image ID.
	FaceId *string `json:"FaceId,omitnil,omitempty" name:"FaceId"`

	// Face image address.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`
}

type AiSampleFaceOperation struct {
	// Operation type. Valid values: add, delete, reset. The `reset` operation will clear the existing face data of a figure and add `FaceContents` as the specified face data.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Face ID set, which is required if `Type` is `delete`.
	FaceIds []*string `json:"FaceIds,omitnil,omitempty" name:"FaceIds"`

	// Face image [Base64](https://tools.ietf.org/html/rfc4648) Encoded string collection, only supports jpeg and png image formats. 
	// <li>When Type is add or reset, this field is required;</li>
	// <li>Array length limit: 5 pictures. </li>
	// Note: The picture must be a clear frontal photo of a single person, with a pixel size of no less than 200*200.
	FaceContents []*string `json:"FaceContents,omitnil,omitempty" name:"FaceContents"`
}

type AiSampleFailFaceInfo struct {
	// It corresponds to incorrect image subscripts in the `FaceContents` input parameter, starting from 0.
	Index *uint64 `json:"Index,omitnil,omitempty" name:"Index"`

	// Error code. Valid values:
	// <li>0: success;</li>
	// <li>Other values: failure.</li>
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`
}

type AiSamplePerson struct {
	// Figure ID.
	PersonId *string `json:"PersonId,omitnil,omitempty" name:"PersonId"`

	// Figure name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Figure description.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	// Face information.
	FaceInfoSet []*AiSampleFaceInfo `json:"FaceInfoSet,omitnil,omitempty" name:"FaceInfoSet"`

	// Figure tag.
	TagSet []*string `json:"TagSet,omitnil,omitempty" name:"TagSet"`

	// Use case.
	UsageSet []*string `json:"UsageSet,omitnil,omitempty" name:"UsageSet"`

	// Creation time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

type AiSampleTagOperation struct {
	// Operation type. Valid values: add, delete, reset.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Tag. Length limit: 128 characters.
	Tags []*string `json:"Tags,omitnil,omitempty" name:"Tags"`
}

type AiSampleWord struct {
	// Keyword.
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Keyword tag.
	TagSet []*string `json:"TagSet,omitnil,omitempty" name:"TagSet"`

	// Keyword use case.
	UsageSet []*string `json:"UsageSet,omitnil,omitempty" name:"UsageSet"`

	// Creation time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

type AiSampleWordInfo struct {
	// Keyword. Length limit: 20 characters.
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Keyword tag
	// <li>Array length limit: 20 tags;</li>
	// <li>Tag length limit: 128 characters.</li>
	Tags []*string `json:"Tags,omitnil,omitempty" name:"Tags"`
}

type AnimatedGraphicTaskInput struct {
	// Animated image generating template ID
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Start time offset of an animated image in the video, in seconds.
	// <li>If this parameter is left empty or set to 0, the animated image will start at the same time as the video.</li>
	// <li>If this parameter is set to a positive number (n for example), the animated image will start at the nth second of the video.</li>
	// <li>If this parameter is set to a negative number (-n for example), the animated image will start at the nth second before the end of the video.</li>
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of an animated image in the video, in seconds.
	// <li>If this parameter is left empty or set to 0, the animated image will end at the same time as the video.</li>
	// <li>If this parameter is set to a positive number (n for example), the animated image will end at the nth second of the video.</li>
	// <li>If this parameter is set to a negative number (-n for example), the animated image will end at the nth second before the end of the video.</li>
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`
}

type AnimatedGraphicsTemplate struct {
	// Unique ID of an animated image generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Template type. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Name of an animated image generating template.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description of an animated image generating template.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Maximum value of the width (or long side) of an animated image in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of an animated image in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Animated image format.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Frame rate.
	Fps *uint64 `json:"Fps,omitnil,omitempty" name:"Fps"`

	// Image quality.
	Quality *float64 `json:"Quality,omitnil,omitempty" name:"Quality"`

	// Creation time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

// Predefined struct for user
type ApplyUploadRequestParams struct {
	// Media type. For the detailed valid values, please see [Upload Overview](https://intl.cloud.tencent.com/document/product/266/9760?from_cn_redirect=1#.E6.96.87.E4.BB.B6.E7.B1.BB.E5.9E.8B).
	MediaType *string `json:"MediaType,omitnil,omitempty" name:"MediaType"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media name.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// Cover type. For the detailed valid values, please see [Upload Overview](https://intl.cloud.tencent.com/document/product/266/9760?from_cn_redirect=1#.E6.96.87.E4.BB.B6.E7.B1.BB.E5.9E.8B).
	CoverType *string `json:"CoverType,omitnil,omitempty" name:"CoverType"`

	// Subsequent task operation on a media file, i.e., after a media file is uploaded, task flow operations will be initiated automatically. This parameter value is a task flow template name. VOD supports [creating task flow templates](https://intl.cloud.tencent.com/document/product/266/33819?from_cn_redirect=1) and naming the templates.
	Procedure *string `json:"Procedure,omitnil,omitempty" name:"Procedure"`

	// Expiration time of a media file in ISO 8601 format. For more information, please see [Notes on ISO Date Format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F).
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// Specifies upload region. This is only applicable to users that have special requirements for the upload region.
	StorageRegion *string `json:"StorageRegion,omitnil,omitempty" name:"StorageRegion"`

	// Category ID, which is used to categorize the media for management. A category can be created and its ID can be obtained by using the [category creating](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API.
	// <li>Default value: 0, which means "Other".</li>
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// Source context, which is used to pass through the user request information. The [upload callback](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) API will return the value of this field. It can contain up to 250 characters.
	SourceContext *string `json:"SourceContext,omitnil,omitempty" name:"SourceContext"`

	// Session context, which is used to pass through the user request information. If the `Procedure` parameter is specified, the [task flow status change callback](https://intl.cloud.tencent.com/document/product/266/9636?from_cn_redirect=1) API will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Reserved parameter for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type ApplyUploadRequest struct {
	*tchttp.BaseRequest
	
	// Media type. For the detailed valid values, please see [Upload Overview](https://intl.cloud.tencent.com/document/product/266/9760?from_cn_redirect=1#.E6.96.87.E4.BB.B6.E7.B1.BB.E5.9E.8B).
	MediaType *string `json:"MediaType,omitnil,omitempty" name:"MediaType"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media name.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// Cover type. For the detailed valid values, please see [Upload Overview](https://intl.cloud.tencent.com/document/product/266/9760?from_cn_redirect=1#.E6.96.87.E4.BB.B6.E7.B1.BB.E5.9E.8B).
	CoverType *string `json:"CoverType,omitnil,omitempty" name:"CoverType"`

	// Subsequent task operation on a media file, i.e., after a media file is uploaded, task flow operations will be initiated automatically. This parameter value is a task flow template name. VOD supports [creating task flow templates](https://intl.cloud.tencent.com/document/product/266/33819?from_cn_redirect=1) and naming the templates.
	Procedure *string `json:"Procedure,omitnil,omitempty" name:"Procedure"`

	// Expiration time of a media file in ISO 8601 format. For more information, please see [Notes on ISO Date Format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F).
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// Specifies upload region. This is only applicable to users that have special requirements for the upload region.
	StorageRegion *string `json:"StorageRegion,omitnil,omitempty" name:"StorageRegion"`

	// Category ID, which is used to categorize the media for management. A category can be created and its ID can be obtained by using the [category creating](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API.
	// <li>Default value: 0, which means "Other".</li>
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// Source context, which is used to pass through the user request information. The [upload callback](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) API will return the value of this field. It can contain up to 250 characters.
	SourceContext *string `json:"SourceContext,omitnil,omitempty" name:"SourceContext"`

	// Session context, which is used to pass through the user request information. If the `Procedure` parameter is specified, the [task flow status change callback](https://intl.cloud.tencent.com/document/product/266/9636?from_cn_redirect=1) API will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Reserved parameter for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *ApplyUploadRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ApplyUploadRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MediaType")
	delete(f, "SubAppId")
	delete(f, "MediaName")
	delete(f, "CoverType")
	delete(f, "Procedure")
	delete(f, "ExpireTime")
	delete(f, "StorageRegion")
	delete(f, "ClassId")
	delete(f, "SourceContext")
	delete(f, "SessionContext")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ApplyUploadRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ApplyUploadResponseParams struct {
	// Storage bucket, which is used as the `bucket_name` in the URL of the upload API.
	StorageBucket *string `json:"StorageBucket,omitnil,omitempty" name:"StorageBucket"`

	// Storage region, which is used as the `Region` in the `Host` of the upload API.
	StorageRegion *string `json:"StorageRegion,omitnil,omitempty" name:"StorageRegion"`

	// VOD session, which is used to confirm the `VodSessionKey` parameter of the upload API.
	VodSessionKey *string `json:"VodSessionKey,omitnil,omitempty" name:"VodSessionKey"`

	// Media storage path, which is used as the `Key` of the stored media of the upload API.
	// Note: this field may return null, indicating that no valid values can be obtained.
	MediaStoragePath *string `json:"MediaStoragePath,omitnil,omitempty" name:"MediaStoragePath"`

	// Cover storage path, which is used as the `Key` of the stored cover of the upload API.
	// Note: this field may return null, indicating that no valid values can be obtained.
	CoverStoragePath *string `json:"CoverStoragePath,omitnil,omitempty" name:"CoverStoragePath"`

	// Temporary credential, which is used for authentication of the upload API.
	TempCertificate *TempCertificate `json:"TempCertificate,omitnil,omitempty" name:"TempCertificate"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ApplyUploadResponse struct {
	*tchttp.BaseResponse
	Response *ApplyUploadResponseParams `json:"Response"`
}

func (r *ApplyUploadResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ApplyUploadResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ArtifactRepairInfo struct {
	// Whether to enable artifact removal. Valid values:
	// <li>`ON`</li>
	// <li>`OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The artifact removal type. This parameter is valid only if `Switch` is `ON`. Valid values:
	// <li>`weak`</li>
	// <li>`strong`</li>
	// Default value: `weak`.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type AsrFullTextConfigureInfo struct {
	// Switch of full speech recognition task. Valid values:
	// <li>ON: enables intelligent full speech recognition task;</li>
	// <li>OFF: disables intelligent full speech recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The formats of the subtitle files generated. If this parameter is not passed or an empty string is passed in, no subtitles files will be generated. Valid values:
	// <li>vtt</li>
	// <li>srt</li>
	SubtitleFormats []*string `json:"SubtitleFormats,omitnil,omitempty" name:"SubtitleFormats"`

	// The format of the subtitle file generated. If this parameter is not passed or an empty string is passed in, no subtitles files will be generated. Valid values:
	// <li>vtt</li>
	// <li>srt</li>
	// <font color='red'>Note: This parameter has been deprecated. Please use `SubtitleFormats` instead.</font>
	SubtitleFormat *string `json:"SubtitleFormat,omitnil,omitempty" name:"SubtitleFormat"`

	// Media source language value range: <li>zh: Mandarin </li> <li>en: English</li> <li>ja: Japanese </li> <li>zh-ca: Cantonese</li><font color=red>Note: </font> If it fills in an empty string or leaves this parameter blank, it will be automatically recognized (it is recommended to fill in the language corresponding to the media to improve the recognition accuracy).
	SrcLanguage *string `json:"SrcLanguage,omitnil,omitempty" name:"SrcLanguage"`

	// Specify subtitle name, length limit: 64 characters. This value will be displayed by the player. If not provided, VOD will automatically generate it.
	// <font color=red>Note:</font> This field is valid only when SubtitleFormats includes vtt.
	SubtitleName *string `json:"SubtitleName,omitnil,omitempty" name:"SubtitleName"`
}

type AsrFullTextConfigureInfoForUpdate struct {
	// Switch of full speech recognition task. Valid values:
	// <li>ON: enables intelligent full speech recognition task;</li>
	// <li>OFF: disables intelligent full speech recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The modification information of the subtitle format list.
	SubtitleFormatsOperation *SubtitleFormatsOperation `json:"SubtitleFormatsOperation,omitnil,omitempty" name:"SubtitleFormatsOperation"`

	// The format of the subtitle file generated. <font color='red'>If you pass in an empty string</font>, no subtitle files will be generated. Valid values:
	// <li>vtt</li>
	// <li>srt</li>
	// <font color='red'>Note: This parameter has been deprecated. Please use `SubtitleFormatsOperation` instead.</font>
	SubtitleFormat *string `json:"SubtitleFormat,omitnil,omitempty" name:"SubtitleFormat"`

	// Media source language value range: <li>zh: Mandarin </li> <li>en: English</li> <li>ja: Japanese </li> <li>zh-ca: Cantonese</li>
	SrcLanguage *string `json:"SrcLanguage,omitnil,omitempty" name:"SrcLanguage"`

	// Specify subtitle name, length limit: 64 characters. This value will be used for player display.
	SubtitleName *string `json:"SubtitleName,omitnil,omitempty" name:"SubtitleName"`
}

type AsrTranslateConfigureInfo struct {
	// Voice translation task switch, optional values:
	// <li>ON: switch on;</li>
	// <li>OFF: switch off.</li><font color=red>Note:</font> The task results of voice translation include asr full text recognition result. To avoid duplicate charges, simultaneous activation of voice translation and asr full text recognition features is prohibited.
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Media source language. When the Switch is ON, this parameter is mandatory. Value range:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`ja`: Japanese;</li>
	// <li>`ko`: Korean;</li>
	// <li>`vi`: Vietnamese;</li>
	// <li>`ms`: Malay;</li>
	// <li>`th`: Thai;</li>
	// <li>`pt`: Portuguese;</li>
	// <li>`tr`: Turkish;</li>
	// <li>`ar`: Arabic;</li>
	// <li>`es`: Spanish;</li>
	// <li>`hi`: Hindi;</li>
	// <li>`fr`: French.</li>
	SrcLanguage *string `json:"SrcLanguage,omitnil,omitempty" name:"SrcLanguage"`

	// Translation target language. When the Switch is ON, this parameter is mandatory.
	// When SrcLanguage is zh (Chinese), the value range:
	// <li>`en`: English;</li>
	// <li>`ja`: Japanese;</li>
	// <li>`ko`: Korean;</li>
	// <li>`fr`: French;</li>
	// <li>`es`: Spanish;</li>
	// <li>`it`: Italian;</li>
	// <li>`de`: German;</li>
	// <li>`tr`: Turkish;</li>
	// <li>`ru`: Russian;</li>
	// <li>`pt`: Portuguese;</li>
	// <li>`vi`: Vietnamese;</li>
	// <li>`id`: Indonesian;</li>
	// <li>`th`: Thai;</li>
	// <li>`ms`: Malay.</li>
	// 
	// When SrcLanguage is en (English), the value range:
	// <li>`zh`: Chinese;</li>
	// <li>`ja`: Japanese;</li>
	// <li>`ko`: Korean;</li>
	// <li>`fr`: French;</li>
	// <li>`es`: Spanish;</li>
	// <li>`it`: Italian;</li>
	// <li>`de`: German;</li>
	// <li>`tr`: Turkish;</li>
	// <li>`ru`: Russian;</li>
	// <li>`pt`: Portuguese;</li>
	// <li>`vi`: Vietnamese;</li>
	// <li>`id`: Indonesian;</li>
	// <li>`th`: Thai;</li>
	// <li>`ms`: Malay;</li>
	// <li>`ar`: Arabic;</li>
	// <li>`hi`: Hindi.</li>
	// 
	// When SrcLanguage is ja (Japanese), the valid options are:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`ko`: Korean.</li>
	// 
	// When SrcLanguage is ko (Korean), the valid options are:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`ja`: Japanese.</li>
	// 
	// When SrcLanguage is vi (Vietnamese), ms (Malay), or th (Thai), the valid options are:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English.</li>
	// 
	// When SrcLanguage is pt (Portuguese), the valid options are:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`fr`: French;</li>
	// <li>`es`: Spanish;</li>
	// <li>`it`: Italian;</li>
	// <li>`de`: German;</li>
	// <li>`tr`: Turkish;</li>
	// <li>`ru`: Russian.</li>
	// 
	// When SrcLanguage is tr (Turkish), the value range is:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`fr`: French;</li>
	// <li>`es`: Spanish;</li>
	// <li>`it`: Italian;</li>
	// <li>`de`: German;</li>
	// <li>`ru`: Russian;</li>
	// <li>`pt`: Portuguese.</li>
	// 
	// When SrcLanguage is es (Spanish), the value range is:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`fr`: French;</li>
	// <li>`it`: Italian;</li>
	// <li>`de`: German;</li>
	// <li>`tr`: Turkish;</li>
	// <li>`ru`: Russian;</li>
	// <li>`pt`: Portuguese.</li>
	// 
	// When SrcLanguage is ar (Arabic) or hi (Hindi), the value range is:
	// <li>`en`: English.</li>
	// 
	// When SrcLanguage is fr (French), the value range is:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`es`: Spanish;</li>
	// <li>`it`: Italian;</li>
	// <li>`de`: German;</li>
	// <li>`tr`: Turkish;</li>
	// <li>`ru`: Russian;</li>
	// <li>`pt`: Portuguese.</li>
	DstLanguage *string `json:"DstLanguage,omitnil,omitempty" name:"DstLanguage"`

	// Generated subtitle file format list. If not filled or an empty array is provided, no subtitle file will be generated. Optional values:
	// <li>vtt: generate WebVTT subtitle file;</li>
	// <li>srt: generate SRT subtitle files.</li><font color=red>Note:</font> VOD media assets only support adding vtt subtitles. Therefore, VOD will add generated subtitles to media assets only when SubtitleFormats includes vtt.
	SubtitleFormats []*string `json:"SubtitleFormats,omitnil,omitempty" name:"SubtitleFormats"`

	// Specify subtitle name, length limit: 64 characters. This value will be displayed by the player. If not provided, VOD will automatically generate it.
	SubtitleName *string `json:"SubtitleName,omitnil,omitempty" name:"SubtitleName"`
}

type AsrTranslateConfigureInfoForUpdate struct {
	// Voice translation task switch, optional values:
	// <li>ON: switch on;</li>
	// <li>OFF: switch off.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Media source language, value range:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`ja`: Japanese;</li>
	// <li>`ko`: Korean;</li>
	// <li>`vi`: Vietnamese;</li>
	// <li>`ms`: Malay;</li>
	// <li>`th`: Thai;</li>
	// <li>`pt`: Portuguese;</li>
	// <li>`tr`: Turkish;</li>
	// <li>`ar`: Arabic;</li>
	// <li>`es`: Spanish;</li>
	// <li>`hi`: Hindi;</li>
	// <li>`fr`: French.</li>
	SrcLanguage *string `json:"SrcLanguage,omitnil,omitempty" name:"SrcLanguage"`

	// Translation target language.
	// When SrcLanguage is zh(Chinese), value range:
	// <li>`en`: English;</li>
	// <li>`ja`: Japanese;</li>
	// <li>`ko`: Korean;</li>
	// <li>`fr`: French;</li>
	// <li>`es`: Spanish;</li>
	// <li>`it`: Italian;</li>
	// <li>`de`: German;</li>
	// <li>`tr`: Turkish;</li>
	// <li>`ru`: Russian;</li>
	// <li>`pt`: Portuguese;</li>
	// <li>`vi`: Vietnamese;</li>
	// <li>`id`: Indonesian;</li>
	// <li>`th`: Thai;</li>
	// <li>`ms`: Malay.</li>
	// 
	// When SrcLanguage is en(English), value range:
	// <li>`zh`: Chinese;</li>
	// <li>`ja`: Japanese;</li>
	// <li>`ko`: Korean;</li>
	// <li>`fr`: French;</li>
	// <li>`es`: Spanish;</li>
	// <li>`it`: Italian;</li>
	// <li>`de`: German;</li>
	// <li>`tr`: Turkish;</li>
	// <li>`ru`: Russian;</li>
	// <li>`pt`: Portuguese;</li>
	// <li>`vi`: Vietnamese;</li>
	// <li>`id`: Indonesian;</li>
	// <li>`th`: Thai;</li>
	// <li>`ms`: Malay;</li>
	// <li>`ar`: Arabic;</li>
	// <li>`hi`: Hindi.</li>
	// 
	// When SrcLanguage is ja (Japanese), value range:
	// <li>zh: Chinese;</li>
	// <li>en: English;</li>
	// <li>ko: Korean.</li>
	// 
	// When SrcLanguage is ko (Korean), value range:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`ja`: Japanese.</li>
	// 
	// When SrcLanguage is vi (Vietnamese) or ms (Malay) or th (Thai), value range:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English.</li>
	// 
	// When SrcLanguage is pt (Portuguese), value range:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`fr`: French;</li>
	// <li>`es`: Spanish;</li>
	// <li>`it`: Italian;</li>
	// <li>`de`: German;</li>
	// <li>`tr`: Turkish;</li>
	// <li>`ru`: Russian.</li>
	// 
	// When SrcLanguage is tr (Turkish), value range:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`fr`: French;</li>
	// <li>`es`: Spanish;</li>
	// <li>`it`: Italian;</li>
	// <li>`de`: German;</li>
	// <li>`ru`: Russian;</li>
	// <li>`pt`: Portuguese.</li>
	// 
	// When SrcLanguage is es (Spanish), value range:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`fr`: French;</li>
	// <li>`it`: Italian;</li>
	// <li>`de`: German;</li>
	// <li>`tr`: Turkish;</li>
	// <li>`ru`: Russian;</li>
	// <li>`pt`: Portuguese.</li>
	// 
	// When SrcLanguage is ar (Arabic) or hi (Hindi), value range:
	// <li>`en`: English.</li>
	// 
	// When SrcLanguage is fr (French), value range:
	// <li>`zh`: Chinese;</li>
	// <li>`en`: English;</li>
	// <li>`es`: Spanish;</li>
	// <li>`it`: Italian;</li>
	// <li>`de`: German;</li>
	// <li>`tr`: Turkish;</li>
	// <li>`ru`: Russian;</li>
	// <li>`pt`: Portuguese.</li>
	DstLanguage *string `json:"DstLanguage,omitnil,omitempty" name:"DstLanguage"`

	// Operation information about subtitle format list.
	SubtitleFormatsOperation *SubtitleFormatsOperation `json:"SubtitleFormatsOperation,omitnil,omitempty" name:"SubtitleFormatsOperation"`

	// Specify subtitle name, length limit: 64 characters. This value will be used for player display.
	SubtitleName *string `json:"SubtitleName,omitnil,omitempty" name:"SubtitleName"`
}

type AsrWordsConfigureInfo struct {
	// Switch of speech keyword recognition task. Valid values:
	// <li>ON: enables speech keyword recognition task;</li>
	// <li>OFF: disables speech keyword recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Keyword filter tag, which specifies the keyword tag that needs to be returned. If this parameter is left empty, all results will be returned.
	// There can be up to 10 tags, each with a length limit of 16 characters.
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`
}

type AsrWordsConfigureInfoForUpdate struct {
	// Switch of speech keyword recognition task. Valid values:
	// <li>ON: enables speech keyword recognition task;</li>
	// <li>OFF: disables speech keyword recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Keyword filter tag, which specifies the keyword tag that needs to be returned. If this parameter is left empty or a blank value is entered, all results will be returned.
	// There can be up to 10 tags, each with a length limit of 16 characters.
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`
}

// Predefined struct for user
type AttachMediaSubtitlesRequestParams struct {
	// Unique ID of the media file
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Operation. Valid values:
	// <li>`Attach`: associates subtitles.</li>
	// <li>`Detach`: disassociates subtitles.</li>
	Operation *string `json:"Operation,omitnil,omitempty" name:"Operation"`

	// [Adaptive bitrate streaming template ID](https://intl.cloud.tencent.com/document/product/266/34071?from_cn_redirect=1#zsy)
	AdaptiveDynamicStreamingDefinition *uint64 `json:"AdaptiveDynamicStreamingDefinition,omitnil,omitempty" name:"AdaptiveDynamicStreamingDefinition"`

	// Unique IDs of the subtitles
	SubtitleIds []*string `json:"SubtitleIds,omitnil,omitempty" name:"SubtitleIds"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type AttachMediaSubtitlesRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of the media file
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Operation. Valid values:
	// <li>`Attach`: associates subtitles.</li>
	// <li>`Detach`: disassociates subtitles.</li>
	Operation *string `json:"Operation,omitnil,omitempty" name:"Operation"`

	// [Adaptive bitrate streaming template ID](https://intl.cloud.tencent.com/document/product/266/34071?from_cn_redirect=1#zsy)
	AdaptiveDynamicStreamingDefinition *uint64 `json:"AdaptiveDynamicStreamingDefinition,omitnil,omitempty" name:"AdaptiveDynamicStreamingDefinition"`

	// Unique IDs of the subtitles
	SubtitleIds []*string `json:"SubtitleIds,omitnil,omitempty" name:"SubtitleIds"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *AttachMediaSubtitlesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *AttachMediaSubtitlesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "Operation")
	delete(f, "AdaptiveDynamicStreamingDefinition")
	delete(f, "SubtitleIds")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "AttachMediaSubtitlesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type AttachMediaSubtitlesResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type AttachMediaSubtitlesResponse struct {
	*tchttp.BaseResponse
	Response *AttachMediaSubtitlesResponseParams `json:"Response"`
}

func (r *AttachMediaSubtitlesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *AttachMediaSubtitlesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type AudioDenoiseInfo struct {
	// Whether to enable noise removal. Valid values:
	// <li>`ON`</li>
	// <li>`OFF`</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The noise removal type. This parameter is valid only if `Switch` is `ON`. Valid values:
	// <li>`weak`</li>
	// <li>`normal`</li>
	// <li>`strong`</li>
	// Default value: `weak`.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type AudioTemplateInfo struct {
	// The audio codec.
	// If `Container` is `mp3`, the valid value is:
	// <li>`libmp3lame`</li>
	// If `Container` is `ogg` or `flac`, the valid value is:
	// <li>`flac`</li>
	// If `Container` is `m4a`, the valid values are:
	// <li>`libfdk_aac`</li>
	// <li>`libmp3lame`</li>
	// <li>`ac3`</li>
	// If `Container` is `mp4` or `flv`, the valid values are:
	// <li>`libfdk_aac` (Recommended for MP4)</li>
	// <li>`libmp3lame` (Recommended for FLV)</li>
	// <li>`mp2`</li>
	// If `Container` is `hls`, the valid value is:
	// <li>`libfdk_aac`</li>
	// If `Format` is `HLS` or `MPEG-DASH`, the valid value is:
	// <li>`libfdk_aac`</li>
	// If `Container` is `wav`, the valid value is:
	// <li>`pcm16`</li>
	Codec *string `json:"Codec,omitnil,omitempty" name:"Codec"`

	// Audio stream bitrate in Kbps. Value range: 0 and [26, 256].
	// If the value is 0, the bitrate of the audio stream will be the same as that of the original audio.
	Bitrate *uint64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// The audio sample rate. Valid values:
	// <li>`16000` (valid only if `Codec` is `pcm16`)</li>
	// <li>`32000`</li>
	// <li>`44100`</li>
	// <li>`48000`</li>
	// Unit: Hz.
	SampleRate *uint64 `json:"SampleRate,omitnil,omitempty" name:"SampleRate"`

	// Audio channel system. Valid values:
	// <li>1: mono-channel</li>
	// <li>2: dual-channel</li>
	// <li>6: stereo</li>
	// You cannot set the sound channel as stereo for media files in container formats for audios (FLAC, OGG, MP3, M4A).
	// Default value: 2
	AudioChannel *int64 `json:"AudioChannel,omitnil,omitempty" name:"AudioChannel"`
}

type AudioTemplateInfoForUpdate struct {
	// The audio codec.
	// If `Container` is `mp3`, the valid value is:
	// <li>`libmp3lame`</li>
	// If `Container` is `ogg` or `flac`, the valid value is:
	// <li>`flac`</li>
	// If `Container` is `m4a`, the valid values are:
	// <li>`libfdk_aac`</li>
	// <li>`libmp3lame`</li>
	// <li>`ac3`</li>
	// If `Container` is `mp4` or `flv`, the valid values are:
	// <li>`libfdk_aac` (Recommended for MP4)</li>
	// <li>`libmp3lame` (Recommended for FLV)</li>
	// <li>`mp2`</li>
	// If `Container` is `hls`, the valid value is:
	// <li>`libfdk_aac`</li>
	// If `Format` is `HLS` or `MPEG-DASH`, the valid value is:
	// <li>`libfdk_aac`</li>
	// If `Container` is `wav`, the valid value is:
	// <li>`pcm16`</li>
	Codec *string `json:"Codec,omitnil,omitempty" name:"Codec"`

	// Audio stream bitrate in Kbps. Value range: 0 and [26, 256]. If the value is 0, the bitrate of the audio stream will be the same as that of the original audio.
	Bitrate *uint64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// The audio sample rate. Valid values:
	// <li>`16000` (valid only if `Codec` is `pcm16`)</li>
	// <li>`32000`</li>
	// <li>`44100`</li>
	// <li>`48000`</li>
	// Unit: Hz.
	SampleRate *uint64 `json:"SampleRate,omitnil,omitempty" name:"SampleRate"`

	// Audio channel system. Valid values:
	// <li>1: mono-channel</li>
	// <li>2: dual-channel</li>
	// <li>6: stereo</li>
	// You cannot set the sound channel as stereo for media files in container formats for audios (FLAC, OGG, MP3, M4A).
	AudioChannel *int64 `json:"AudioChannel,omitnil,omitempty" name:"AudioChannel"`
}

type AudioTrackItem struct {
	// Source of media material for audio segment, which can be:
	// <li>ID of VOD media files</li>
	// <li>Download URL of other media files</li>
	// Note: when a download URL of other media files is used as the material source and access control (such as hotlink protection) is enabled, the URL needs to carry access control parameters (such as hotlink protection signature).
	SourceMedia *string `json:"SourceMedia,omitnil,omitempty" name:"SourceMedia"`

	// Start time of audio segment in material file in seconds. Default value: 0, which means to start capturing from the beginning position of the material.
	SourceMediaStartTime *float64 `json:"SourceMediaStartTime,omitnil,omitempty" name:"SourceMediaStartTime"`

	// Audio segment duration in seconds. By default, the length of the material will be used, which means that the entire material will be captured.
	Duration *float64 `json:"Duration,omitnil,omitempty" name:"Duration"`

	// The target audio duration, in seconds.
	// <li>If `TargetDuration` is empty or `0`, the target duration is the same as `Duration`.</li>
	// <li>If `TargetDuration` is a value greater than 0, the playback speed will be changed to make the final audio duration the same as the value of `TargetDuration`.</li>
	TargetDuration *float64 `json:"TargetDuration,omitnil,omitempty" name:"TargetDuration"`

	// Operation on audio segment, such as volume adjustment.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AudioOperations []*AudioTransform `json:"AudioOperations,omitnil,omitempty" name:"AudioOperations"`
}

type AudioTransform struct {
	// Audio operation type. Valid values:
	// <li>Volume: volume adjustment.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Volume adjustment parameter, which is valid if `Type` is `Volume`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	VolumeParam *AudioVolumeParam `json:"VolumeParam,omitnil,omitempty" name:"VolumeParam"`
}

type AudioVolumeParam struct {
	// Whether to mute. Valid values: 0, 1.
	// <li>0: not muted.</li>
	// <li>1: muted.</li>
	// Default value: 0.
	Mute *int64 `json:"Mute,omitnil,omitempty" name:"Mute"`

	// Audio gain. Value range: 0-10.
	// <li>If the value is greater than 1, the volume will be increased.</li>
	// <li>If the value is smaller than 1, the volume will be decreased.</li>
	// <li>0 and 1: no change.</li>
	// Default value: 0.
	Gain *float64 `json:"Gain,omitnil,omitempty" name:"Gain"`
}

type Authentication struct {
	// Anti-hotlink configuration switch, value: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Timestamp hotlink protection mode A configuration
	TypeA *AuthenticationTypeA `json:"TypeA,omitnil,omitempty" name:"TypeA"`

	// Timestamp hotlink protection mode B configuration
	TypeB *AuthenticationTypeB `json:"TypeB,omitnil,omitempty" name:"TypeB"`

	// Timestamp hotlink protection mode C configuration
	TypeC *AuthenticationTypeC `json:"TypeC,omitnil,omitempty" name:"TypeC"`

	// Timestamp hotlink protection mode D configuration
	TypeD *AuthenticationTypeD `json:"TypeD,omitnil,omitempty" name:"TypeD"`
}

type AuthenticationTypeA struct {
	// The key to calculate the signature; only uppercase and lowercase letters and numbers are allowed, with a length of 6~32 characters.
	SecretKey *string `json:"SecretKey,omitnil,omitempty" name:"SecretKey"`

	// Signature parameter name setting; only uppercase and lowercase letters, numbers or underscores are allowed, the length is 1~100 characters, and it cannot start with a number.
	SignParam *string `json:"SignParam,omitnil,omitempty" name:"SignParam"`

	// Signature expiration time setting; the unit is seconds, and the maximum value can be set to 630720000.
	ExpireTime *uint64 `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// File extension list settings for authentication/non-authentication; if the character * is included, it means all files.
	FileExtensions []*string `json:"FileExtensions,omitnil,omitempty" name:"FileExtensions"`

	// whitelist: whitelist, indicating that all types except the FileExtensions list will be authenticated; blacklist: blacklist, indicating that only the types in FileExtensions will be authenticated.
	FilterType *string `json:"FilterType,omitnil,omitempty" name:"FilterType"`

	// Alternate key for calculating signature; only uppercase and lowercase letters and numbers are allowed, length 6~32 characters.
	BackupSecretKey *string `json:"BackupSecretKey,omitnil,omitempty" name:"BackupSecretKey"`
}

type AuthenticationTypeB struct {
	// The key to calculate the signature; only uppercase and lowercase letters and numbers are allowed, with a length of 6~32 characters.
	SecretKey *string `json:"SecretKey,omitnil,omitempty" name:"SecretKey"`

	// Signature expiration time setting; the unit is seconds, and the maximum value can be set to 630720000.
	ExpireTime *uint64 `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// File extension list settings for authentication/non-authentication; if the character * is included, it means all files.
	FileExtensions []*string `json:"FileExtensions,omitnil,omitempty" name:"FileExtensions"`

	// whitelist: whitelist, indicating that all types except the FileExtensions list will be authenticated; blacklist: blacklist, indicating that only the types in FileExtensions will be authenticated.
	FilterType *string `json:"FilterType,omitnil,omitempty" name:"FilterType"`

	// Alternate key for calculating signature; only uppercase and lowercase letters and numbers are allowed, length 6~32 characters.
	BackupSecretKey *string `json:"BackupSecretKey,omitnil,omitempty" name:"BackupSecretKey"`
}

type AuthenticationTypeC struct {
	// The key to calculate the signature; only uppercase and lowercase letters and numbers are allowed, with a length of 6~32 characters.
	SecretKey *string `json:"SecretKey,omitnil,omitempty" name:"SecretKey"`

	// Signature expiration time setting; the unit is seconds, and the maximum value can be set to 630720000.
	ExpireTime *uint64 `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// File extension list settings for authentication/non-authentication; if the character * is included, it means all files.
	FileExtensions []*string `json:"FileExtensions,omitnil,omitempty" name:"FileExtensions"`

	// whitelist: whitelist, indicating that all types except the FileExtensions list will be authenticated; blacklist: blacklist, indicating that only the types in FileExtensions will be authenticated.
	FilterType *string `json:"FilterType,omitnil,omitempty" name:"FilterType"`

	// Timestamp base setting: <li>dec: decimal</li> <li>hex: hexadecimal</li>
	TimeFormat *string `json:"TimeFormat,omitnil,omitempty" name:"TimeFormat"`

	// Alternate key for calculating signature; only uppercase and lowercase letters and numbers are allowed, length 6~32 characters.
	BackupSecretKey *string `json:"BackupSecretKey,omitnil,omitempty" name:"BackupSecretKey"`
}

type AuthenticationTypeD struct {
	// The key to calculate the signature; only uppercase and lowercase letters and numbers are allowed, with a length of 6~32 characters.
	SecretKey *string `json:"SecretKey,omitnil,omitempty" name:"SecretKey"`

	// Signature expiration time setting; the unit is seconds, and the maximum value can be set to 630720000.
	ExpireTime *uint64 `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// File extension list settings for authentication/non-authentication; if the character * is included, it means all files.
	FileExtensions []*string `json:"FileExtensions,omitnil,omitempty" name:"FileExtensions"`

	// whitelist: whitelist, indicating that all types except the FileExtensions list will be authenticated; blacklist: blacklist, indicating that only the types in FileExtensions will be authenticated.
	FilterType *string `json:"FilterType,omitnil,omitempty" name:"FilterType"`

	// Signature parameter name setting; only uppercase and lowercase letters, numbers or underscores are allowed, the length is 1~100 characters, and it cannot start with a number.
	SignParam *string `json:"SignParam,omitnil,omitempty" name:"SignParam"`

	// Timestamp parameter name setting; only uppercase and lowercase letters, numbers or underscores are allowed, the length is 1~100 characters, and it cannot start with a number.
	TimeParam *string `json:"TimeParam,omitnil,omitempty" name:"TimeParam"`

	// Timestamp base setting: <li>dec: decimal</li> <li>hex: hexadecimal</li>
	TimeFormat *string `json:"TimeFormat,omitnil,omitempty" name:"TimeFormat"`

	// Alternate key for calculating signature; only uppercase and lowercase letters and numbers are allowed, length 6~32 characters.
	BackupSecretKey *string `json:"BackupSecretKey,omitnil,omitempty" name:"BackupSecretKey"`
}

type AwsPrivateAccess struct {
	// AWS S3 return-to-origin authentication configuration switch, the values u200bu200bare: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Access ID.
	AccessKey *string `json:"AccessKey,omitnil,omitempty" name:"AccessKey"`

	// Key.
	SecretKey *string `json:"SecretKey,omitnil,omitempty" name:"SecretKey"`

	// Region.
	Region *string `json:"Region,omitnil,omitempty" name:"Region"`

	// BucketName.
	Bucket *string `json:"Bucket,omitnil,omitempty" name:"Bucket"`
}

type BlackWhiteEdgeConfigureInfo struct {
	// Video screen black border, white border, black screen, white screen detection switch, optional values: 
	// <li>ON: turn on; </li>
	// <li>OFF: turn off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type BlackWhiteEdgeConfigureInfoForUpdate struct {
	// Video screen black border, white border, black screen, white screen detection switch, optional values: 
	// <li>ON: turn on; </li>
	// <li>OFF: turn off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type BlurConfigureInfo struct {
	// Video screen blur detection switch, optional values:
	// <li>ON: turn on;</li>
	// <li>OFF: turn off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type BlurConfigureInfoForUpdate struct {
	// Video screen blur detection switch, optional values:
	// <li>ON: turn on;</li>
	// <li>OFF: turn off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type CDNCertInfo struct {
	// The server certificate ID is automatically generated during certificate hosting by SSL Certificate Management.
	CertId *string `json:"CertId,omitnil,omitempty" name:"CertId"`

	// Server certificate information.
	Certificate *string `json:"Certificate,omitnil,omitempty" name:"Certificate"`

	// Server key information.
	PrivateKey *string `json:"PrivateKey,omitnil,omitempty" name:"PrivateKey"`

	// Certificate expiration time; no need to fill in when configured as an input parameter.
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`
}

type CDNDomainConfig struct {
	// Domain name acceleration areas: <li>mainland: acceleration within China; </li> <li>overseas: acceleration outside China; </li> <li>global: global acceleration. </li>
	Area *string `json:"Area,omitnil,omitempty" name:"Area"`

	// Origin Server Configuration
	Origin *Origin `json:"Origin,omitnil,omitempty" name:"Origin"`

	// IP blocklist/allowlist configuration. This is disabled by default.
	IpFilter *IpFilter `json:"IpFilter,omitnil,omitempty" name:"IpFilter"`

	// UserAgent:blacklist/whitelist configuration.
	UserAgentFilter *UserAgentFilter `json:"UserAgentFilter,omitnil,omitempty" name:"UserAgentFilter"`

	// Back to the source 301/302 status code automatically follows the configuration, the default is off
	FollowRedirect *FollowRedirect `json:"FollowRedirect,omitnil,omitempty" name:"FollowRedirect"`

	// Custom request header configuration. This is disabled by default.
	RequestHeader *RequestHeader `json:"RequestHeader,omitnil,omitempty" name:"RequestHeader"`

	// Custom response header configuration. This is disabled by default.
	ResponseHeader *ResponseHeader `json:"ResponseHeader,omitnil,omitempty" name:"ResponseHeader"`

	// Node cache expiration time configuration.
	Cache *Cache `json:"Cache,omitnil,omitempty" name:"Cache"`

	// Domain name HTTPS acceleration configuration. This is disabled by default.
	Https *Https `json:"Https,omitnil,omitempty" name:"Https"`

	// Timestamp hotlink protection configuration.
	Authentication *Authentication `json:"Authentication,omitnil,omitempty" name:"Authentication"`

	// Access protocol forced redirect configuration. This is disabled by default.
	ForceRedirect *ForceRedirect `json:"ForceRedirect,omitnil,omitempty" name:"ForceRedirect"`

	// Referer blacklist/whitelist configuration. This is disabled by default.
	Referer *Referer `json:"Referer,omitnil,omitempty" name:"Referer"`

	// Browser cache rule configuration, which is used to set the default value of MaxAge and is disabled by default.
	MaxAge *MaxAge `json:"MaxAge,omitnil,omitempty" name:"MaxAge"`

	// IPv6 access configuration.
	Ipv6Access *Ipv6Access `json:"Ipv6Access,omitnil,omitempty" name:"Ipv6Access"`

	// QUIC configuration item.
	Quic *Quic `json:"Quic,omitnil,omitempty" name:"Quic"`

	// Origin access authentication for S3 bucket.
	AwsPrivateAccess *AwsPrivateAccess `json:"AwsPrivateAccess,omitnil,omitempty" name:"AwsPrivateAccess"`

	// Access authentication configuration for OSS origin.
	OssPrivateAccess *OssPrivateAccess `json:"OssPrivateAccess,omitnil,omitempty" name:"OssPrivateAccess"`

	// Access authentication for Huawei Cloud OBS origin
	HwPrivateAccess *HwPrivateAccess `json:"HwPrivateAccess,omitnil,omitempty" name:"HwPrivateAccess"`

	// Origin-pull authentication for other origins.
	OthersPrivateAccess *OthersPrivateAccess `json:"OthersPrivateAccess,omitnil,omitempty" name:"OthersPrivateAccess"`
}

type CDNDomainConfigForUpdate struct {
	// Domain name acceleration areas: <li>mainland: acceleration within China; </li> <li>overseas: acceleration outside China; </li> <li>global: global acceleration. </li>
	Area *string `json:"Area,omitnil,omitempty" name:"Area"`

	// Origin Server Configuration.
	Origin *Origin `json:"Origin,omitnil,omitempty" name:"Origin"`

	// IP blocklist/allowlist configuration. This is disabled by default.
	IpFilter *IpFilter `json:"IpFilter,omitnil,omitempty" name:"IpFilter"`

	// UserAgent:blacklist/whitelist configuration.
	UserAgentFilter *UserAgentFilter `json:"UserAgentFilter,omitnil,omitempty" name:"UserAgentFilter"`

	// Back to the source 301/302 status code automatically follows the configuration, the default is off
	FollowRedirect *FollowRedirect `json:"FollowRedirect,omitnil,omitempty" name:"FollowRedirect"`

	// Custom request header configuration. This is disabled by default.
	RequestHeader *RequestHeader `json:"RequestHeader,omitnil,omitempty" name:"RequestHeader"`

	// Custom response header configuration. This is disabled by default.
	ResponseHeader *ResponseHeader `json:"ResponseHeader,omitnil,omitempty" name:"ResponseHeader"`

	// Node cache expiration time configuration.
	Cache *Cache `json:"Cache,omitnil,omitempty" name:"Cache"`

	// Domain name HTTPS acceleration configuration. This is disabled by default.
	Https *Https `json:"Https,omitnil,omitempty" name:"Https"`

	// Timestamp hotlink protection configuration.
	Authentication *Authentication `json:"Authentication,omitnil,omitempty" name:"Authentication"`

	// Access protocol forced redirect configuration. This is disabled by default.
	ForceRedirect *ForceRedirect `json:"ForceRedirect,omitnil,omitempty" name:"ForceRedirect"`

	// Referer blacklist/whitelist configuration. This is disabled by default.
	Referer *Referer `json:"Referer,omitnil,omitempty" name:"Referer"`

	// Browser cache rule configuration, which is used to set the default value of MaxAge and is disabled by default.
	MaxAge *MaxAge `json:"MaxAge,omitnil,omitempty" name:"MaxAge"`

	// IPv6 access configuration.
	Ipv6Access *Ipv6Access `json:"Ipv6Access,omitnil,omitempty" name:"Ipv6Access"`

	// QUIC configuration item.
	Quic *Quic `json:"Quic,omitnil,omitempty" name:"Quic"`

	// Origin access authentication for S3 bucket.
	AwsPrivateAccess *AwsPrivateAccess `json:"AwsPrivateAccess,omitnil,omitempty" name:"AwsPrivateAccess"`

	// Access authentication configuration for OSS origin.
	OssPrivateAccess *OssPrivateAccess `json:"OssPrivateAccess,omitnil,omitempty" name:"OssPrivateAccess"`

	// Access authentication for Huawei Cloud OBS origin
	HwPrivateAccess *HwPrivateAccess `json:"HwPrivateAccess,omitnil,omitempty" name:"HwPrivateAccess"`

	// Origin-pull authentication for other origins.
	OthersPrivateAccess *OthersPrivateAccess `json:"OthersPrivateAccess,omitnil,omitempty" name:"OthersPrivateAccess"`
}

type CDNDomainInfo struct {
	// Domain.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Deployment status.
	DeployStatus *string `json:"DeployStatus,omitnil,omitempty" name:"DeployStatus"`

	// Cname record.
	Cname *string `json:"Cname,omitnil,omitempty" name:"Cname"`

	// Create Time
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// CDN domain name configuration information. 
	// Note: This field may return null, indicating that no valid value can be obtained.
	Config *CDNDomainConfig `json:"Config,omitnil,omitempty" name:"Config"`
}

type Cache struct {
	// Path cache configuration.
	RuleCache []*RuleCache `json:"RuleCache,omitnil,omitempty" name:"RuleCache"`
}

type CacheConfigCache struct {
	// Path cache configuration switch, the values u200bu200bare: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Cache expiration time settings<li>Unit: second. The maximum value is 365 days.</li>
	CacheTime *uint64 `json:"CacheTime,omitnil,omitempty" name:"CacheTime"`

	// Advanced cache expiration configuration. When enabled, the max-age value returned by the origin site will be compared with the cache expiration time set in CacheRules, and the minimum value will be used to cache the node. Values: <li>on: enabled; </li> <li >off: off. </li>
	CompareMaxAge *string `json:"CompareMaxAge,omitnil,omitempty" name:"CompareMaxAge"`

	// Force caching, values: <li>on: on; </li> <li>off: off. </li>
	IgnoreCacheControl *string `json:"IgnoreCacheControl,omitnil,omitempty" name:"IgnoreCacheControl"`

	// When the origin site returns the Set-Cookie header, whether the node caches the header and body: <li>on: on, does not cache the header and body;</li> <li>off: off, follows user customization Node caching rules. </li>
	IgnoreSetCookie *string `json:"IgnoreSetCookie,omitnil,omitempty" name:"IgnoreSetCookie"`
}

type CacheConfigFollowOrigin struct {
	// The path cache follows the origin site configuration switch. The values u200bu200bare: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Heuristic cache configuration
	HeuristicCache *HeuristicCache `json:"HeuristicCache,omitnil,omitempty" name:"HeuristicCache"`
}

type CacheConfigNoCache struct {
	// Path cache does not cache configuration configuration switch, value: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Always return to the origin site for verification, value: <li>on: on; </li> <li>off: off. </li>
	Revalidate *string `json:"Revalidate,omitnil,omitempty" name:"Revalidate"`
}

type Canvas struct {
	// Background color. Valid values:
	// <li>Black: black background</li>
	// <li>White: white background</li>
	// Default value: Black.
	Color *string `json:"Color,omitnil,omitempty" name:"Color"`

	// Canvas width, that is, the width of the output video, value range: 0~3840, unit: px. 
	// Default value: 0, which means the video width is the same as the first video clip of the first video track.
	Width *int64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Canvas height, that is, the height (or long side) of the output video, value range: 0~3840, unit: px. 
	// Default value: 0, which means the video height is consistent with the first video clip of the first video track.
	Height *int64 `json:"Height,omitnil,omitempty" name:"Height"`
}

type CdnLogInfo struct {
	// Log date in the format of `yyyy-MM-dd`, such as 2018-03-01.
	Date *string `json:"Date,omitnil,omitempty" name:"Date"`

	// Log name in the format of date and time-domain name,
	// such as 2018120101-test.vod2.mqcloud.com.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Log download link, which is valid for 24 hours.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// Log start time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=)
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// Log end time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=)
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`
}

type ClassificationConfigureInfo struct {
	// Switch of intelligent categorization task. Valid values:
	// <li>ON: enables intelligent categorization task;</li>
	// <li>OFF: disables intelligent categorization task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type ClassificationConfigureInfoForUpdate struct {
	// Switch of intelligent categorization task. Valid values:
	// <li>ON: enables intelligent categorization task;</li>
	// <li>OFF: disables intelligent categorization task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type ClipFileInfo2017 struct {
	// Error code
	// <li>0: success;</li>
	// <li>Other values: failure.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error description.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Output target file ID.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Output target file address.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// Output target file type.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileType *string `json:"FileType,omitnil,omitempty" name:"FileType"`
}

type ClipTask2017 struct {
	// Video clipping task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// ID of source file for video clipping task.
	SrcFileId *string `json:"SrcFileId,omitnil,omitempty" name:"SrcFileId"`

	// Information of file output by video clipping.
	FileInfo *ClipFileInfo2017 `json:"FileInfo,omitnil,omitempty" name:"FileInfo"`
}

// Predefined struct for user
type CloneCDNDomainRequestParams struct {
	// Domain
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// The cloned domain.
	ReferenceDomain *string `json:"ReferenceDomain,omitnil,omitempty" name:"ReferenceDomain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type CloneCDNDomainRequest struct {
	*tchttp.BaseRequest
	
	// Domain
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// The cloned domain.
	ReferenceDomain *string `json:"ReferenceDomain,omitnil,omitempty" name:"ReferenceDomain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *CloneCDNDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CloneCDNDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domain")
	delete(f, "ReferenceDomain")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CloneCDNDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CloneCDNDomainResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CloneCDNDomainResponse struct {
	*tchttp.BaseResponse
	Response *CloneCDNDomainResponseParams `json:"Response"`
}

func (r *CloneCDNDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CloneCDNDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ColorEnhanceInfo struct {
	// Whether to enable color enhancement. Valid values:
	// <li>`ON`</li>
	// <li>`OFF`</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The color enhancement type. This parameter is valid only if `Switch` is `ON`.
	// <li>`weak`</li>
	// <li>`normal`</li>
	// <li>`strong`</li>
	// Default value: `weak`.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

// Predefined struct for user
type CommitUploadRequestParams struct {
	// VOD session, which takes the returned value (VodSessionKey) of the `ApplyUpload` API.
	VodSessionKey *string `json:"VodSessionKey,omitnil,omitempty" name:"VodSessionKey"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type CommitUploadRequest struct {
	*tchttp.BaseRequest
	
	// VOD session, which takes the returned value (VodSessionKey) of the `ApplyUpload` API.
	VodSessionKey *string `json:"VodSessionKey,omitnil,omitempty" name:"VodSessionKey"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *CommitUploadRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CommitUploadRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "VodSessionKey")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CommitUploadRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CommitUploadResponseParams struct {
	// Unique ID of media file.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The media playback URL.
	MediaUrl *string `json:"MediaUrl,omitnil,omitempty" name:"MediaUrl"`

	// The thumbnail URL.
	CoverUrl *string `json:"CoverUrl,omitnil,omitempty" name:"CoverUrl"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CommitUploadResponse struct {
	*tchttp.BaseResponse
	Response *CommitUploadResponseParams `json:"Response"`
}

func (r *CommitUploadResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CommitUploadResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ComplexAdaptiveDynamicStreamingTask struct {
	// Task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Task status. Valid values:
	// <li>PROCESSING: processing;</li>
	// <li>FINISH: completed.</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Execution status and result of the complex adaptive bitrate streaming task. Each array element corresponds to an adaptive bitrate streaming template specified when initiating the task.
	ComplexAdaptiveDynamicStreamingTaskResultSet []*ComplexAdaptiveDynamicStreamingTaskResult `json:"ComplexAdaptiveDynamicStreamingTaskResultSet,omitnil,omitempty" name:"ComplexAdaptiveDynamicStreamingTaskResultSet"`
}

type ComplexAdaptiveDynamicStreamingTaskAudioInput struct {
	// Media ID of the input audio file. The first audio stream in the media will be fixed, while video streams and other audio streams (if any) will be ignored.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Audio stream name in the output, supporting up to 16 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The language of the audio stream in the output, supporting up to 16 characters. It must comply with the RFC5646 specification.
	Language *string `json:"Language,omitnil,omitempty" name:"Language"`

	// Whether to set as the default audio for adaptive bitrate streaming.
	// <li>YES: Set as the default audio;</li>
	// <li>NO: Not set as the default audio (default value).</li>
	Default *string `json:"Default,omitnil,omitempty" name:"Default"`
}

type ComplexAdaptiveDynamicStreamingTaskInput struct {
	// Adaptive bitrate streaming parameters.
	StreamPara *ComplexAdaptiveDynamicStreamingTaskStreamPara `json:"StreamPara,omitnil,omitempty" name:"StreamPara"`
}

type ComplexAdaptiveDynamicStreamingTaskOutput struct {
	// Adaptive bitrate streaming template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The adaptive bitrate streaming format. Valid values:
	// <li>HLS;</li>
	// <li>MPEG-DASH.</li>
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// DRM scheme type, value range:
	// <li>Widevine;</li>
	// <li>FairPlay.</li>
	// The default value is an empty string, indicating that the video will not be DRM protected.
	DrmType *string `json:"DrmType,omitnil,omitempty" name:"DrmType"`

	// Playback address of the output manifest.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`
}

type ComplexAdaptiveDynamicStreamingTaskResult struct {
	// Task status of a single adaptive bitrate stream. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// The execution progress of a single adaptive bitrate stream. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// Input of a single adaptive bitrate stream.
	Input *ComplexAdaptiveDynamicStreamingTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of a single adaptive bitrate stream.
	Output *ComplexAdaptiveDynamicStreamingTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`
}

type ComplexAdaptiveDynamicStreamingTaskStreamPara struct {
	// Adaptive bitrate streaming template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type ComplexAdaptiveDynamicStreamingTaskSubtitleInput struct {
	// Subtitle ID, which must belongs to the main media.
	Id *string `json:"Id,omitnil,omitempty" name:"Id"`

	// Whether to set as the default subtitle for adaptive bitrate streaming.
	// <li>YES: Set as the default subtitle;</li>
	// <li>NO: Not set as the default subtitle (default value).</li>
	Default *string `json:"Default,omitnil,omitempty" name:"Default"`
}

type ComposeMediaOutput struct {
	// Filename of up to 64 characters.
	FileName *string `json:"FileName,omitnil,omitempty" name:"FileName"`

	// Description, which can contain up to 128 characters.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	// Category ID, which is used to categorize the media for management. A category can be created and its ID can be obtained by using the [category creating](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API.
	// <li>Default value: 0, which means "Other".</li>
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// Expiration time of output media file in ISO 8601 format, after which the file will be deleted. Files will never expire by default. For more information, please see [Notes on ISO Date Format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// Container. Valid values: mp4, mp3. mp3 is for audio files.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// Information of output video.
	// Note: this field may return null, indicating that no valid values can be obtained.
	VideoStream *OutputVideoStream `json:"VideoStream,omitnil,omitempty" name:"VideoStream"`

	// Information of output audio.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AudioStream *OutputAudioStream `json:"AudioStream,omitnil,omitempty" name:"AudioStream"`

	// Whether to remove video data. Valid values:
	// <li>0: retain</li>
	// <li>1: remove</li>
	// Default value: 0.
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data. Valid values:
	// <li>0: retain</li>
	// <li>1: remove</li>
	// Default value: 0.
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`
}

// Predefined struct for user
type ComposeMediaRequestParams struct {
	// List of input media tracks, including video, audio, and image tracks. <li>Input tracks are synced to the output media file.</li><li>Input tracks are synced to each other. Videos and images in higher tracks are superimposed over those in lower tracks. Audio tracks are mixed.</li><li>There can be up to 10 tracks for video, audio, and images each.</li><li>The total number of clips in all tracks cannot exceed 500.</li>
	Tracks []*MediaTrack `json:"Tracks,omitnil,omitempty" name:"Tracks"`

	// Information of output media file.
	Output *ComposeMediaOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Canvas used for composing video file.
	Canvas *Canvas `json:"Canvas,omitnil,omitempty" name:"Canvas"`

	// Used to pass through user request information. `ComposeMediaComplete` callback will return the value of this parameter. It contains up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Used to identify duplicate requests. After you send a request, if any request with the same `SessionId` has already been sent in the last three days (72 hours), an error message will be returned. `SessionId` contains up to 50 characters. If this parameter is not carried or is an empty string, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`
}

type ComposeMediaRequest struct {
	*tchttp.BaseRequest
	
	// List of input media tracks, including video, audio, and image tracks. <li>Input tracks are synced to the output media file.</li><li>Input tracks are synced to each other. Videos and images in higher tracks are superimposed over those in lower tracks. Audio tracks are mixed.</li><li>There can be up to 10 tracks for video, audio, and images each.</li><li>The total number of clips in all tracks cannot exceed 500.</li>
	Tracks []*MediaTrack `json:"Tracks,omitnil,omitempty" name:"Tracks"`

	// Information of output media file.
	Output *ComposeMediaOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Canvas used for composing video file.
	Canvas *Canvas `json:"Canvas,omitnil,omitempty" name:"Canvas"`

	// Used to pass through user request information. `ComposeMediaComplete` callback will return the value of this parameter. It contains up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Used to identify duplicate requests. After you send a request, if any request with the same `SessionId` has already been sent in the last three days (72 hours), an error message will be returned. `SessionId` contains up to 50 characters. If this parameter is not carried or is an empty string, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`
}

func (r *ComposeMediaRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ComposeMediaRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Tracks")
	delete(f, "Output")
	delete(f, "SubAppId")
	delete(f, "Canvas")
	delete(f, "SessionContext")
	delete(f, "SessionId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ComposeMediaRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ComposeMediaResponseParams struct {
	// Media file composing task ID, which can be used to query the status of composing task (with task type being `MakeMedia`).
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ComposeMediaResponse struct {
	*tchttp.BaseResponse
	Response *ComposeMediaResponseParams `json:"Response"`
}

func (r *ComposeMediaResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ComposeMediaResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ComposeMediaTask struct {
	// Task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Task flow status. Valid values:
	// <li>PROCESSING: processing;</li>
	// <li>FINISH: completed.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code
	// <li>0: success;</li>
	// <li>Other values: failure.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Progress of a media file composing task. Value range: [0, 100]
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// Input of media file composing task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Input *ComposeMediaTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of media file composing task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *ComposeMediaTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The metadata of the output video.
	// Note: This field may return `null`, indicating that no valid value was found.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`

	// ID used for deduplication. If there was a request with the same ID in the last seven days, the current request will return an error. The ID can contain up to 50 characters. If this parameter is not carried or is left empty, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this parameter. It can contain up to 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`
}

type ComposeMediaTaskInput struct {
	// List of input media tracks, i.e., information of multiple tracks composed of video, audio, image, and other materials.
	Tracks []*MediaTrack `json:"Tracks,omitnil,omitempty" name:"Tracks"`

	// Canvas used for composing video file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Canvas *Canvas `json:"Canvas,omitnil,omitempty" name:"Canvas"`

	// Information of output media file.
	Output *ComposeMediaOutput `json:"Output,omitnil,omitempty" name:"Output"`
}

type ComposeMediaTaskOutput struct {
	// File type, such as mp4 and mp3.
	FileType *string `json:"FileType,omitnil,omitempty" name:"FileType"`

	// Media file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Media file playback address.
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// Filename of up to 64 characters.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// Category ID, which is used to categorize the media for management. A category can be created and its ID can be obtained by using the [category creating](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API.
	// <li>Default value: 0, which means "Other".</li>
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// Expiration time of output media file in ISO 8601 format, after which the file will be deleted. Files will never expire by default. For more information, please see [Notes on ISO Date Format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`
}

type ConcatFileInfo2017 struct {
	// Error code
	// <li>0: success;</li>
	// <li>Other values: failure.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// ID of source file for video splicing.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Address of source file for video splicing.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// Format of source file for video splicing.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileType *string `json:"FileType,omitnil,omitempty" name:"FileType"`
}

type ConcatTask2017 struct {
	// Video splicing task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Information of source file for video splicing.
	FileInfoSet []*ConcatFileInfo2017 `json:"FileInfoSet,omitnil,omitempty" name:"FileInfoSet"`
}

// Predefined struct for user
type ConfirmEventsRequestParams struct {
	// Event handler, i.e., the `EventSet. EventHandle` field in the output parameters of the [event notification pulling](https://intl.cloud.tencent.com/document/product/266/33433?from_cn_redirect=1) API.
	// Array length limit: 16.
	EventHandles []*string `json:"EventHandles,omitnil,omitempty" name:"EventHandles"`

	// Reserved field for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type ConfirmEventsRequest struct {
	*tchttp.BaseRequest
	
	// Event handler, i.e., the `EventSet. EventHandle` field in the output parameters of the [event notification pulling](https://intl.cloud.tencent.com/document/product/266/33433?from_cn_redirect=1) API.
	// Array length limit: 16.
	EventHandles []*string `json:"EventHandles,omitnil,omitempty" name:"EventHandles"`

	// Reserved field for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *ConfirmEventsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ConfirmEventsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "EventHandles")
	delete(f, "ExtInfo")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ConfirmEventsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ConfirmEventsResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ConfirmEventsResponse struct {
	*tchttp.BaseResponse
	Response *ConfirmEventsResponseParams `json:"Response"`
}

func (r *ConfirmEventsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ConfirmEventsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ContentReviewOcrResult struct {
	// The confidence score for the OCR-based moderation result. Value range: 0-100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// The suggestion for handling the suspicious content detected based on OCR. Valid values:
	// <li>pass/li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// The list of suspicious keywords detected based on OCR.
	KeywordSet []*string `json:"KeywordSet,omitnil,omitempty" name:"KeywordSet"`

	// The coordinates (pixel) of the top-left and bottom-right corners of the frame where a suspicious keyword appears. Format: [x1, y1, x2, y2].
	AreaCoordSet []*int64 `json:"AreaCoordSet,omitnil,omitempty" name:"AreaCoordSet"`
}

type ContentReviewResult struct {
	// The result type. Valid values:
	// <li>Porn.Image: Pornographic content in the image</li>
	// <li>Terrorism.Image: Terrorist content in the image</li>
	// <li>Political.Image: Politically sensitive content in the image</li>
	// <li>Porn.Ocr: Pornographic content in the image based on OCR</li>
	// <li>Terrorism.Ocr: Terrorist content in the image based on OCR</li>
	// <li>Political.Ocr: Politically sensitive content in the image based on OCR</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The pornographic content detected in the image. This parameter is valid if `Type` is `Porn.Image`.
	// Note: This field may return `null`, indicating that no valid value was found.
	PornImageResult *PornImageResult `json:"PornImageResult,omitnil,omitempty" name:"PornImageResult"`

	// The terrorist content detected in the image. This parameter is valid if `Type` is `Terrorism.Image`.
	// Note: This field may return `null`, indicating that no valid value was found.
	TerrorismImageResult *TerrorismImageResult `json:"TerrorismImageResult,omitnil,omitempty" name:"TerrorismImageResult"`

	// The politically sensitive content detected in the image. This parameter is valid if `Type` is `Political.Image`.
	// Note: This field may return `null`, indicating that no valid value was found.
	PoliticalImageResult *PoliticalImageResult `json:"PoliticalImageResult,omitnil,omitempty" name:"PoliticalImageResult"`

	// The pornographic content detected in the image based on OCR. This parameter is valid if `Type` is `Porn.Ocr`.
	// Note: This field may return `null`, indicating that no valid value was found.
	PornOcrResult *ContentReviewOcrResult `json:"PornOcrResult,omitnil,omitempty" name:"PornOcrResult"`

	// The terrorist content detected in the image based on OCR. This parameter is valid if `Type` is `Terrorism.Ocr`.
	// Note: This field may return `null`, indicating that no valid value was found.
	TerrorismOcrResult *ContentReviewOcrResult `json:"TerrorismOcrResult,omitnil,omitempty" name:"TerrorismOcrResult"`

	// The politically sensitive content detected in the image based on OCR. This parameter is valid if `Type` is `Political.Ocr`.
	// Note: This field may return `null`, indicating that no valid value was found.
	PoliticalOcrResult *ContentReviewOcrResult `json:"PoliticalOcrResult,omitnil,omitempty" name:"PoliticalOcrResult"`
}

type ContentReviewTemplateItem struct {
	// Unique ID of an intelligent recognition template
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Name of an intelligent recognition template. Max 64 characters
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description of an intelligent recognition template. Max 256 characters
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Parameters for recognition of pornographic content
	// Note: This field may return `null`, indicating that no valid value can be found.
	PornConfigure *PornConfigureInfo `json:"PornConfigure,omitnil,omitempty" name:"PornConfigure"`

	// Parameters for recognition of terrorism content
	// Note: This field may return `null`, indicating that no valid value can be found.
	TerrorismConfigure *TerrorismConfigureInfo `json:"TerrorismConfigure,omitnil,omitempty" name:"TerrorismConfigure"`

	// Parameters for recognition of politically sensitive content
	// Note: This field may return `null`, indicating that no valid value can be found.
	PoliticalConfigure *PoliticalConfigureInfo `json:"PoliticalConfigure,omitnil,omitempty" name:"PoliticalConfigure"`

	// Control parameter of prohibited information detection. Prohibited information includes:
	// <li>Abusive;</li>
	// <li>Drug-related.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	ProhibitedConfigure *ProhibitedConfigureInfo `json:"ProhibitedConfigure,omitnil,omitempty" name:"ProhibitedConfigure"`

	// Custom recognition parameters
	// Note: This field may return `null`, indicating that no valid value can be found.
	UserDefineConfigure *UserDefineConfigureInfo `json:"UserDefineConfigure,omitnil,omitempty" name:"UserDefineConfigure"`

	// Whether to subject the recognition result to human review
	// <li>ON</li>
	// <li>OFF</li>
	ReviewWallSwitch *string `json:"ReviewWallSwitch,omitnil,omitempty" name:"ReviewWallSwitch"`

	// Frame capturing interval in seconds. If this parameter is left empty, 1 second will be used by default. Minimum value: 0.5 seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`

	// Creation time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

type CopyRightWatermarkInput struct {
	// Copyright information, maximum length is 200 characters.
	Text *string `json:"Text,omitnil,omitempty" name:"Text"`
}

type CoverBySnapshotTaskInput struct {
	// Time point screencapturing template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Screencapturing mode. Valid values:
	// <li>Time: screencaptures by time point</li>
	// <li>Percent: screencaptures by percentage</li>
	PositionType *string `json:"PositionType,omitnil,omitempty" name:"PositionType"`

	// Screenshot position:
	// <li>For time point screencapturing, this means to take a screenshot at a specified time point (in seconds) and use it as the cover</li>
	// <li>For percentage screencapturing, this value means to take a screenshot at a specified percentage of the video duration and use it as the cover</li>
	PositionValue *float64 `json:"PositionValue,omitnil,omitempty" name:"PositionValue"`

	// List of up to 10 image or text watermarks.
	// Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkSet []*WatermarkInput `json:"WatermarkSet,omitnil,omitempty" name:"WatermarkSet"`
}

type CoverBySnapshotTaskOutput struct {
	// Cover URL.
	CoverUrl *string `json:"CoverUrl,omitnil,omitempty" name:"CoverUrl"`
}

type CoverConfigureInfo struct {
	// Switch of intelligent cover generating task. Valid values:
	// <li>ON: enables intelligent cover generating task;</li>
	// <li>OFF: disables intelligent cover generating task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type CoverConfigureInfoForUpdate struct {
	// Switch of intelligent cover generating task. Valid values:
	// <li>ON: enables intelligent cover generating task;</li>
	// <li>OFF: disables intelligent cover generating task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type CrashScreenConfigureInfo struct {
	// Video screen distortion detection switch, optional values:
	// <li>ON: turn on;</li>
	// <li>OFF: turn off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type CrashScreenConfigureInfoForUpdate struct {
	// Video screen distortion detection switch, optional values:
	// <li>ON: turn on;</li>
	// <li>OFF: turn off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

// Predefined struct for user
type CreateAIAnalysisTemplateRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Video content analysis template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Video content analysis template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter of intelligent categorization task.
	ClassificationConfigure *ClassificationConfigureInfo `json:"ClassificationConfigure,omitnil,omitempty" name:"ClassificationConfigure"`

	// Control parameter of intelligent tagging task.
	TagConfigure *TagConfigureInfo `json:"TagConfigure,omitnil,omitempty" name:"TagConfigure"`

	// Control parameter of intelligent cover generating task.
	CoverConfigure *CoverConfigureInfo `json:"CoverConfigure,omitnil,omitempty" name:"CoverConfigure"`

	// Control parameter of intelligent frame-specific tagging task.
	FrameTagConfigure *FrameTagConfigureInfo `json:"FrameTagConfigure,omitnil,omitempty" name:"FrameTagConfigure"`

	// Control parameter of an intelligent highlight generating task.
	HighlightConfigure *HighlightsConfigureInfo `json:"HighlightConfigure,omitnil,omitempty" name:"HighlightConfigure"`
}

type CreateAIAnalysisTemplateRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Video content analysis template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Video content analysis template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter of intelligent categorization task.
	ClassificationConfigure *ClassificationConfigureInfo `json:"ClassificationConfigure,omitnil,omitempty" name:"ClassificationConfigure"`

	// Control parameter of intelligent tagging task.
	TagConfigure *TagConfigureInfo `json:"TagConfigure,omitnil,omitempty" name:"TagConfigure"`

	// Control parameter of intelligent cover generating task.
	CoverConfigure *CoverConfigureInfo `json:"CoverConfigure,omitnil,omitempty" name:"CoverConfigure"`

	// Control parameter of intelligent frame-specific tagging task.
	FrameTagConfigure *FrameTagConfigureInfo `json:"FrameTagConfigure,omitnil,omitempty" name:"FrameTagConfigure"`

	// Control parameter of an intelligent highlight generating task.
	HighlightConfigure *HighlightsConfigureInfo `json:"HighlightConfigure,omitnil,omitempty" name:"HighlightConfigure"`
}

func (r *CreateAIAnalysisTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateAIAnalysisTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "ClassificationConfigure")
	delete(f, "TagConfigure")
	delete(f, "CoverConfigure")
	delete(f, "FrameTagConfigure")
	delete(f, "HighlightConfigure")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateAIAnalysisTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateAIAnalysisTemplateResponseParams struct {
	// Unique ID of video content analysis template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateAIAnalysisTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateAIAnalysisTemplateResponseParams `json:"Response"`
}

func (r *CreateAIAnalysisTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateAIAnalysisTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateAIRecognitionTemplateRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Video content recognition template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description of video content recognition template. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter of video opening and ending credits recognition.
	HeadTailConfigure *HeadTailConfigureInfo `json:"HeadTailConfigure,omitnil,omitempty" name:"HeadTailConfigure"`

	// Control parameter of video splitting recognition.
	SegmentConfigure *SegmentConfigureInfo `json:"SegmentConfigure,omitnil,omitempty" name:"SegmentConfigure"`

	// Control parameter of face recognition.
	FaceConfigure *FaceConfigureInfo `json:"FaceConfigure,omitnil,omitempty" name:"FaceConfigure"`

	// Control parameter of full text recognition.
	OcrFullTextConfigure *OcrFullTextConfigureInfo `json:"OcrFullTextConfigure,omitnil,omitempty" name:"OcrFullTextConfigure"`

	// Control parameter of text keyword recognition.
	OcrWordsConfigure *OcrWordsConfigureInfo `json:"OcrWordsConfigure,omitnil,omitempty" name:"OcrWordsConfigure"`

	// Control parameter of full speech recognition.
	AsrFullTextConfigure *AsrFullTextConfigureInfo `json:"AsrFullTextConfigure,omitnil,omitempty" name:"AsrFullTextConfigure"`

	// Control parameter of speech keyword recognition.
	AsrWordsConfigure *AsrWordsConfigureInfo `json:"AsrWordsConfigure,omitnil,omitempty" name:"AsrWordsConfigure"`

	// Control parameter of voice translation.
	AsrTranslateConfigure *AsrTranslateConfigureInfo `json:"AsrTranslateConfigure,omitnil,omitempty" name:"AsrTranslateConfigure"`

	// Control parameter of object recognition.
	ObjectConfigure *ObjectConfigureInfo `json:"ObjectConfigure,omitnil,omitempty" name:"ObjectConfigure"`

	// Frame capturing interval in seconds. If this parameter is left empty, 1 second will be used by default. Minimum value: 0.5 seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`
}

type CreateAIRecognitionTemplateRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Video content recognition template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description of video content recognition template. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter of video opening and ending credits recognition.
	HeadTailConfigure *HeadTailConfigureInfo `json:"HeadTailConfigure,omitnil,omitempty" name:"HeadTailConfigure"`

	// Control parameter of video splitting recognition.
	SegmentConfigure *SegmentConfigureInfo `json:"SegmentConfigure,omitnil,omitempty" name:"SegmentConfigure"`

	// Control parameter of face recognition.
	FaceConfigure *FaceConfigureInfo `json:"FaceConfigure,omitnil,omitempty" name:"FaceConfigure"`

	// Control parameter of full text recognition.
	OcrFullTextConfigure *OcrFullTextConfigureInfo `json:"OcrFullTextConfigure,omitnil,omitempty" name:"OcrFullTextConfigure"`

	// Control parameter of text keyword recognition.
	OcrWordsConfigure *OcrWordsConfigureInfo `json:"OcrWordsConfigure,omitnil,omitempty" name:"OcrWordsConfigure"`

	// Control parameter of full speech recognition.
	AsrFullTextConfigure *AsrFullTextConfigureInfo `json:"AsrFullTextConfigure,omitnil,omitempty" name:"AsrFullTextConfigure"`

	// Control parameter of speech keyword recognition.
	AsrWordsConfigure *AsrWordsConfigureInfo `json:"AsrWordsConfigure,omitnil,omitempty" name:"AsrWordsConfigure"`

	// Control parameter of voice translation.
	AsrTranslateConfigure *AsrTranslateConfigureInfo `json:"AsrTranslateConfigure,omitnil,omitempty" name:"AsrTranslateConfigure"`

	// Control parameter of object recognition.
	ObjectConfigure *ObjectConfigureInfo `json:"ObjectConfigure,omitnil,omitempty" name:"ObjectConfigure"`

	// Frame capturing interval in seconds. If this parameter is left empty, 1 second will be used by default. Minimum value: 0.5 seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`
}

func (r *CreateAIRecognitionTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateAIRecognitionTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "HeadTailConfigure")
	delete(f, "SegmentConfigure")
	delete(f, "FaceConfigure")
	delete(f, "OcrFullTextConfigure")
	delete(f, "OcrWordsConfigure")
	delete(f, "AsrFullTextConfigure")
	delete(f, "AsrWordsConfigure")
	delete(f, "AsrTranslateConfigure")
	delete(f, "ObjectConfigure")
	delete(f, "ScreenshotInterval")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateAIRecognitionTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateAIRecognitionTemplateResponseParams struct {
	// Unique ID of video content recognition template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateAIRecognitionTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateAIRecognitionTemplateResponseParams `json:"Response"`
}

func (r *CreateAIRecognitionTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateAIRecognitionTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateAdaptiveDynamicStreamingTemplateRequestParams struct {
	// The adaptive bitrate streaming format. Valid values:
	// <li>HLS</li>
	// <li>MPEG-DASH</li>
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Parameter information of output substream for adaptive bitrate streaming. Up to 10 substreams can be output.
	// Note: the frame rate of all substreams must be the same; otherwise, the frame rate of the first substream will be used as the output frame rate.
	StreamInfos []*AdaptiveStreamTemplate `json:"StreamInfos,omitnil,omitempty" name:"StreamInfos"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// DRM scheme type, value range:
	// <li>SimpleAES</li>
	// <li>Widevine</li>
	// <li>FairPlay</li>
	// The default value is an empty string. It is an empty string, indicating that the video will not be DRM protected.
	DrmType *string `json:"DrmType,omitnil,omitempty" name:"DrmType"`

	// The provider of the DRM key. Valid values:
	// <li>SDMC</li>
	// <li>VOD</li>
	// The default is `VOD`.
	DrmKeyProvider *string `json:"DrmKeyProvider,omitnil,omitempty" name:"DrmKeyProvider"`

	// Whether to prohibit transcoding video from low bitrate to high bitrate. Valid values:
	// <li>0: no,</li>
	// <li>1: yes.</li>
	// Default value: no.
	DisableHigherVideoBitrate *uint64 `json:"DisableHigherVideoBitrate,omitnil,omitempty" name:"DisableHigherVideoBitrate"`

	// Whether to prohibit transcoding from low resolution to high resolution. Valid values:
	// <li>0: no,</li>
	// <li>1: yes.</li>
	// Default value: no.
	DisableHigherVideoResolution *uint64 `json:"DisableHigherVideoResolution,omitnil,omitempty" name:"DisableHigherVideoResolution"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The segment type. This parameter is valid only if `Format` is `HLS`. Valid values:
	// <li>ts: TS segment</li>
	// <li>fmp4: fMP4 segment</li>
	// Default: ts
	SegmentType *string `json:"SegmentType,omitnil,omitempty" name:"SegmentType"`
}

type CreateAdaptiveDynamicStreamingTemplateRequest struct {
	*tchttp.BaseRequest
	
	// The adaptive bitrate streaming format. Valid values:
	// <li>HLS</li>
	// <li>MPEG-DASH</li>
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Parameter information of output substream for adaptive bitrate streaming. Up to 10 substreams can be output.
	// Note: the frame rate of all substreams must be the same; otherwise, the frame rate of the first substream will be used as the output frame rate.
	StreamInfos []*AdaptiveStreamTemplate `json:"StreamInfos,omitnil,omitempty" name:"StreamInfos"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// DRM scheme type, value range:
	// <li>SimpleAES</li>
	// <li>Widevine</li>
	// <li>FairPlay</li>
	// The default value is an empty string. It is an empty string, indicating that the video will not be DRM protected.
	DrmType *string `json:"DrmType,omitnil,omitempty" name:"DrmType"`

	// The provider of the DRM key. Valid values:
	// <li>SDMC</li>
	// <li>VOD</li>
	// The default is `VOD`.
	DrmKeyProvider *string `json:"DrmKeyProvider,omitnil,omitempty" name:"DrmKeyProvider"`

	// Whether to prohibit transcoding video from low bitrate to high bitrate. Valid values:
	// <li>0: no,</li>
	// <li>1: yes.</li>
	// Default value: no.
	DisableHigherVideoBitrate *uint64 `json:"DisableHigherVideoBitrate,omitnil,omitempty" name:"DisableHigherVideoBitrate"`

	// Whether to prohibit transcoding from low resolution to high resolution. Valid values:
	// <li>0: no,</li>
	// <li>1: yes.</li>
	// Default value: no.
	DisableHigherVideoResolution *uint64 `json:"DisableHigherVideoResolution,omitnil,omitempty" name:"DisableHigherVideoResolution"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The segment type. This parameter is valid only if `Format` is `HLS`. Valid values:
	// <li>ts: TS segment</li>
	// <li>fmp4: fMP4 segment</li>
	// Default: ts
	SegmentType *string `json:"SegmentType,omitnil,omitempty" name:"SegmentType"`
}

func (r *CreateAdaptiveDynamicStreamingTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateAdaptiveDynamicStreamingTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Format")
	delete(f, "StreamInfos")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "DrmType")
	delete(f, "DrmKeyProvider")
	delete(f, "DisableHigherVideoBitrate")
	delete(f, "DisableHigherVideoResolution")
	delete(f, "Comment")
	delete(f, "SegmentType")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateAdaptiveDynamicStreamingTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateAdaptiveDynamicStreamingTemplateResponseParams struct {
	// Unique ID of adaptive bitrate streaming template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateAdaptiveDynamicStreamingTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateAdaptiveDynamicStreamingTemplateResponseParams `json:"Response"`
}

func (r *CreateAdaptiveDynamicStreamingTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateAdaptiveDynamicStreamingTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateAnimatedGraphicsTemplateRequestParams struct {
	// Video frame rate in Hz. Value range: [1, 30].
	Fps *uint64 `json:"Fps,omitnil,omitempty" name:"Fps"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Maximum value of the width (or long side) of an animated image in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of an animated image in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Animated image format. Valid values: gif; webp. Default value: gif.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Image quality. Value range: [1, 100]. Default value: 75.
	Quality *float64 `json:"Quality,omitnil,omitempty" name:"Quality"`

	// Name of an animated image generating template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

type CreateAnimatedGraphicsTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Video frame rate in Hz. Value range: [1, 30].
	Fps *uint64 `json:"Fps,omitnil,omitempty" name:"Fps"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Maximum value of the width (or long side) of an animated image in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of an animated image in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Animated image format. Valid values: gif; webp. Default value: gif.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Image quality. Value range: [1, 100]. Default value: 75.
	Quality *float64 `json:"Quality,omitnil,omitempty" name:"Quality"`

	// Name of an animated image generating template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

func (r *CreateAnimatedGraphicsTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateAnimatedGraphicsTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Fps")
	delete(f, "SubAppId")
	delete(f, "Width")
	delete(f, "Height")
	delete(f, "ResolutionAdaptive")
	delete(f, "Format")
	delete(f, "Quality")
	delete(f, "Name")
	delete(f, "Comment")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateAnimatedGraphicsTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateAnimatedGraphicsTemplateResponseParams struct {
	// Unique ID of an animated image generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateAnimatedGraphicsTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateAnimatedGraphicsTemplateResponseParams `json:"Response"`
}

func (r *CreateAnimatedGraphicsTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateAnimatedGraphicsTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateCDNDomainRequestParams struct {
	// Domain
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Domain Config
	Config *CDNDomainConfig `json:"Config,omitnil,omitempty" name:"Config"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type CreateCDNDomainRequest struct {
	*tchttp.BaseRequest
	
	// Domain
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Domain Config
	Config *CDNDomainConfig `json:"Config,omitnil,omitempty" name:"Config"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *CreateCDNDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateCDNDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domain")
	delete(f, "Config")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateCDNDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateCDNDomainResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateCDNDomainResponse struct {
	*tchttp.BaseResponse
	Response *CreateCDNDomainResponseParams `json:"Response"`
}

func (r *CreateCDNDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateCDNDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateClassRequestParams struct {
	// Parent category ID. For a first-level category, enter `-1`.
	ParentId *int64 `json:"ParentId,omitnil,omitempty" name:"ParentId"`

	// Category name. Length limit: 1-64 characters.
	ClassName *string `json:"ClassName,omitnil,omitempty" name:"ClassName"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type CreateClassRequest struct {
	*tchttp.BaseRequest
	
	// Parent category ID. For a first-level category, enter `-1`.
	ParentId *int64 `json:"ParentId,omitnil,omitempty" name:"ParentId"`

	// Category name. Length limit: 1-64 characters.
	ClassName *string `json:"ClassName,omitnil,omitempty" name:"ClassName"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *CreateClassRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateClassRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ParentId")
	delete(f, "ClassName")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateClassRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateClassResponseParams struct {
	// Category ID
	ClassId *uint64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateClassResponse struct {
	*tchttp.BaseResponse
	Response *CreateClassResponseParams `json:"Response"`
}

func (r *CreateClassResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateClassResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateComplexAdaptiveDynamicStreamingTaskRequestParams struct {
	// The VOD application ID.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media ID of the main media.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Adaptive bitrate streaming parameters, supporting up to 8 entries.
	StreamParaSet []*ComplexAdaptiveDynamicStreamingTaskStreamPara `json:"StreamParaSet,omitnil,omitempty" name:"StreamParaSet"`

	// List of video opening/closing credits configuration template IDs, supporting up to 4 entries. If this field is filled in, the start times of the media specified in AudioSet and SubtitleSet will be automatically adjusted to stay in sync with the main media.
	HeadTailSet []*HeadTailTaskInput `json:"HeadTailSet,omitnil,omitempty" name:"HeadTailSet"`

	// Audio media parameters, supporting up to 16 entries. Each array element corresponds to an audio stream in the output. If you want to add the audio stream from the main media file to the output, you also need to specify it here. The order of elements in the array will determine the order of audio streams in the output. If the input media file contains both video and audio streams, the video stream will be ignored.
	AudioSet []*ComplexAdaptiveDynamicStreamingTaskAudioInput `json:"AudioSet,omitnil,omitempty" name:"AudioSet"`

	// List of subtitle IDs, supporting up to 16 entries. Each array element corresponds to an subtitle stream in the output. The order of elements in the array will determine the order of subtitles in the output.
	SubtitleSet []*ComplexAdaptiveDynamicStreamingTaskSubtitleInput `json:"SubtitleSet,omitnil,omitempty" name:"SubtitleSet"`
}

type CreateComplexAdaptiveDynamicStreamingTaskRequest struct {
	*tchttp.BaseRequest
	
	// The VOD application ID.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media ID of the main media.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Adaptive bitrate streaming parameters, supporting up to 8 entries.
	StreamParaSet []*ComplexAdaptiveDynamicStreamingTaskStreamPara `json:"StreamParaSet,omitnil,omitempty" name:"StreamParaSet"`

	// List of video opening/closing credits configuration template IDs, supporting up to 4 entries. If this field is filled in, the start times of the media specified in AudioSet and SubtitleSet will be automatically adjusted to stay in sync with the main media.
	HeadTailSet []*HeadTailTaskInput `json:"HeadTailSet,omitnil,omitempty" name:"HeadTailSet"`

	// Audio media parameters, supporting up to 16 entries. Each array element corresponds to an audio stream in the output. If you want to add the audio stream from the main media file to the output, you also need to specify it here. The order of elements in the array will determine the order of audio streams in the output. If the input media file contains both video and audio streams, the video stream will be ignored.
	AudioSet []*ComplexAdaptiveDynamicStreamingTaskAudioInput `json:"AudioSet,omitnil,omitempty" name:"AudioSet"`

	// List of subtitle IDs, supporting up to 16 entries. Each array element corresponds to an subtitle stream in the output. The order of elements in the array will determine the order of subtitles in the output.
	SubtitleSet []*ComplexAdaptiveDynamicStreamingTaskSubtitleInput `json:"SubtitleSet,omitnil,omitempty" name:"SubtitleSet"`
}

func (r *CreateComplexAdaptiveDynamicStreamingTaskRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateComplexAdaptiveDynamicStreamingTaskRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "FileId")
	delete(f, "StreamParaSet")
	delete(f, "HeadTailSet")
	delete(f, "AudioSet")
	delete(f, "SubtitleSet")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateComplexAdaptiveDynamicStreamingTaskRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateComplexAdaptiveDynamicStreamingTaskResponseParams struct {
	// Task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateComplexAdaptiveDynamicStreamingTaskResponse struct {
	*tchttp.BaseResponse
	Response *CreateComplexAdaptiveDynamicStreamingTaskResponseParams `json:"Response"`
}

func (r *CreateComplexAdaptiveDynamicStreamingTaskResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateComplexAdaptiveDynamicStreamingTaskResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateContentReviewTemplateRequestParams struct {
	// Whether to allow the recognition result to enter the intelligent recognition platform (for human recognition).
	// <li>ON: yes</li>
	// <li>OFF: no</li>
	ReviewWallSwitch *string `json:"ReviewWallSwitch,omitnil,omitempty" name:"ReviewWallSwitch"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of an intelligent content recognition template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description of an intelligent content recognition template. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter for porn information.
	PornConfigure *PornConfigureInfo `json:"PornConfigure,omitnil,omitempty" name:"PornConfigure"`

	// Control parameter for terrorism information.
	TerrorismConfigure *TerrorismConfigureInfo `json:"TerrorismConfigure,omitnil,omitempty" name:"TerrorismConfigure"`

	// Control parameter for politically sensitive information.
	PoliticalConfigure *PoliticalConfigureInfo `json:"PoliticalConfigure,omitnil,omitempty" name:"PoliticalConfigure"`

	// Control parameter of prohibited information detection. Prohibited information includes:
	// <li>Abusive;</li>
	// <li>Drug-related.</li>
	ProhibitedConfigure *ProhibitedConfigureInfo `json:"ProhibitedConfigure,omitnil,omitempty" name:"ProhibitedConfigure"`

	// Control parameter for custom intelligent content recognition.
	UserDefineConfigure *UserDefineConfigureInfo `json:"UserDefineConfigure,omitnil,omitempty" name:"UserDefineConfigure"`

	// Frame capturing interval in seconds. If this parameter is left empty, 1 second will be used by default. Minimum value: 0.5 seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`
}

type CreateContentReviewTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Whether to allow the recognition result to enter the intelligent recognition platform (for human recognition).
	// <li>ON: yes</li>
	// <li>OFF: no</li>
	ReviewWallSwitch *string `json:"ReviewWallSwitch,omitnil,omitempty" name:"ReviewWallSwitch"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of an intelligent content recognition template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description of an intelligent content recognition template. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter for porn information.
	PornConfigure *PornConfigureInfo `json:"PornConfigure,omitnil,omitempty" name:"PornConfigure"`

	// Control parameter for terrorism information.
	TerrorismConfigure *TerrorismConfigureInfo `json:"TerrorismConfigure,omitnil,omitempty" name:"TerrorismConfigure"`

	// Control parameter for politically sensitive information.
	PoliticalConfigure *PoliticalConfigureInfo `json:"PoliticalConfigure,omitnil,omitempty" name:"PoliticalConfigure"`

	// Control parameter of prohibited information detection. Prohibited information includes:
	// <li>Abusive;</li>
	// <li>Drug-related.</li>
	ProhibitedConfigure *ProhibitedConfigureInfo `json:"ProhibitedConfigure,omitnil,omitempty" name:"ProhibitedConfigure"`

	// Control parameter for custom intelligent content recognition.
	UserDefineConfigure *UserDefineConfigureInfo `json:"UserDefineConfigure,omitnil,omitempty" name:"UserDefineConfigure"`

	// Frame capturing interval in seconds. If this parameter is left empty, 1 second will be used by default. Minimum value: 0.5 seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`
}

func (r *CreateContentReviewTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateContentReviewTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ReviewWallSwitch")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "PornConfigure")
	delete(f, "TerrorismConfigure")
	delete(f, "PoliticalConfigure")
	delete(f, "ProhibitedConfigure")
	delete(f, "UserDefineConfigure")
	delete(f, "ScreenshotInterval")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateContentReviewTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateContentReviewTemplateResponseParams struct {
	// Unique ID of an intelligent recognition template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateContentReviewTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateContentReviewTemplateResponseParams `json:"Response"`
}

func (r *CreateContentReviewTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateContentReviewTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateDomainVerifyRecordRequestParams struct {
	// Need to access the VOD acceleration domain name.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2024, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type CreateDomainVerifyRecordRequest struct {
	*tchttp.BaseRequest
	
	// Need to access the VOD acceleration domain name.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2024, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *CreateDomainVerifyRecordRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateDomainVerifyRecordRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domain")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateDomainVerifyRecordRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateDomainVerifyRecordResponseParams struct {
	// DNS Verify Information
	DNSVerifyInfo *DNSVerifyInfo `json:"DNSVerifyInfo,omitnil,omitempty" name:"DNSVerifyInfo"`

	// File Verify Information
	FileVerifyInfo *FileVerifyInfo `json:"FileVerifyInfo,omitnil,omitempty" name:"FileVerifyInfo"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateDomainVerifyRecordResponse struct {
	*tchttp.BaseResponse
	Response *CreateDomainVerifyRecordResponseParams `json:"Response"`
}

func (r *CreateDomainVerifyRecordResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateDomainVerifyRecordResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateEnhanceMediaTemplateRequestParams struct {
	// Output file encapsulation format, optional values: mp4, flv, hls.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Audio and video quality rebirth template name, length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description information, length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Audio and picture quality regeneration video control control information.
	RebuildVideoInfo *RebuildVideoInfo `json:"RebuildVideoInfo,omitnil,omitempty" name:"RebuildVideoInfo"`

	// Audio and video quality regeneration audio control information.
	RebuildAudioInfo *RebuildAudioInfo `json:"RebuildAudioInfo,omitnil,omitempty" name:"RebuildAudioInfo"`

	// Output target video control information.
	TargetVideoInfo *RebuildMediaTargetVideoStream `json:"TargetVideoInfo,omitnil,omitempty" name:"TargetVideoInfo"`

	// Output target audio control information.
	TargetAudioInfo *RebuildMediaTargetAudioStream `json:"TargetAudioInfo,omitnil,omitempty" name:"TargetAudioInfo"`

	// Whether to remove video data, optional values:
	// <li>0: Keep</li>
	// <li>1: Remove</li>
	// Default value 0.
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data, optional values:
	// <li>0: Keep</li>
	// <li>1: Remove</li>
	// Default value 0.
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`
}

type CreateEnhanceMediaTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Output file encapsulation format, optional values: mp4, flv, hls.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Audio and video quality rebirth template name, length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description information, length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Audio and picture quality regeneration video control control information.
	RebuildVideoInfo *RebuildVideoInfo `json:"RebuildVideoInfo,omitnil,omitempty" name:"RebuildVideoInfo"`

	// Audio and video quality regeneration audio control information.
	RebuildAudioInfo *RebuildAudioInfo `json:"RebuildAudioInfo,omitnil,omitempty" name:"RebuildAudioInfo"`

	// Output target video control information.
	TargetVideoInfo *RebuildMediaTargetVideoStream `json:"TargetVideoInfo,omitnil,omitempty" name:"TargetVideoInfo"`

	// Output target audio control information.
	TargetAudioInfo *RebuildMediaTargetAudioStream `json:"TargetAudioInfo,omitnil,omitempty" name:"TargetAudioInfo"`

	// Whether to remove video data, optional values:
	// <li>0: Keep</li>
	// <li>1: Remove</li>
	// Default value 0.
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data, optional values:
	// <li>0: Keep</li>
	// <li>1: Remove</li>
	// Default value 0.
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`
}

func (r *CreateEnhanceMediaTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateEnhanceMediaTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Container")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "RebuildVideoInfo")
	delete(f, "RebuildAudioInfo")
	delete(f, "TargetVideoInfo")
	delete(f, "TargetAudioInfo")
	delete(f, "RemoveVideo")
	delete(f, "RemoveAudio")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateEnhanceMediaTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateEnhanceMediaTemplateResponseParams struct {
	// Enhance Media Template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateEnhanceMediaTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateEnhanceMediaTemplateResponseParams `json:"Response"`
}

func (r *CreateEnhanceMediaTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateEnhanceMediaTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateHeadTailTemplateRequestParams struct {
	// Template name, length limit is 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template description information, length limit is 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Title candidate list, fill in the FileId of the video. When transcoding, the title closest to the aspect ratio of the feature film will be automatically selected (when the aspect ratio is the same, the front candidate will take precedence). Supports up to 5 candidate titles.
	HeadCandidateSet []*string `json:"HeadCandidateSet,omitnil,omitempty" name:"HeadCandidateSet"`

	// Ending candidate list, fill in the FileId of the video. When transcoding, the ending with the aspect ratio closest to the feature film will be automatically selected (when the aspect ratio is the same, the front candidate will take precedence). Supports up to 5 candidate endings.
	TailCandidateSet []*string `json:"TailCandidateSet,omitnil,omitempty" name:"TailCandidateSet"`

	// Padding method. When the video stream configuration width and height parameters are inconsistent with the aspect ratio of the original video, the transcoding processing method is "padding". Optional filling method:
	// <li> stretch: stretch, stretch each frame to fill the entire screen, which may cause the transcoded video to be "squashed" or "stretched";</li> 
	// <li> gauss: Gaussian blur, keep the video aspect ratio unchanged, use Gaussian blur for the remaining edges; </li>
	// <li> white: leave blank, keep the video aspect ratio unchanged, use the remaining edges for the edge Use white filling; </li>
	// <li> black: Leave black, keep the video aspect ratio unchanged, and fill the remaining edges with black. </li>
	// Default value: stretch.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

type CreateHeadTailTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Template name, length limit is 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template description information, length limit is 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Title candidate list, fill in the FileId of the video. When transcoding, the title closest to the aspect ratio of the feature film will be automatically selected (when the aspect ratio is the same, the front candidate will take precedence). Supports up to 5 candidate titles.
	HeadCandidateSet []*string `json:"HeadCandidateSet,omitnil,omitempty" name:"HeadCandidateSet"`

	// Ending candidate list, fill in the FileId of the video. When transcoding, the ending with the aspect ratio closest to the feature film will be automatically selected (when the aspect ratio is the same, the front candidate will take precedence). Supports up to 5 candidate endings.
	TailCandidateSet []*string `json:"TailCandidateSet,omitnil,omitempty" name:"TailCandidateSet"`

	// Padding method. When the video stream configuration width and height parameters are inconsistent with the aspect ratio of the original video, the transcoding processing method is "padding". Optional filling method:
	// <li> stretch: stretch, stretch each frame to fill the entire screen, which may cause the transcoded video to be "squashed" or "stretched";</li> 
	// <li> gauss: Gaussian blur, keep the video aspect ratio unchanged, use Gaussian blur for the remaining edges; </li>
	// <li> white: leave blank, keep the video aspect ratio unchanged, use the remaining edges for the edge Use white filling; </li>
	// <li> black: Leave black, keep the video aspect ratio unchanged, and fill the remaining edges with black. </li>
	// Default value: stretch.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

func (r *CreateHeadTailTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateHeadTailTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "SubAppId")
	delete(f, "Comment")
	delete(f, "HeadCandidateSet")
	delete(f, "TailCandidateSet")
	delete(f, "FillType")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateHeadTailTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateHeadTailTemplateResponseParams struct {
	// Head Tail Template Number
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateHeadTailTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateHeadTailTemplateResponseParams `json:"Response"`
}

func (r *CreateHeadTailTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateHeadTailTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateImageProcessingTemplateRequestParams struct {
	// An array of image processing operations. The operations will be performed in the specified order.
	// <li>Length limit: 10.</li>
	Operations []*ImageOperation `json:"Operations,omitnil,omitempty" name:"Operations"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The name of the image processing template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

type CreateImageProcessingTemplateRequest struct {
	*tchttp.BaseRequest
	
	// An array of image processing operations. The operations will be performed in the specified order.
	// <li>Length limit: 10.</li>
	Operations []*ImageOperation `json:"Operations,omitnil,omitempty" name:"Operations"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The name of the image processing template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

func (r *CreateImageProcessingTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateImageProcessingTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Operations")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateImageProcessingTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateImageProcessingTemplateResponseParams struct {
	// The template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateImageProcessingTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateImageProcessingTemplateResponseParams `json:"Response"`
}

func (r *CreateImageProcessingTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateImageProcessingTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type CreateImageSpriteTask2017 struct {
	// Image sprite generating task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Error code
	// <li>0: success;</li>
	// <li>Other values: failure.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// ID of generated image sprite file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Image sprite specification. For more information, please see [Image Sprite Generating Template](https://intl.cloud.tencent.com/document/product/266/33480?from_cn_redirect=1#.E9.9B.AA.E7.A2.A7.E5.9B.BE.E6.A8.A1.E6.9D.BF).
	// Note: this field may return null, indicating that no valid values can be obtained.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Total number of subimages in image sprite.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Address of output image sprite.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ImageSpriteUrlSet []*string `json:"ImageSpriteUrlSet,omitnil,omitempty" name:"ImageSpriteUrlSet"`

	// Address of WebVtt file for the position-time relationship among subimages in an image sprite.
	// Note: this field may return null, indicating that no valid values can be obtained.
	WebVttUrl *string `json:"WebVttUrl,omitnil,omitempty" name:"WebVttUrl"`
}

// Predefined struct for user
type CreateImageSpriteTemplateRequestParams struct {
	// Sampling type. Valid values:
	// <li>Percent: by percent.</li>
	// <li>Time: by time interval.</li>
	SampleType *string `json:"SampleType,omitnil,omitempty" name:"SampleType"`

	// Sampling interval.
	// <li>If `SampleType` is `Percent`, sampling will be performed at an interval of the specified percentage.</li>
	// <li>If `SampleType` is `Time`, sampling will be performed at the specified time interval in seconds.</li>
	SampleInterval *uint64 `json:"SampleInterval,omitnil,omitempty" name:"SampleInterval"`

	// The number of rows of small images in the sprite image. 
	// Note: The number of rows of the small image will affect the height of the final large image. The maximum height of the large image is 15,000 pixels. The height of the large image is the product of the number of rows of the small image and the height of the small image.
	RowCount *uint64 `json:"RowCount,omitnil,omitempty" name:"RowCount"`

	// The number of columns of small images in the sprite image. 
	// Note: The number of columns of the small image will affect the width of the final large image. The maximum width of the large image is 15,000 pixels. The width of the large image is the product of the number of columns of the small image and the width of the small image.
	ColumnCount *uint64 `json:"ColumnCount,omitnil,omitempty" name:"ColumnCount"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of an image sprite generating template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`

	// The maximum value of the width (or long side) of the small image in the sprite image, value range: 0 and [128, 4096], unit: px. 
	// <li>When Width and Height are both 0, the resolution is from the same source;</li>
	// <li>When Width is 0 and Height is non-0, Width is scaled proportionally;</li>
	// < li>When Width is non-0 and Height is 0, the Height is scaled proportionally; </li>
	// <li>When both Width and Height are non-0, the resolution is specified by the user. </li>
	// Default value: 0. 
	// Note: The width of the small image will affect the width of the final large image. The maximum width of the large image is 15,000 pixels. The width of the large image is the product of the number of columns of the small image and the width of the small image.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// The maximum value of the height (or short side) of the small image in the sprite image, value range: 0 and [128, 4096], unit: px. 
	// <li>When Width and Height are both 0, the resolution is from the same source;</li>
	// <li>When Width is 0 and Height is non-0, Width is scaled proportionally;</li>
	// < li>When Width is non-0 and Height is 0, the Height is scaled proportionally; </li>
	// <li>When both Width and Height are non-0, the resolution is specified by the user. </li>
	// Default value: 0. 
	// Note: The height of the small image will affect the height of the final large image. The maximum height of the large image is 15,000 pixels. The height of the large image is the product of the number of rows of the small image and the height of the small image.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// The image format. Valid values:
	// <li> jpg</li>
	// <li> png</li>
	// <li> webp</li>
	// Default: jpg
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`
}

type CreateImageSpriteTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Sampling type. Valid values:
	// <li>Percent: by percent.</li>
	// <li>Time: by time interval.</li>
	SampleType *string `json:"SampleType,omitnil,omitempty" name:"SampleType"`

	// Sampling interval.
	// <li>If `SampleType` is `Percent`, sampling will be performed at an interval of the specified percentage.</li>
	// <li>If `SampleType` is `Time`, sampling will be performed at the specified time interval in seconds.</li>
	SampleInterval *uint64 `json:"SampleInterval,omitnil,omitempty" name:"SampleInterval"`

	// The number of rows of small images in the sprite image. 
	// Note: The number of rows of the small image will affect the height of the final large image. The maximum height of the large image is 15,000 pixels. The height of the large image is the product of the number of rows of the small image and the height of the small image.
	RowCount *uint64 `json:"RowCount,omitnil,omitempty" name:"RowCount"`

	// The number of columns of small images in the sprite image. 
	// Note: The number of columns of the small image will affect the width of the final large image. The maximum width of the large image is 15,000 pixels. The width of the large image is the product of the number of columns of the small image and the width of the small image.
	ColumnCount *uint64 `json:"ColumnCount,omitnil,omitempty" name:"ColumnCount"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of an image sprite generating template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`

	// The maximum value of the width (or long side) of the small image in the sprite image, value range: 0 and [128, 4096], unit: px. 
	// <li>When Width and Height are both 0, the resolution is from the same source;</li>
	// <li>When Width is 0 and Height is non-0, Width is scaled proportionally;</li>
	// < li>When Width is non-0 and Height is 0, the Height is scaled proportionally; </li>
	// <li>When both Width and Height are non-0, the resolution is specified by the user. </li>
	// Default value: 0. 
	// Note: The width of the small image will affect the width of the final large image. The maximum width of the large image is 15,000 pixels. The width of the large image is the product of the number of columns of the small image and the width of the small image.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// The maximum value of the height (or short side) of the small image in the sprite image, value range: 0 and [128, 4096], unit: px. 
	// <li>When Width and Height are both 0, the resolution is from the same source;</li>
	// <li>When Width is 0 and Height is non-0, Width is scaled proportionally;</li>
	// < li>When Width is non-0 and Height is 0, the Height is scaled proportionally; </li>
	// <li>When both Width and Height are non-0, the resolution is specified by the user. </li>
	// Default value: 0. 
	// Note: The height of the small image will affect the height of the final large image. The maximum height of the large image is 15,000 pixels. The height of the large image is the product of the number of rows of the small image and the height of the small image.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// The image format. Valid values:
	// <li> jpg</li>
	// <li> png</li>
	// <li> webp</li>
	// Default: jpg
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`
}

func (r *CreateImageSpriteTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateImageSpriteTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SampleType")
	delete(f, "SampleInterval")
	delete(f, "RowCount")
	delete(f, "ColumnCount")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "FillType")
	delete(f, "Width")
	delete(f, "Height")
	delete(f, "ResolutionAdaptive")
	delete(f, "Format")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateImageSpriteTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateImageSpriteTemplateResponseParams struct {
	// Unique ID of an image sprite generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateImageSpriteTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateImageSpriteTemplateResponseParams `json:"Response"`
}

func (r *CreateImageSpriteTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateImageSpriteTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateJustInTimeTranscodeTemplateRequestParams struct {
	// Template name, the length is limited to 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Video parameter configuration.
	VideoConfigure *VideoConfigureInfo `json:"VideoConfigure,omitnil,omitempty" name:"VideoConfigure"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Watermark parameter configuration.
	WatermarkConfigure *WatermarkConfigureInfo `json:"WatermarkConfigure,omitnil,omitempty" name:"WatermarkConfigure"`

	// Template description, the length is limited to 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

type CreateJustInTimeTranscodeTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Template name, the length is limited to 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Video parameter configuration.
	VideoConfigure *VideoConfigureInfo `json:"VideoConfigure,omitnil,omitempty" name:"VideoConfigure"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Watermark parameter configuration.
	WatermarkConfigure *WatermarkConfigureInfo `json:"WatermarkConfigure,omitnil,omitempty" name:"WatermarkConfigure"`

	// Template description, the length is limited to 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

func (r *CreateJustInTimeTranscodeTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateJustInTimeTranscodeTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "VideoConfigure")
	delete(f, "SubAppId")
	delete(f, "WatermarkConfigure")
	delete(f, "Comment")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateJustInTimeTranscodeTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateJustInTimeTranscodeTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateJustInTimeTranscodeTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateJustInTimeTranscodeTemplateResponseParams `json:"Response"`
}

func (r *CreateJustInTimeTranscodeTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateJustInTimeTranscodeTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreatePersonSampleRequestParams struct {
	// Name of a sample. Length limit: 20 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Usage of a sample. Valid values:
	// 1. Recognition: used for content recognition; equivalent to `Recognition.Face`
	// 2. Review: used for inappropriate information recognition; equivalent to `Review.Face`
	// 3. All: equivalent to 1+2.
	Usages []*string `json:"Usages,omitnil,omitempty" name:"Usages"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Description of a sample. Length limit: 1024 characters.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	// String generated after the sample image is encoded by [Base64](https://tools.ietf.org/html/rfc4648). Only JPEG and PNG images are supported. Array length limit: 5 images.
	// Note: the image must be a relatively clear full-face photo of a person and has a resolution of no less than 200 x 200.
	FaceContents []*string `json:"FaceContents,omitnil,omitempty" name:"FaceContents"`

	// Tags of a sample
	// <li>Array length limit: 20 tags</li>
	// <li>Length limit of a tag: 128 characters</li>
	Tags []*string `json:"Tags,omitnil,omitempty" name:"Tags"`
}

type CreatePersonSampleRequest struct {
	*tchttp.BaseRequest
	
	// Name of a sample. Length limit: 20 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Usage of a sample. Valid values:
	// 1. Recognition: used for content recognition; equivalent to `Recognition.Face`
	// 2. Review: used for inappropriate information recognition; equivalent to `Review.Face`
	// 3. All: equivalent to 1+2.
	Usages []*string `json:"Usages,omitnil,omitempty" name:"Usages"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Description of a sample. Length limit: 1024 characters.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	// String generated after the sample image is encoded by [Base64](https://tools.ietf.org/html/rfc4648). Only JPEG and PNG images are supported. Array length limit: 5 images.
	// Note: the image must be a relatively clear full-face photo of a person and has a resolution of no less than 200 x 200.
	FaceContents []*string `json:"FaceContents,omitnil,omitempty" name:"FaceContents"`

	// Tags of a sample
	// <li>Array length limit: 20 tags</li>
	// <li>Length limit of a tag: 128 characters</li>
	Tags []*string `json:"Tags,omitnil,omitempty" name:"Tags"`
}

func (r *CreatePersonSampleRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreatePersonSampleRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "Usages")
	delete(f, "SubAppId")
	delete(f, "Description")
	delete(f, "FaceContents")
	delete(f, "Tags")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreatePersonSampleRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreatePersonSampleResponseParams struct {
	// Information of a sample.
	Person *AiSamplePerson `json:"Person,omitnil,omitempty" name:"Person"`

	// Information of samples that failed the verification by facial feature positioning.
	FailFaceInfoSet []*AiSampleFailFaceInfo `json:"FailFaceInfoSet,omitnil,omitempty" name:"FailFaceInfoSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreatePersonSampleResponse struct {
	*tchttp.BaseResponse
	Response *CreatePersonSampleResponseParams `json:"Response"`
}

func (r *CreatePersonSampleResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreatePersonSampleResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateProcedureTemplateRequestParams struct {
	// Task flow name (up to 20 characters).
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Parameter of video processing task.
	MediaProcessTask *MediaProcessTaskInput `json:"MediaProcessTask,omitnil,omitempty" name:"MediaProcessTask"`

	// The information of the intelligent moderation task\*.
	// <font color=red>\*: This parameter is used by our old moderation templates and is not recommended. Please use `ReviewAudioVideoTask` instead.</font> 
	AiContentReviewTask *AiContentReviewTaskInput `json:"AiContentReviewTask,omitnil,omitempty" name:"AiContentReviewTask"`

	// Parameter of AI-based content analysis task.
	AiAnalysisTask *AiAnalysisTaskInput `json:"AiAnalysisTask,omitnil,omitempty" name:"AiAnalysisTask"`

	// Type parameter of AI-based content recognition task.
	AiRecognitionTask *AiRecognitionTaskInput `json:"AiRecognitionTask,omitnil,omitempty" name:"AiRecognitionTask"`

	// The information of the moderation task.
	ReviewAudioVideoTask *ProcedureReviewAudioVideoTaskInput `json:"ReviewAudioVideoTask,omitnil,omitempty" name:"ReviewAudioVideoTask"`
}

type CreateProcedureTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Task flow name (up to 20 characters).
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Parameter of video processing task.
	MediaProcessTask *MediaProcessTaskInput `json:"MediaProcessTask,omitnil,omitempty" name:"MediaProcessTask"`

	// The information of the intelligent moderation task\*.
	// <font color=red>\*: This parameter is used by our old moderation templates and is not recommended. Please use `ReviewAudioVideoTask` instead.</font> 
	AiContentReviewTask *AiContentReviewTaskInput `json:"AiContentReviewTask,omitnil,omitempty" name:"AiContentReviewTask"`

	// Parameter of AI-based content analysis task.
	AiAnalysisTask *AiAnalysisTaskInput `json:"AiAnalysisTask,omitnil,omitempty" name:"AiAnalysisTask"`

	// Type parameter of AI-based content recognition task.
	AiRecognitionTask *AiRecognitionTaskInput `json:"AiRecognitionTask,omitnil,omitempty" name:"AiRecognitionTask"`

	// The information of the moderation task.
	ReviewAudioVideoTask *ProcedureReviewAudioVideoTaskInput `json:"ReviewAudioVideoTask,omitnil,omitempty" name:"ReviewAudioVideoTask"`
}

func (r *CreateProcedureTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateProcedureTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "SubAppId")
	delete(f, "Comment")
	delete(f, "MediaProcessTask")
	delete(f, "AiContentReviewTask")
	delete(f, "AiAnalysisTask")
	delete(f, "AiRecognitionTask")
	delete(f, "ReviewAudioVideoTask")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateProcedureTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateProcedureTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateProcedureTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateProcedureTemplateResponseParams `json:"Response"`
}

func (r *CreateProcedureTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateProcedureTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateQualityInspectTemplateRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media quality inspect template name.Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Frame interval, unit in seconds, minimum value is 1. When not filled, the default frame interval is 1 second.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`

	// Control parameters for detecting video jitter and ghosting.
	JitterConfigure *JitterConfigureInfo `json:"JitterConfigure,omitnil,omitempty" name:"JitterConfigure"`

	// Control parameters for detecting video blur.
	BlurConfigure *BlurConfigureInfo `json:"BlurConfigure,omitnil,omitempty" name:"BlurConfigure"`

	// Control parameters for detecting low brightness and overexposure of video.
	AbnormalLightingConfigure *AbnormalLightingConfigureInfo `json:"AbnormalLightingConfigure,omitnil,omitempty" name:"AbnormalLightingConfigure"`

	// Control parameters for detecting video crash.
	CrashScreenConfigure *CrashScreenConfigureInfo `json:"CrashScreenConfigure,omitnil,omitempty" name:"CrashScreenConfigure"`

	// Control parameters for detecting video black edges, white edges, black screen, and white screen.
	BlackWhiteEdgeConfigure *BlackWhiteEdgeConfigureInfo `json:"BlackWhiteEdgeConfigure,omitnil,omitempty" name:"BlackWhiteEdgeConfigure"`

	// Control parameters for detecting video noise.
	NoiseConfigure *NoiseConfigureInfo `json:"NoiseConfigure,omitnil,omitempty" name:"NoiseConfigure"`

	// Control parameters for detecting video mosaic.
	MosaicConfigure *MosaicConfigureInfo `json:"MosaicConfigure,omitnil,omitempty" name:"MosaicConfigure"`

	// Control parameters for QR code detection in video.
	QRCodeConfigure *QRCodeConfigureInfo `json:"QRCodeConfigure,omitnil,omitempty" name:"QRCodeConfigure"`

	// Control parameters for audio (mutes, bass, blast sound).
	VoiceConfigure *VoiceConfigureInfo `json:"VoiceConfigure,omitnil,omitempty" name:"VoiceConfigure"`

	// Control parameters for video quality evaluation.
	QualityEvaluationConfigure *QualityEvaluationConfigureInfo `json:"QualityEvaluationConfigure,omitnil,omitempty" name:"QualityEvaluationConfigure"`
}

type CreateQualityInspectTemplateRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media quality inspect template name.Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Frame interval, unit in seconds, minimum value is 1. When not filled, the default frame interval is 1 second.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`

	// Control parameters for detecting video jitter and ghosting.
	JitterConfigure *JitterConfigureInfo `json:"JitterConfigure,omitnil,omitempty" name:"JitterConfigure"`

	// Control parameters for detecting video blur.
	BlurConfigure *BlurConfigureInfo `json:"BlurConfigure,omitnil,omitempty" name:"BlurConfigure"`

	// Control parameters for detecting low brightness and overexposure of video.
	AbnormalLightingConfigure *AbnormalLightingConfigureInfo `json:"AbnormalLightingConfigure,omitnil,omitempty" name:"AbnormalLightingConfigure"`

	// Control parameters for detecting video crash.
	CrashScreenConfigure *CrashScreenConfigureInfo `json:"CrashScreenConfigure,omitnil,omitempty" name:"CrashScreenConfigure"`

	// Control parameters for detecting video black edges, white edges, black screen, and white screen.
	BlackWhiteEdgeConfigure *BlackWhiteEdgeConfigureInfo `json:"BlackWhiteEdgeConfigure,omitnil,omitempty" name:"BlackWhiteEdgeConfigure"`

	// Control parameters for detecting video noise.
	NoiseConfigure *NoiseConfigureInfo `json:"NoiseConfigure,omitnil,omitempty" name:"NoiseConfigure"`

	// Control parameters for detecting video mosaic.
	MosaicConfigure *MosaicConfigureInfo `json:"MosaicConfigure,omitnil,omitempty" name:"MosaicConfigure"`

	// Control parameters for QR code detection in video.
	QRCodeConfigure *QRCodeConfigureInfo `json:"QRCodeConfigure,omitnil,omitempty" name:"QRCodeConfigure"`

	// Control parameters for audio (mutes, bass, blast sound).
	VoiceConfigure *VoiceConfigureInfo `json:"VoiceConfigure,omitnil,omitempty" name:"VoiceConfigure"`

	// Control parameters for video quality evaluation.
	QualityEvaluationConfigure *QualityEvaluationConfigureInfo `json:"QualityEvaluationConfigure,omitnil,omitempty" name:"QualityEvaluationConfigure"`
}

func (r *CreateQualityInspectTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateQualityInspectTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "ScreenshotInterval")
	delete(f, "JitterConfigure")
	delete(f, "BlurConfigure")
	delete(f, "AbnormalLightingConfigure")
	delete(f, "CrashScreenConfigure")
	delete(f, "BlackWhiteEdgeConfigure")
	delete(f, "NoiseConfigure")
	delete(f, "MosaicConfigure")
	delete(f, "QRCodeConfigure")
	delete(f, "VoiceConfigure")
	delete(f, "QualityEvaluationConfigure")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateQualityInspectTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateQualityInspectTemplateResponseParams struct {
	// Media quality inspect template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateQualityInspectTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateQualityInspectTemplateResponseParams `json:"Response"`
}

func (r *CreateQualityInspectTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateQualityInspectTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateRebuildMediaTemplateRequestParams struct {
	// The output container format. Valid values: `mp4`, `flv`, `hls`.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The remaster template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The video remaster parameters.
	RebuildVideoInfo *RebuildVideoInfo `json:"RebuildVideoInfo,omitnil,omitempty" name:"RebuildVideoInfo"`

	// The audio remaster parameters.
	RebuildAudioInfo *RebuildAudioInfo `json:"RebuildAudioInfo,omitnil,omitempty" name:"RebuildAudioInfo"`

	// The output video parameters.
	TargetVideoInfo *RebuildMediaTargetVideoStream `json:"TargetVideoInfo,omitnil,omitempty" name:"TargetVideoInfo"`

	// The output audio parameters.
	TargetAudioInfo *RebuildMediaTargetAudioStream `json:"TargetAudioInfo,omitnil,omitempty" name:"TargetAudioInfo"`

	// Whether to remove video data. Valid values:
	// <li>`0`: No</li>
	// <li>`1`: Yes</li>
	// Default value: 0.
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data. Valid values:
	// <li>`0`: No</li>
	// <li>`1`: Yes</li>
	// Default value: 0.
	RemoveAudio *string `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`
}

type CreateRebuildMediaTemplateRequest struct {
	*tchttp.BaseRequest
	
	// The output container format. Valid values: `mp4`, `flv`, `hls`.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The remaster template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The video remaster parameters.
	RebuildVideoInfo *RebuildVideoInfo `json:"RebuildVideoInfo,omitnil,omitempty" name:"RebuildVideoInfo"`

	// The audio remaster parameters.
	RebuildAudioInfo *RebuildAudioInfo `json:"RebuildAudioInfo,omitnil,omitempty" name:"RebuildAudioInfo"`

	// The output video parameters.
	TargetVideoInfo *RebuildMediaTargetVideoStream `json:"TargetVideoInfo,omitnil,omitempty" name:"TargetVideoInfo"`

	// The output audio parameters.
	TargetAudioInfo *RebuildMediaTargetAudioStream `json:"TargetAudioInfo,omitnil,omitempty" name:"TargetAudioInfo"`

	// Whether to remove video data. Valid values:
	// <li>`0`: No</li>
	// <li>`1`: Yes</li>
	// Default value: 0.
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data. Valid values:
	// <li>`0`: No</li>
	// <li>`1`: Yes</li>
	// Default value: 0.
	RemoveAudio *string `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`
}

func (r *CreateRebuildMediaTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateRebuildMediaTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Container")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "RebuildVideoInfo")
	delete(f, "RebuildAudioInfo")
	delete(f, "TargetVideoInfo")
	delete(f, "TargetAudioInfo")
	delete(f, "RemoveVideo")
	delete(f, "RemoveAudio")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateRebuildMediaTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateRebuildMediaTemplateResponseParams struct {
	// Rebuild Media Template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateRebuildMediaTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateRebuildMediaTemplateResponseParams `json:"Response"`
}

func (r *CreateRebuildMediaTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateRebuildMediaTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateReviewTemplateRequestParams struct {
	// The violation labels to use. Valid values: <li>`Porn`: Pornographic content</li> <li>`Terror`: Terrorist content</li> <li>`Moan`: Moaning</li>
	Labels []*string `json:"Labels,omitnil,omitempty" name:"Labels"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *string `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`


	Name *string `json:"Name,omitnil,omitempty" name:"Name"`


	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

type CreateReviewTemplateRequest struct {
	*tchttp.BaseRequest
	
	// The violation labels to use. Valid values: <li>`Porn`: Pornographic content</li> <li>`Terror`: Terrorist content</li> <li>`Moan`: Moaning</li>
	Labels []*string `json:"Labels,omitnil,omitempty" name:"Labels"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *string `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

func (r *CreateReviewTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateReviewTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Labels")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateReviewTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateReviewTemplateResponseParams struct {

	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateReviewTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateReviewTemplateResponseParams `json:"Response"`
}

func (r *CreateReviewTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateReviewTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateRoundPlayRequestParams struct {
	// The playback start time, in [iso 8601 date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The program list.
	// <Li>Array length limit: 100.</li>.
	RoundPlaylist []*RoundPlayListItemInfo `json:"RoundPlaylist,omitnil,omitempty" name:"RoundPlaylist"`

	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) id. starting from december 25, 2023, if you want to access resources in the vod application (whether it is the default application or a newly created application), you must enter the application id in this field.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The playlist name (not longer than 64 characters).
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The playlist description, length limit: 256 characters.
	Desc *string `json:"Desc,omitnil,omitempty" name:"Desc"`

	// Play mode, optional values:.
	// <Li>Loop: loop the playlist;</li>.
	// <Li>Linear: single play, stop playback after the single play finishes.</li>.
	// Default value: loop.
	PlayBackMode *string `json:"PlayBackMode,omitnil,omitempty" name:"PlayBackMode"`

	// Playlist unique identifier id, with a length limit of 64 characters, only allowing uppercase and lowercase english letters (a-za-z), digits (0-9) and hyphens (-). if there is a playlist with the same roundplayid, return the error invalidparametervalue.roundplayalreadyexists. the default value is empty, which means it is system-assigned.
	RoundPlayId *string `json:"RoundPlayId,omitnil,omitempty" name:"RoundPlayId"`

	// Expiration time, in iso 8601 format. for details, see [iso date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format). the playlist will stop playing after expiration. "9999-12-31t23:59:59+08:00" means it does not expire. default value: 9999-12-31t23:59:59+08:00.
	ExpiredTime *string `json:"ExpiredTime,omitnil,omitempty" name:"ExpiredTime"`
}

type CreateRoundPlayRequest struct {
	*tchttp.BaseRequest
	
	// The playback start time, in [iso 8601 date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The program list.
	// <Li>Array length limit: 100.</li>.
	RoundPlaylist []*RoundPlayListItemInfo `json:"RoundPlaylist,omitnil,omitempty" name:"RoundPlaylist"`

	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) id. starting from december 25, 2023, if you want to access resources in the vod application (whether it is the default application or a newly created application), you must enter the application id in this field.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The playlist name (not longer than 64 characters).
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The playlist description, length limit: 256 characters.
	Desc *string `json:"Desc,omitnil,omitempty" name:"Desc"`

	// Play mode, optional values:.
	// <Li>Loop: loop the playlist;</li>.
	// <Li>Linear: single play, stop playback after the single play finishes.</li>.
	// Default value: loop.
	PlayBackMode *string `json:"PlayBackMode,omitnil,omitempty" name:"PlayBackMode"`

	// Playlist unique identifier id, with a length limit of 64 characters, only allowing uppercase and lowercase english letters (a-za-z), digits (0-9) and hyphens (-). if there is a playlist with the same roundplayid, return the error invalidparametervalue.roundplayalreadyexists. the default value is empty, which means it is system-assigned.
	RoundPlayId *string `json:"RoundPlayId,omitnil,omitempty" name:"RoundPlayId"`

	// Expiration time, in iso 8601 format. for details, see [iso date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format). the playlist will stop playing after expiration. "9999-12-31t23:59:59+08:00" means it does not expire. default value: 9999-12-31t23:59:59+08:00.
	ExpiredTime *string `json:"ExpiredTime,omitnil,omitempty" name:"ExpiredTime"`
}

func (r *CreateRoundPlayRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateRoundPlayRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "StartTime")
	delete(f, "RoundPlaylist")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Desc")
	delete(f, "PlayBackMode")
	delete(f, "RoundPlayId")
	delete(f, "ExpiredTime")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateRoundPlayRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateRoundPlayResponseParams struct {
	// The unique identifier of the playlist.
	RoundPlayId *string `json:"RoundPlayId,omitnil,omitempty" name:"RoundPlayId"`

	// The playlist playback url.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateRoundPlayResponse struct {
	*tchttp.BaseResponse
	Response *CreateRoundPlayResponseParams `json:"Response"`
}

func (r *CreateRoundPlayResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateRoundPlayResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateSampleSnapshotTemplateRequestParams struct {
	// Sampled screencapturing type. Valid values:
	// <li>Percent: by percent.</li>
	// <li>Time: by time interval.</li>
	SampleType *string `json:"SampleType,omitnil,omitempty" name:"SampleType"`

	// Sampling interval.
	// <li>If `SampleType` is `Percent`, sampling will be performed at an interval of the specified percentage.</li>
	// <li>If `SampleType` is `Time`, sampling will be performed at the specified time interval in seconds.</li>
	SampleInterval *uint64 `json:"SampleInterval,omitnil,omitempty" name:"SampleInterval"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of a sampled screencapturing template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Image format. Valid values: jpg, png. Default value: jpg.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// <li>white: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with white color blocks.</li>
	// <li>gauss: fill with Gaussian blur. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with Gaussian blur.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

type CreateSampleSnapshotTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Sampled screencapturing type. Valid values:
	// <li>Percent: by percent.</li>
	// <li>Time: by time interval.</li>
	SampleType *string `json:"SampleType,omitnil,omitempty" name:"SampleType"`

	// Sampling interval.
	// <li>If `SampleType` is `Percent`, sampling will be performed at an interval of the specified percentage.</li>
	// <li>If `SampleType` is `Time`, sampling will be performed at the specified time interval in seconds.</li>
	SampleInterval *uint64 `json:"SampleInterval,omitnil,omitempty" name:"SampleInterval"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of a sampled screencapturing template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Image format. Valid values: jpg, png. Default value: jpg.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// <li>white: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with white color blocks.</li>
	// <li>gauss: fill with Gaussian blur. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with Gaussian blur.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

func (r *CreateSampleSnapshotTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateSampleSnapshotTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SampleType")
	delete(f, "SampleInterval")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Width")
	delete(f, "Height")
	delete(f, "ResolutionAdaptive")
	delete(f, "Format")
	delete(f, "Comment")
	delete(f, "FillType")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateSampleSnapshotTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateSampleSnapshotTemplateResponseParams struct {
	// Unique ID of a sampled screencapturing template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateSampleSnapshotTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateSampleSnapshotTemplateResponseParams `json:"Response"`
}

func (r *CreateSampleSnapshotTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateSampleSnapshotTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateSnapshotByTimeOffsetTemplateRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of a time point screencapturing template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Image format. Valid values: jpg, png. Default value: jpg.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// <li>white: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with white color blocks.</li>
	// <li>gauss: fill with Gaussian blur. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with Gaussian blur.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

type CreateSnapshotByTimeOffsetTemplateRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of a time point screencapturing template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Image format. Valid values: jpg, png. Default value: jpg.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// <li>white: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with white color blocks.</li>
	// <li>gauss: fill with Gaussian blur. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with Gaussian blur.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

func (r *CreateSnapshotByTimeOffsetTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateSnapshotByTimeOffsetTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Width")
	delete(f, "Height")
	delete(f, "ResolutionAdaptive")
	delete(f, "Format")
	delete(f, "Comment")
	delete(f, "FillType")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateSnapshotByTimeOffsetTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateSnapshotByTimeOffsetTemplateResponseParams struct {
	// Unique ID of a time point screencapturing template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateSnapshotByTimeOffsetTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateSnapshotByTimeOffsetTemplateResponseParams `json:"Response"`
}

func (r *CreateSnapshotByTimeOffsetTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateSnapshotByTimeOffsetTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateStorageRegionRequestParams struct {
	// The region to enable storage in, which must be a storage region supported by VOD.
	StorageRegion *string `json:"StorageRegion,omitnil,omitempty" name:"StorageRegion"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type CreateStorageRegionRequest struct {
	*tchttp.BaseRequest
	
	// The region to enable storage in, which must be a storage region supported by VOD.
	StorageRegion *string `json:"StorageRegion,omitnil,omitempty" name:"StorageRegion"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *CreateStorageRegionRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateStorageRegionRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "StorageRegion")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateStorageRegionRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateStorageRegionResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateStorageRegionResponse struct {
	*tchttp.BaseResponse
	Response *CreateStorageRegionResponseParams `json:"Response"`
}

func (r *CreateStorageRegionResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateStorageRegionResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateSubAppIdRequestParams struct {
	// Subapplication name. Length limit: 40 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Subapplication overview. Length limit: 300 characters.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`


	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type CreateSubAppIdRequest struct {
	*tchttp.BaseRequest
	
	// Subapplication name. Length limit: 40 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Subapplication overview. Length limit: 300 characters.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

func (r *CreateSubAppIdRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateSubAppIdRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "Description")
	delete(f, "Type")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateSubAppIdRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateSubAppIdResponseParams struct {
	// ID of created subapplication.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateSubAppIdResponse struct {
	*tchttp.BaseResponse
	Response *CreateSubAppIdResponseParams `json:"Response"`
}

func (r *CreateSubAppIdResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateSubAppIdResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateSuperPlayerConfigRequestParams struct {
	// Player configuration name, which can contain up to 64 letters, digits, underscores, and hyphens (such as test_ABC-123) and must be unique under a user.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Type of audio/video played. Valid values:
	// <li>AdaptiveDynamicStreaming</li>
	// <li>Transcode</li>
	// <li>Original</li>
	// Default value: `AdaptiveDynamicStream`
	AudioVideoType *string `json:"AudioVideoType,omitnil,omitempty" name:"AudioVideoType"`

	// Whether to allow only adaptive bitrate streaming playback protected by DRM. Valid values:
	// <li>`ON`: allow only adaptive bitrate streaming playback protected by DRM</li>
	// <li>`OFF`: allow adaptive bitrate streaming playback not protected by DRM</li>
	// Default value: `OFF`
	// This parameter is valid when `AudioVideoType` is `AdaptiveDynamicStream`.
	DrmSwitch *string `json:"DrmSwitch,omitnil,omitempty" name:"DrmSwitch"`

	// ID of the adaptive bitrate streaming template allowed for playback not protected by DRM.
	// 
	// This parameter is required if `AudioVideoType` is `AdaptiveDynamicStream` and `DrmSwitch` is `OFF`.
	AdaptiveDynamicStreamingDefinition *uint64 `json:"AdaptiveDynamicStreamingDefinition,omitnil,omitempty" name:"AdaptiveDynamicStreamingDefinition"`

	// Content of the adaptive bitrate streaming template allowed for playback protected by DRM.
	// 
	// This parameter is required if `AudioVideoType` is `AdaptiveDynamicStream` and `DrmSwitch` is `ON`.
	DrmStreamingsInfo *DrmStreamingsInfo `json:"DrmStreamingsInfo,omitnil,omitempty" name:"DrmStreamingsInfo"`

	// ID of the transcoding template allowed for playback
	// 
	// This parameter is required if `AudioVideoType` is `Transcode`.
	TranscodeDefinition *uint64 `json:"TranscodeDefinition,omitnil,omitempty" name:"TranscodeDefinition"`

	// ID of the image sprite generating template that allows output.
	ImageSpriteDefinition *uint64 `json:"ImageSpriteDefinition,omitnil,omitempty" name:"ImageSpriteDefinition"`

	// The player displays names for substreams of different resolutions. If left unfilled or filled in a blank array, the default configuration is used:
	// <li>MinEdgeLength: 240, Name: smooth;</li>
	// <li>MinEdgeLength: 480, Name: SD; </li>
	// <li>MinEdgeLength: 720, Name: HD; </li>
	// <li>MinEdgeLength: 1080, Name: Full HD; </li>
	// <li>MinEdgeLength: 1440, Name: 2K; </li>
	// <li>MinEdgeLength: 2160, Name: 4K; </li>
	// <li>MinEdgeLength: 4320, Name: 8K. </li>
	ResolutionNames []*ResolutionNameInfo `json:"ResolutionNames,omitnil,omitempty" name:"ResolutionNames"`

	// Domain name used for playback. If it is left empty or set to `Default`, the domain name configured in [Default Distribution Configuration](https://intl.cloud.tencent.com/document/product/266/33373?from_cn_redirect=1) will be used.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Scheme used for playback. If it is left empty or set to `Default`, the scheme configured in [Default Distribution Configuration](https://intl.cloud.tencent.com/document/product/266/33373?from_cn_redirect=1) will be used. Other valid values:
	// <li>HTTP;</li>
	// <li>HTTPS.</li>
	Scheme *string `json:"Scheme,omitnil,omitempty" name:"Scheme"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

type CreateSuperPlayerConfigRequest struct {
	*tchttp.BaseRequest
	
	// Player configuration name, which can contain up to 64 letters, digits, underscores, and hyphens (such as test_ABC-123) and must be unique under a user.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Type of audio/video played. Valid values:
	// <li>AdaptiveDynamicStreaming</li>
	// <li>Transcode</li>
	// <li>Original</li>
	// Default value: `AdaptiveDynamicStream`
	AudioVideoType *string `json:"AudioVideoType,omitnil,omitempty" name:"AudioVideoType"`

	// Whether to allow only adaptive bitrate streaming playback protected by DRM. Valid values:
	// <li>`ON`: allow only adaptive bitrate streaming playback protected by DRM</li>
	// <li>`OFF`: allow adaptive bitrate streaming playback not protected by DRM</li>
	// Default value: `OFF`
	// This parameter is valid when `AudioVideoType` is `AdaptiveDynamicStream`.
	DrmSwitch *string `json:"DrmSwitch,omitnil,omitempty" name:"DrmSwitch"`

	// ID of the adaptive bitrate streaming template allowed for playback not protected by DRM.
	// 
	// This parameter is required if `AudioVideoType` is `AdaptiveDynamicStream` and `DrmSwitch` is `OFF`.
	AdaptiveDynamicStreamingDefinition *uint64 `json:"AdaptiveDynamicStreamingDefinition,omitnil,omitempty" name:"AdaptiveDynamicStreamingDefinition"`

	// Content of the adaptive bitrate streaming template allowed for playback protected by DRM.
	// 
	// This parameter is required if `AudioVideoType` is `AdaptiveDynamicStream` and `DrmSwitch` is `ON`.
	DrmStreamingsInfo *DrmStreamingsInfo `json:"DrmStreamingsInfo,omitnil,omitempty" name:"DrmStreamingsInfo"`

	// ID of the transcoding template allowed for playback
	// 
	// This parameter is required if `AudioVideoType` is `Transcode`.
	TranscodeDefinition *uint64 `json:"TranscodeDefinition,omitnil,omitempty" name:"TranscodeDefinition"`

	// ID of the image sprite generating template that allows output.
	ImageSpriteDefinition *uint64 `json:"ImageSpriteDefinition,omitnil,omitempty" name:"ImageSpriteDefinition"`

	// The player displays names for substreams of different resolutions. If left unfilled or filled in a blank array, the default configuration is used:
	// <li>MinEdgeLength: 240, Name: smooth;</li>
	// <li>MinEdgeLength: 480, Name: SD; </li>
	// <li>MinEdgeLength: 720, Name: HD; </li>
	// <li>MinEdgeLength: 1080, Name: Full HD; </li>
	// <li>MinEdgeLength: 1440, Name: 2K; </li>
	// <li>MinEdgeLength: 2160, Name: 4K; </li>
	// <li>MinEdgeLength: 4320, Name: 8K. </li>
	ResolutionNames []*ResolutionNameInfo `json:"ResolutionNames,omitnil,omitempty" name:"ResolutionNames"`

	// Domain name used for playback. If it is left empty or set to `Default`, the domain name configured in [Default Distribution Configuration](https://intl.cloud.tencent.com/document/product/266/33373?from_cn_redirect=1) will be used.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Scheme used for playback. If it is left empty or set to `Default`, the scheme configured in [Default Distribution Configuration](https://intl.cloud.tencent.com/document/product/266/33373?from_cn_redirect=1) will be used. Other valid values:
	// <li>HTTP;</li>
	// <li>HTTPS.</li>
	Scheme *string `json:"Scheme,omitnil,omitempty" name:"Scheme"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

func (r *CreateSuperPlayerConfigRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateSuperPlayerConfigRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "SubAppId")
	delete(f, "AudioVideoType")
	delete(f, "DrmSwitch")
	delete(f, "AdaptiveDynamicStreamingDefinition")
	delete(f, "DrmStreamingsInfo")
	delete(f, "TranscodeDefinition")
	delete(f, "ImageSpriteDefinition")
	delete(f, "ResolutionNames")
	delete(f, "Domain")
	delete(f, "Scheme")
	delete(f, "Comment")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateSuperPlayerConfigRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateSuperPlayerConfigResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateSuperPlayerConfigResponse struct {
	*tchttp.BaseResponse
	Response *CreateSuperPlayerConfigResponseParams `json:"Response"`
}

func (r *CreateSuperPlayerConfigResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateSuperPlayerConfigResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateTranscodeTemplateRequestParams struct {
	// The container format. Valid values: `mp4`, `flv`, `hls`, `mp3`, `flac`, `ogg`, `m4a`, `wav` ( `mp3`, `flac`, `ogg`, `m4a`, and `wav` are audio file formats).
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Transcoding template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Whether to remove video data. Valid values:
	// <li>0: retain</li>
	// <li>1: remove</li>
	// Default value: 0.
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data. Valid values:
	// <li>0: retain</li>
	// <li>1: remove</li>
	// Default value: 0.
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`

	// Video stream configuration parameter. This field is required when `RemoveVideo` is 0.
	VideoTemplate *VideoTemplateInfo `json:"VideoTemplate,omitnil,omitempty" name:"VideoTemplate"`

	// Audio stream configuration parameter. This field is required when `RemoveAudio` is 0.
	AudioTemplate *AudioTemplateInfo `json:"AudioTemplate,omitnil,omitempty" name:"AudioTemplate"`

	// TESHD transcoding parameter.
	TEHDConfig *TEHDConfig `json:"TEHDConfig,omitnil,omitempty" name:"TEHDConfig"`

	// The segment type. This parameter is valid only if `Container` is `hls`. Valid values:
	// <li>ts: TS segment</li>
	// <li>fmp4: fMP4 segment</li>
	// Default: ts
	SegmentType *string `json:"SegmentType,omitnil,omitempty" name:"SegmentType"`
}

type CreateTranscodeTemplateRequest struct {
	*tchttp.BaseRequest
	
	// The container format. Valid values: `mp4`, `flv`, `hls`, `mp3`, `flac`, `ogg`, `m4a`, `wav` ( `mp3`, `flac`, `ogg`, `m4a`, and `wav` are audio file formats).
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Transcoding template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Whether to remove video data. Valid values:
	// <li>0: retain</li>
	// <li>1: remove</li>
	// Default value: 0.
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data. Valid values:
	// <li>0: retain</li>
	// <li>1: remove</li>
	// Default value: 0.
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`

	// Video stream configuration parameter. This field is required when `RemoveVideo` is 0.
	VideoTemplate *VideoTemplateInfo `json:"VideoTemplate,omitnil,omitempty" name:"VideoTemplate"`

	// Audio stream configuration parameter. This field is required when `RemoveAudio` is 0.
	AudioTemplate *AudioTemplateInfo `json:"AudioTemplate,omitnil,omitempty" name:"AudioTemplate"`

	// TESHD transcoding parameter.
	TEHDConfig *TEHDConfig `json:"TEHDConfig,omitnil,omitempty" name:"TEHDConfig"`

	// The segment type. This parameter is valid only if `Container` is `hls`. Valid values:
	// <li>ts: TS segment</li>
	// <li>fmp4: fMP4 segment</li>
	// Default: ts
	SegmentType *string `json:"SegmentType,omitnil,omitempty" name:"SegmentType"`
}

func (r *CreateTranscodeTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateTranscodeTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Container")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "RemoveVideo")
	delete(f, "RemoveAudio")
	delete(f, "VideoTemplate")
	delete(f, "AudioTemplate")
	delete(f, "TEHDConfig")
	delete(f, "SegmentType")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateTranscodeTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateTranscodeTemplateResponseParams struct {
	// Unique ID of transcoding template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateTranscodeTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateTranscodeTemplateResponseParams `json:"Response"`
}

func (r *CreateTranscodeTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateTranscodeTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateVodDomainRequestParams struct {
	// Domain name to add to VOD. Note: a wildcard domain name is not supported.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Region to enable acceleration. Valid values:
	// <li>`Chinese Mainland`</li>
	// <li>`Outside Chinese Mainland`</li>
	// <li>`Global`</li>
	// If `AccelerateArea` is not specified, VOD will enable acceleration in or outside Chinese mainland based on the regional information a user has configured with Tencent Cloud.
	AccelerateArea *string `json:"AccelerateArea,omitnil,omitempty" name:"AccelerateArea"`

	// Domain type. Valid values:
	// <li>`VOD`: Domain name distributed using the VOD product;</li> <li>`EdgeOne`: Domain name distributed using the EdgeOne product.</li>default value: VOD. 
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type CreateVodDomainRequest struct {
	*tchttp.BaseRequest
	
	// Domain name to add to VOD. Note: a wildcard domain name is not supported.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Region to enable acceleration. Valid values:
	// <li>`Chinese Mainland`</li>
	// <li>`Outside Chinese Mainland`</li>
	// <li>`Global`</li>
	// If `AccelerateArea` is not specified, VOD will enable acceleration in or outside Chinese mainland based on the regional information a user has configured with Tencent Cloud.
	AccelerateArea *string `json:"AccelerateArea,omitnil,omitempty" name:"AccelerateArea"`

	// Domain type. Valid values:
	// <li>`VOD`: Domain name distributed using the VOD product;</li> <li>`EdgeOne`: Domain name distributed using the EdgeOne product.</li>default value: VOD. 
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

func (r *CreateVodDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateVodDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domain")
	delete(f, "SubAppId")
	delete(f, "AccelerateArea")
	delete(f, "Type")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateVodDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateVodDomainResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateVodDomainResponse struct {
	*tchttp.BaseResponse
	Response *CreateVodDomainResponseParams `json:"Response"`
}

func (r *CreateVodDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateVodDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateWatermarkTemplateRequestParams struct {
	// Watermarking type. Valid values:
	// <li>image: image watermark;</li>
	// <li>text: text watermark;</li>
	// <li>svg: SVG watermark.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Watermarking template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Origin position. Valid values:
	// <li>TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text;</li>
	// <li>TopRight: the origin of coordinates is in the top-right corner of the video, and the origin of the watermark is in the top-right corner of the image or text;</li>
	// <li>BottomLeft: the origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left corner of the image or text;</li>
	// <li>BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the origin of the watermark is in the bottom-right corner of the image or text.</li>
	// Default value: TopLeft.
	CoordinateOrigin *string `json:"CoordinateOrigin,omitnil,omitempty" name:"CoordinateOrigin"`

	// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:
	// <li>If the string ends in %, the `XPos` of the watermark will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width;</li>
	// <li>If the string ends in px, the `XPos` of the watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.</li>
	// Default value: 0 px.
	XPos *string `json:"XPos,omitnil,omitempty" name:"XPos"`

	// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:
	// <li>If the string ends in %, the `YPos` of the watermark will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height;</li>
	// <li>If the string ends in px, the `YPos` of the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.</li>
	// Default value: 0 px.
	YPos *string `json:"YPos,omitnil,omitempty" name:"YPos"`

	// Image watermarking template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
	ImageTemplate *ImageWatermarkInput `json:"ImageTemplate,omitnil,omitempty" name:"ImageTemplate"`

	// Text watermarking template. This field is required when `Type` is `text` and is invalid when `Type` is `image`.
	TextTemplate *TextWatermarkTemplateInput `json:"TextTemplate,omitnil,omitempty" name:"TextTemplate"`

	// SVG watermarking template. This field is required when `Type` is `svg` and is invalid when `Type` is `image` or `text`.
	SvgTemplate *SvgWatermarkInput `json:"SvgTemplate,omitnil,omitempty" name:"SvgTemplate"`
}

type CreateWatermarkTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Watermarking type. Valid values:
	// <li>image: image watermark;</li>
	// <li>text: text watermark;</li>
	// <li>svg: SVG watermark.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Watermarking template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Origin position. Valid values:
	// <li>TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text;</li>
	// <li>TopRight: the origin of coordinates is in the top-right corner of the video, and the origin of the watermark is in the top-right corner of the image or text;</li>
	// <li>BottomLeft: the origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left corner of the image or text;</li>
	// <li>BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the origin of the watermark is in the bottom-right corner of the image or text.</li>
	// Default value: TopLeft.
	CoordinateOrigin *string `json:"CoordinateOrigin,omitnil,omitempty" name:"CoordinateOrigin"`

	// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:
	// <li>If the string ends in %, the `XPos` of the watermark will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width;</li>
	// <li>If the string ends in px, the `XPos` of the watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.</li>
	// Default value: 0 px.
	XPos *string `json:"XPos,omitnil,omitempty" name:"XPos"`

	// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:
	// <li>If the string ends in %, the `YPos` of the watermark will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height;</li>
	// <li>If the string ends in px, the `YPos` of the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.</li>
	// Default value: 0 px.
	YPos *string `json:"YPos,omitnil,omitempty" name:"YPos"`

	// Image watermarking template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
	ImageTemplate *ImageWatermarkInput `json:"ImageTemplate,omitnil,omitempty" name:"ImageTemplate"`

	// Text watermarking template. This field is required when `Type` is `text` and is invalid when `Type` is `image`.
	TextTemplate *TextWatermarkTemplateInput `json:"TextTemplate,omitnil,omitempty" name:"TextTemplate"`

	// SVG watermarking template. This field is required when `Type` is `svg` and is invalid when `Type` is `image` or `text`.
	SvgTemplate *SvgWatermarkInput `json:"SvgTemplate,omitnil,omitempty" name:"SvgTemplate"`
}

func (r *CreateWatermarkTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateWatermarkTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Type")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "CoordinateOrigin")
	delete(f, "XPos")
	delete(f, "YPos")
	delete(f, "ImageTemplate")
	delete(f, "TextTemplate")
	delete(f, "SvgTemplate")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateWatermarkTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateWatermarkTemplateResponseParams struct {
	// Unique ID of watermarking template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Watermark image address. This field is valid only when `Type` is `image`.
	ImageUrl *string `json:"ImageUrl,omitnil,omitempty" name:"ImageUrl"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateWatermarkTemplateResponse struct {
	*tchttp.BaseResponse
	Response *CreateWatermarkTemplateResponseParams `json:"Response"`
}

func (r *CreateWatermarkTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateWatermarkTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateWordSamplesRequestParams struct {
	// <b>Keyword usage. Valid values:</b>
	// 1. Recognition.Ocr: OCR-based content recognition
	// 2. Recognition.Asr: ASR-based content recognition
	// 3. Review.Ocr: OCR-based inappropriate information recognition
	// 4. Review.Asr: ASR-based inappropriate information recognition
	// <b>Valid values can also be:</b>
	// 5. Recognition: ASR- and OCR-based content recognition; equivalent to 1+2
	// 6. Review: ASR- and OCR-based inappropriate information recognition; equivalent to 3+4
	// 7. All: ASR- and OCR-based content recognition and inappropriate information recognition; equivalent to 1+2+3+4
	Usages []*string `json:"Usages,omitnil,omitempty" name:"Usages"`

	// Keyword. Array length limit: 100.
	Words []*AiSampleWordInfo `json:"Words,omitnil,omitempty" name:"Words"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type CreateWordSamplesRequest struct {
	*tchttp.BaseRequest
	
	// <b>Keyword usage. Valid values:</b>
	// 1. Recognition.Ocr: OCR-based content recognition
	// 2. Recognition.Asr: ASR-based content recognition
	// 3. Review.Ocr: OCR-based inappropriate information recognition
	// 4. Review.Asr: ASR-based inappropriate information recognition
	// <b>Valid values can also be:</b>
	// 5. Recognition: ASR- and OCR-based content recognition; equivalent to 1+2
	// 6. Review: ASR- and OCR-based inappropriate information recognition; equivalent to 3+4
	// 7. All: ASR- and OCR-based content recognition and inappropriate information recognition; equivalent to 1+2+3+4
	Usages []*string `json:"Usages,omitnil,omitempty" name:"Usages"`

	// Keyword. Array length limit: 100.
	Words []*AiSampleWordInfo `json:"Words,omitnil,omitempty" name:"Words"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *CreateWordSamplesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateWordSamplesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Usages")
	delete(f, "Words")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateWordSamplesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateWordSamplesResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateWordSamplesResponse struct {
	*tchttp.BaseResponse
	Response *CreateWordSamplesResponseParams `json:"Response"`
}

func (r *CreateWordSamplesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateWordSamplesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DNSVerifyInfo struct {
	// sub-parsing.
	SubDomain *string `json:"SubDomain,omitnil,omitempty" name:"SubDomain"`

	// parse value.
	Record *string `json:"Record,omitnil,omitempty" name:"Record"`

	// parsing type.
	RecordType *string `json:"RecordType,omitnil,omitempty" name:"RecordType"`
}

// Predefined struct for user
type DeleteAIAnalysisTemplateRequestParams struct {
	// Unique ID of video content analysis template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteAIAnalysisTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of video content analysis template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteAIAnalysisTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteAIAnalysisTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteAIAnalysisTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteAIAnalysisTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteAIAnalysisTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteAIAnalysisTemplateResponseParams `json:"Response"`
}

func (r *DeleteAIAnalysisTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteAIAnalysisTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteAIRecognitionTemplateRequestParams struct {
	// Unique ID of video content recognition template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteAIRecognitionTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of video content recognition template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteAIRecognitionTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteAIRecognitionTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteAIRecognitionTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteAIRecognitionTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteAIRecognitionTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteAIRecognitionTemplateResponseParams `json:"Response"`
}

func (r *DeleteAIRecognitionTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteAIRecognitionTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteAdaptiveDynamicStreamingTemplateRequestParams struct {
	// Unique ID of adaptive bitrate streaming template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteAdaptiveDynamicStreamingTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of adaptive bitrate streaming template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteAdaptiveDynamicStreamingTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteAdaptiveDynamicStreamingTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteAdaptiveDynamicStreamingTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteAdaptiveDynamicStreamingTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteAdaptiveDynamicStreamingTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteAdaptiveDynamicStreamingTemplateResponseParams `json:"Response"`
}

func (r *DeleteAdaptiveDynamicStreamingTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteAdaptiveDynamicStreamingTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteAnimatedGraphicsTemplateRequestParams struct {
	// Unique ID of an animated image generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteAnimatedGraphicsTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of an animated image generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteAnimatedGraphicsTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteAnimatedGraphicsTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteAnimatedGraphicsTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteAnimatedGraphicsTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteAnimatedGraphicsTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteAnimatedGraphicsTemplateResponseParams `json:"Response"`
}

func (r *DeleteAnimatedGraphicsTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteAnimatedGraphicsTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteCDNDomainRequestParams struct {
	// Domain.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteCDNDomainRequest struct {
	*tchttp.BaseRequest
	
	// Domain.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteCDNDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteCDNDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domain")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteCDNDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteCDNDomainResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteCDNDomainResponse struct {
	*tchttp.BaseResponse
	Response *DeleteCDNDomainResponseParams `json:"Response"`
}

func (r *DeleteCDNDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteCDNDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteClassRequestParams struct {
	// Category ID
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteClassRequest struct {
	*tchttp.BaseRequest
	
	// Category ID
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteClassRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteClassRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ClassId")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteClassRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteClassResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteClassResponse struct {
	*tchttp.BaseResponse
	Response *DeleteClassResponseParams `json:"Response"`
}

func (r *DeleteClassResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteClassResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteContentReviewTemplateRequestParams struct {
	// Unique ID of an intelligent content recognition template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteContentReviewTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of an intelligent content recognition template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteContentReviewTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteContentReviewTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteContentReviewTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteContentReviewTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteContentReviewTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteContentReviewTemplateResponseParams `json:"Response"`
}

func (r *DeleteContentReviewTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteContentReviewTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteEnhanceMediaTemplateRequestParams struct {
	// Enhance Media Template ID
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteEnhanceMediaTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Enhance Media Template ID
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteEnhanceMediaTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteEnhanceMediaTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteEnhanceMediaTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteEnhanceMediaTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteEnhanceMediaTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteEnhanceMediaTemplateResponseParams `json:"Response"`
}

func (r *DeleteEnhanceMediaTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteEnhanceMediaTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteHeadTailTemplateRequestParams struct {
	// Head Tail Template Number.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteHeadTailTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Head Tail Template Number.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteHeadTailTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteHeadTailTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteHeadTailTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteHeadTailTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteHeadTailTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteHeadTailTemplateResponseParams `json:"Response"`
}

func (r *DeleteHeadTailTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteHeadTailTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteImageProcessingTemplateRequestParams struct {
	// The template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteImageProcessingTemplateRequest struct {
	*tchttp.BaseRequest
	
	// The template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteImageProcessingTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteImageProcessingTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteImageProcessingTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteImageProcessingTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteImageProcessingTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteImageProcessingTemplateResponseParams `json:"Response"`
}

func (r *DeleteImageProcessingTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteImageProcessingTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteImageSpriteTemplateRequestParams struct {
	// Unique ID of an image sprite generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteImageSpriteTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of an image sprite generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteImageSpriteTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteImageSpriteTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteImageSpriteTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteImageSpriteTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteImageSpriteTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteImageSpriteTemplateResponseParams `json:"Response"`
}

func (r *DeleteImageSpriteTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteImageSpriteTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteJustInTimeTranscodeTemplateRequestParams struct {
	// Template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteJustInTimeTranscodeTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteJustInTimeTranscodeTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteJustInTimeTranscodeTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteJustInTimeTranscodeTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteJustInTimeTranscodeTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteJustInTimeTranscodeTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteJustInTimeTranscodeTemplateResponseParams `json:"Response"`
}

func (r *DeleteJustInTimeTranscodeTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteJustInTimeTranscodeTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteMediaRequestParams struct {
	// Unique media file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Content to be deleted. The default value is "[]", which indicates to delete the media file and all its corresponding files generated by video processing.
	DeleteParts []*MediaDeleteItem `json:"DeleteParts,omitnil,omitempty" name:"DeleteParts"`
}

type DeleteMediaRequest struct {
	*tchttp.BaseRequest
	
	// Unique media file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Content to be deleted. The default value is "[]", which indicates to delete the media file and all its corresponding files generated by video processing.
	DeleteParts []*MediaDeleteItem `json:"DeleteParts,omitnil,omitempty" name:"DeleteParts"`
}

func (r *DeleteMediaRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteMediaRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "SubAppId")
	delete(f, "DeleteParts")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteMediaRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteMediaResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteMediaResponse struct {
	*tchttp.BaseResponse
	Response *DeleteMediaResponseParams `json:"Response"`
}

func (r *DeleteMediaResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteMediaResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeletePersonSampleRequestParams struct {
	// ID of a sample.
	PersonId *string `json:"PersonId,omitnil,omitempty" name:"PersonId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeletePersonSampleRequest struct {
	*tchttp.BaseRequest
	
	// ID of a sample.
	PersonId *string `json:"PersonId,omitnil,omitempty" name:"PersonId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeletePersonSampleRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeletePersonSampleRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "PersonId")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeletePersonSampleRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeletePersonSampleResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeletePersonSampleResponse struct {
	*tchttp.BaseResponse
	Response *DeletePersonSampleResponseParams `json:"Response"`
}

func (r *DeletePersonSampleResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeletePersonSampleResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteProcedureTemplateRequestParams struct {
	// Task flow name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteProcedureTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Task flow name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteProcedureTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteProcedureTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteProcedureTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteProcedureTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteProcedureTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteProcedureTemplateResponseParams `json:"Response"`
}

func (r *DeleteProcedureTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteProcedureTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteQualityInspectTemplateRequestParams struct {
	// Media quality inspection template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteQualityInspectTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Media quality inspection template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteQualityInspectTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteQualityInspectTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteQualityInspectTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteQualityInspectTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteQualityInspectTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteQualityInspectTemplateResponseParams `json:"Response"`
}

func (r *DeleteQualityInspectTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteQualityInspectTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteRebuildMediaTemplateRequestParams struct {
	// Rebuild Media Template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteRebuildMediaTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Rebuild Media Template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteRebuildMediaTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteRebuildMediaTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteRebuildMediaTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteRebuildMediaTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteRebuildMediaTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteRebuildMediaTemplateResponseParams `json:"Response"`
}

func (r *DeleteRebuildMediaTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteRebuildMediaTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteReviewTemplateRequestParams struct {
	// The unique ID of the moderation template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteReviewTemplateRequest struct {
	*tchttp.BaseRequest
	
	// The unique ID of the moderation template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteReviewTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteReviewTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteReviewTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteReviewTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteReviewTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteReviewTemplateResponseParams `json:"Response"`
}

func (r *DeleteReviewTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteReviewTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteRoundPlayRequestParams struct {
	// The unique identifier of the playlist.
	RoundPlayId *string `json:"RoundPlayId,omitnil,omitempty" name:"RoundPlayId"`

	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) id. starting from december 25, 2023, if you want to access resources in the vod application (whether it is the default application or a newly created application), you must enter the application id in this field.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteRoundPlayRequest struct {
	*tchttp.BaseRequest
	
	// The unique identifier of the playlist.
	RoundPlayId *string `json:"RoundPlayId,omitnil,omitempty" name:"RoundPlayId"`

	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) id. starting from december 25, 2023, if you want to access resources in the vod application (whether it is the default application or a newly created application), you must enter the application id in this field.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteRoundPlayRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteRoundPlayRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "RoundPlayId")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteRoundPlayRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteRoundPlayResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteRoundPlayResponse struct {
	*tchttp.BaseResponse
	Response *DeleteRoundPlayResponseParams `json:"Response"`
}

func (r *DeleteRoundPlayResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteRoundPlayResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteSampleSnapshotTemplateRequestParams struct {
	// Unique ID of a sampled screencapturing template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteSampleSnapshotTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of a sampled screencapturing template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteSampleSnapshotTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteSampleSnapshotTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteSampleSnapshotTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteSampleSnapshotTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteSampleSnapshotTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteSampleSnapshotTemplateResponseParams `json:"Response"`
}

func (r *DeleteSampleSnapshotTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteSampleSnapshotTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteSnapshotByTimeOffsetTemplateRequestParams struct {
	// Unique ID of a specified time point screencapturing template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteSnapshotByTimeOffsetTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of a specified time point screencapturing template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteSnapshotByTimeOffsetTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteSnapshotByTimeOffsetTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteSnapshotByTimeOffsetTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteSnapshotByTimeOffsetTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteSnapshotByTimeOffsetTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteSnapshotByTimeOffsetTemplateResponseParams `json:"Response"`
}

func (r *DeleteSnapshotByTimeOffsetTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteSnapshotByTimeOffsetTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteSuperPlayerConfigRequestParams struct {
	// Player configuration name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteSuperPlayerConfigRequest struct {
	*tchttp.BaseRequest
	
	// Player configuration name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteSuperPlayerConfigRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteSuperPlayerConfigRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteSuperPlayerConfigRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteSuperPlayerConfigResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteSuperPlayerConfigResponse struct {
	*tchttp.BaseResponse
	Response *DeleteSuperPlayerConfigResponseParams `json:"Response"`
}

func (r *DeleteSuperPlayerConfigResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteSuperPlayerConfigResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteTranscodeTemplateRequestParams struct {
	// Unique ID of transcoding template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteTranscodeTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of transcoding template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteTranscodeTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteTranscodeTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteTranscodeTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteTranscodeTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteTranscodeTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteTranscodeTemplateResponseParams `json:"Response"`
}

func (r *DeleteTranscodeTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteTranscodeTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteVodDomainRequestParams struct {
	// Domain name to delete from VOD
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteVodDomainRequest struct {
	*tchttp.BaseRequest
	
	// Domain name to delete from VOD
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteVodDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteVodDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domain")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteVodDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteVodDomainResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteVodDomainResponse struct {
	*tchttp.BaseResponse
	Response *DeleteVodDomainResponseParams `json:"Response"`
}

func (r *DeleteVodDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteVodDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteWatermarkTemplateRequestParams struct {
	// Unique ID of watermarking template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteWatermarkTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of watermarking template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteWatermarkTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteWatermarkTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteWatermarkTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteWatermarkTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteWatermarkTemplateResponse struct {
	*tchttp.BaseResponse
	Response *DeleteWatermarkTemplateResponseParams `json:"Response"`
}

func (r *DeleteWatermarkTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteWatermarkTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteWordSamplesRequestParams struct {
	// Keyword. Array length limit: 100 words.
	Keywords []*string `json:"Keywords,omitnil,omitempty" name:"Keywords"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DeleteWordSamplesRequest struct {
	*tchttp.BaseRequest
	
	// Keyword. Array length limit: 100 words.
	Keywords []*string `json:"Keywords,omitnil,omitempty" name:"Keywords"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DeleteWordSamplesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteWordSamplesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Keywords")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteWordSamplesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteWordSamplesResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteWordSamplesResponse struct {
	*tchttp.BaseResponse
	Response *DeleteWordSamplesResponseParams `json:"Response"`
}

func (r *DeleteWordSamplesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteWordSamplesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeAIAnalysisTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of video content analysis templates. Array length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeAIAnalysisTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of video content analysis templates. Array length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeAIAnalysisTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeAIAnalysisTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeAIAnalysisTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeAIAnalysisTemplatesResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List of video content analysis template details.
	AIAnalysisTemplateSet []*AIAnalysisTemplateItem `json:"AIAnalysisTemplateSet,omitnil,omitempty" name:"AIAnalysisTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeAIAnalysisTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeAIAnalysisTemplatesResponseParams `json:"Response"`
}

func (r *DescribeAIAnalysisTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeAIAnalysisTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeAIRecognitionTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of video content recognition templates. Array length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Template type filter. Optional values:
	// <li>Preset: preset template;</li>
	// <li>Custom: user-defined template.</li>If not filled default is empty, i.e., no template type filter.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeAIRecognitionTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of video content recognition templates. Array length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Template type filter. Optional values:
	// <li>Preset: preset template;</li>
	// <li>Custom: user-defined template.</li>If not filled default is empty, i.e., no template type filter.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeAIRecognitionTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeAIRecognitionTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Type")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeAIRecognitionTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeAIRecognitionTemplatesResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List of video content recognition template details.
	AIRecognitionTemplateSet []*AIRecognitionTemplateItem `json:"AIRecognitionTemplateSet,omitnil,omitempty" name:"AIRecognitionTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeAIRecognitionTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeAIRecognitionTemplatesResponseParams `json:"Response"`
}

func (r *DescribeAIRecognitionTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeAIRecognitionTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeAdaptiveDynamicStreamingTemplatesRequestParams struct {
	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) id. starting from december 25, 2023, if you want to access resources in the vod application (whether it is the default application or a newly created application), you must enter the application id in this field.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique id filter of transcoding to adaptive bitrate streaming templates. array length limit: 100.
	Definitions []*uint64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Pagination offset. default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. default value: 10. maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Template type filter. valid values:.
	// <Li>Preset: system preset template;</li>.
	// <Li>Custom: user-defined template.</li>.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type DescribeAdaptiveDynamicStreamingTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) id. starting from december 25, 2023, if you want to access resources in the vod application (whether it is the default application or a newly created application), you must enter the application id in this field.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique id filter of transcoding to adaptive bitrate streaming templates. array length limit: 100.
	Definitions []*uint64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Pagination offset. default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. default value: 10. maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Template type filter. valid values:.
	// <Li>Preset: system preset template;</li>.
	// <Li>Custom: user-defined template.</li>.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

func (r *DescribeAdaptiveDynamicStreamingTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeAdaptiveDynamicStreamingTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "Type")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeAdaptiveDynamicStreamingTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeAdaptiveDynamicStreamingTemplatesResponseParams struct {
	// The total number of records matching the filter criteria.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List of transcoding to adaptive bitrate streaming template details.
	AdaptiveDynamicStreamingTemplateSet []*AdaptiveDynamicStreamingTemplate `json:"AdaptiveDynamicStreamingTemplateSet,omitnil,omitempty" name:"AdaptiveDynamicStreamingTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeAdaptiveDynamicStreamingTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeAdaptiveDynamicStreamingTemplatesResponseParams `json:"Response"`
}

func (r *DescribeAdaptiveDynamicStreamingTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeAdaptiveDynamicStreamingTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeAllClassRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DescribeAllClassRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DescribeAllClassRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeAllClassRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeAllClassRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeAllClassResponseParams struct {
	// Category information set
	// Note: this field may return null, indicating that no valid values can be obtained.
	ClassInfoSet []*MediaClassInfo `json:"ClassInfoSet,omitnil,omitempty" name:"ClassInfoSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeAllClassResponse struct {
	*tchttp.BaseResponse
	Response *DescribeAllClassResponseParams `json:"Response"`
}

func (r *DescribeAllClassResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeAllClassResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeAnimatedGraphicsTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of animated image generating templates. Array length limit: 100.
	Definitions []*uint64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Paged offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Template type filter. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type DescribeAnimatedGraphicsTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of animated image generating templates. Array length limit: 100.
	Definitions []*uint64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Paged offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Template type filter. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

func (r *DescribeAnimatedGraphicsTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeAnimatedGraphicsTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "Type")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeAnimatedGraphicsTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeAnimatedGraphicsTemplatesResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List of animated image generating template details.
	AnimatedGraphicsTemplateSet []*AnimatedGraphicsTemplate `json:"AnimatedGraphicsTemplateSet,omitnil,omitempty" name:"AnimatedGraphicsTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeAnimatedGraphicsTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeAnimatedGraphicsTemplatesResponseParams `json:"Response"`
}

func (r *DescribeAnimatedGraphicsTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeAnimatedGraphicsTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeCDNDomainsRequestParams struct {
	// List of domain. If this field is left blank, all domain information will be listed by default.
	Domains []*string `json:"Domains,omitnil,omitempty" name:"Domains"`

	// The maximum number of returned results for pagination fetching. Default value: 20.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// The starting offset of paged pull. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DescribeCDNDomainsRequest struct {
	*tchttp.BaseRequest
	
	// List of domain. If this field is left blank, all domain information will be listed by default.
	Domains []*string `json:"Domains,omitnil,omitempty" name:"Domains"`

	// The maximum number of returned results for pagination fetching. Default value: 20.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// The starting offset of paged pull. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DescribeCDNDomainsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeCDNDomainsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domains")
	delete(f, "Limit")
	delete(f, "Offset")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeCDNDomainsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeCDNDomainsResponseParams struct {
	// Domain information list.
	DomainSet []*CDNDomainInfo `json:"DomainSet,omitnil,omitempty" name:"DomainSet"`

	// The total number of CDN domains under the current application.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeCDNDomainsResponse struct {
	*tchttp.BaseResponse
	Response *DescribeCDNDomainsResponseParams `json:"Response"`
}

func (r *DescribeCDNDomainsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeCDNDomainsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeCDNStatDetailsRequestParams struct {
	// Query indicators, the values u200bu200bare:
	// <li>Traffic: traffic, unit is Byte. </li>
	// <li>Bandwidth: Bandwidth, unit is Bps. </li>
	// <li>Requests: Number of requests. </li>
	// <li>QUICRequests: Number of QUIC requests. </li>
	// <li>IpVisit: Number of IP visits. </li>
	Metric *string `json:"Metric,omitnil,omitempty" name:"Metric"`

	// Start time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// List of domain names. The usage data of up to 20 domain names can be queried at a time. The usage data of all domain names is returned by default.
	DomainNames []*string `json:"DomainNames,omitnil,omitempty" name:"DomainNames"`

	// Service region. Valid values:
	// <li>Chinese Mainland</li>
	// <li>Asia Pacific Region 1: Hong Kong (China), Macao (China), Singapore, Vietnam, and Thailand</li>
	// <li>Asia Pacific Region 2: Taiwan (China), Japan, Malaysia, Indonesia, and South Korea</li>
	// <li>Asia Pacific Region 3: Philippines, India, Australia, and other Asia Pacific countries and regions</li>
	// <li>Middle East</li>
	// <li>Europe</li>
	// <li>North America</li>
	// <li>South America</li>
	// <li>Africa</li>
	// Default value: Chinese Mainland
	Area *string `json:"Area,omitnil,omitempty" name:"Area"`

	// District where users are located. When `Area` is `Chinese Mainland`, valid values for `Districts` are as follows. Otherwise, `Districts` can be ignored.
	// <li>Beijing</li>
	// <li>Inner Mongolia</li>
	// <li>Shanxi</li>
	// <li>Hebei</li>
	// <li>Tianjin</li>
	// <li>Ningxia</li>
	// <li>Shaanxi</li>
	// <li>Gansu</li>
	// <li>Qinghai</li>
	// <li>Xinjiang</li>
	// <li>Heilongjiang</li>
	// <li>Jilin</li>
	// <li>Liaoning</li>
	// <li>Fujian</li>
	// <li>Jiangsu</li>
	// <li>Anhui</li>
	// <li>Shandong</li>
	// <li>Shanghai</li>
	// <li>Zhejiang</li>
	// <li>Henan</li>
	// <li>Hubei</li>
	// <li>Jiangxi</li>
	// <li>Hunan</li>
	// <li>Guizhou</li>
	// <li>Yunnan</li>
	// <li>Chongqing</li>
	// <li>Sichuan</li>
	// <li>Xizang</li>
	// <li>Guangdong</li>
	// <li>Guangxi</li>
	// <li>Hainan</li>
	// <li>Hong Kong, Macao and Taiwan</li>
	// <li>Outside Chinese Mainland</li>
	// <li>Other</li>
	Districts []*string `json:"Districts,omitnil,omitempty" name:"Districts"`

	// ISP of users. When `Area` is `Chinese Mainland`, valid values for `Isps` are as follows. Otherwise, `Isps` can be ignored.
	// <li>China Telecom</li>
	// <li>China Unicom</li>
	// <li>CERNET</li>
	// <li>Great Wall Broadband Network</li>
	// <li>China Mobile</li>
	// <li>China Mobile Tietong</li>
	// <li>ISPs outside Chinese Mainland</li>
	// <li>Other ISPs</li>
	Isps []*string `json:"Isps,omitnil,omitempty" name:"Isps"`

	// Time granularity of every piece of data in minutes. Valid values:
	// <li>5: 5-minute granularity. The data at 5-minute granularity in the query period will be returned.</li>
	// <li>1440: 1-day granularity. The data at 1-day granularity in the query period will be returned. If the query period is larger than 24 hours, only data at 1-day granularity can be queried.</li>
	// If the difference between `StartTime` and `EndTime` is larger than 24 hours, the default value of `DataInterval` is 1440.
	DataInterval *uint64 `json:"DataInterval,omitnil,omitempty" name:"DataInterval"`
}

type DescribeCDNStatDetailsRequest struct {
	*tchttp.BaseRequest
	
	// Query indicators, the values u200bu200bare:
	// <li>Traffic: traffic, unit is Byte. </li>
	// <li>Bandwidth: Bandwidth, unit is Bps. </li>
	// <li>Requests: Number of requests. </li>
	// <li>QUICRequests: Number of QUIC requests. </li>
	// <li>IpVisit: Number of IP visits. </li>
	Metric *string `json:"Metric,omitnil,omitempty" name:"Metric"`

	// Start time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// List of domain names. The usage data of up to 20 domain names can be queried at a time. The usage data of all domain names is returned by default.
	DomainNames []*string `json:"DomainNames,omitnil,omitempty" name:"DomainNames"`

	// Service region. Valid values:
	// <li>Chinese Mainland</li>
	// <li>Asia Pacific Region 1: Hong Kong (China), Macao (China), Singapore, Vietnam, and Thailand</li>
	// <li>Asia Pacific Region 2: Taiwan (China), Japan, Malaysia, Indonesia, and South Korea</li>
	// <li>Asia Pacific Region 3: Philippines, India, Australia, and other Asia Pacific countries and regions</li>
	// <li>Middle East</li>
	// <li>Europe</li>
	// <li>North America</li>
	// <li>South America</li>
	// <li>Africa</li>
	// Default value: Chinese Mainland
	Area *string `json:"Area,omitnil,omitempty" name:"Area"`

	// District where users are located. When `Area` is `Chinese Mainland`, valid values for `Districts` are as follows. Otherwise, `Districts` can be ignored.
	// <li>Beijing</li>
	// <li>Inner Mongolia</li>
	// <li>Shanxi</li>
	// <li>Hebei</li>
	// <li>Tianjin</li>
	// <li>Ningxia</li>
	// <li>Shaanxi</li>
	// <li>Gansu</li>
	// <li>Qinghai</li>
	// <li>Xinjiang</li>
	// <li>Heilongjiang</li>
	// <li>Jilin</li>
	// <li>Liaoning</li>
	// <li>Fujian</li>
	// <li>Jiangsu</li>
	// <li>Anhui</li>
	// <li>Shandong</li>
	// <li>Shanghai</li>
	// <li>Zhejiang</li>
	// <li>Henan</li>
	// <li>Hubei</li>
	// <li>Jiangxi</li>
	// <li>Hunan</li>
	// <li>Guizhou</li>
	// <li>Yunnan</li>
	// <li>Chongqing</li>
	// <li>Sichuan</li>
	// <li>Xizang</li>
	// <li>Guangdong</li>
	// <li>Guangxi</li>
	// <li>Hainan</li>
	// <li>Hong Kong, Macao and Taiwan</li>
	// <li>Outside Chinese Mainland</li>
	// <li>Other</li>
	Districts []*string `json:"Districts,omitnil,omitempty" name:"Districts"`

	// ISP of users. When `Area` is `Chinese Mainland`, valid values for `Isps` are as follows. Otherwise, `Isps` can be ignored.
	// <li>China Telecom</li>
	// <li>China Unicom</li>
	// <li>CERNET</li>
	// <li>Great Wall Broadband Network</li>
	// <li>China Mobile</li>
	// <li>China Mobile Tietong</li>
	// <li>ISPs outside Chinese Mainland</li>
	// <li>Other ISPs</li>
	Isps []*string `json:"Isps,omitnil,omitempty" name:"Isps"`

	// Time granularity of every piece of data in minutes. Valid values:
	// <li>5: 5-minute granularity. The data at 5-minute granularity in the query period will be returned.</li>
	// <li>1440: 1-day granularity. The data at 1-day granularity in the query period will be returned. If the query period is larger than 24 hours, only data at 1-day granularity can be queried.</li>
	// If the difference between `StartTime` and `EndTime` is larger than 24 hours, the default value of `DataInterval` is 1440.
	DataInterval *uint64 `json:"DataInterval,omitnil,omitempty" name:"DataInterval"`
}

func (r *DescribeCDNStatDetailsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeCDNStatDetailsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Metric")
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "SubAppId")
	delete(f, "DomainNames")
	delete(f, "Area")
	delete(f, "Districts")
	delete(f, "Isps")
	delete(f, "DataInterval")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeCDNStatDetailsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeCDNStatDetailsResponseParams struct {
	// Time granularity of every piece of data in minutes.
	DataInterval *uint64 `json:"DataInterval,omitnil,omitempty" name:"DataInterval"`

	// CDN usage statistics.
	Data []*StatDataItem `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeCDNStatDetailsResponse struct {
	*tchttp.BaseResponse
	Response *DescribeCDNStatDetailsResponseParams `json:"Response"`
}

func (r *DescribeCDNStatDetailsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeCDNStatDetailsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeCDNUsageDataRequestParams struct {
	// Start date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). The end date must be after the start date.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// CDN statistics type. Valid values:
	// <li>Flux: traffic in bytes.</li>
	// <li>Bandwidth: bandwidth in bps.</li>
	DataType *string `json:"DataType,omitnil,omitempty" name:"DataType"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Time granularity of usage data in minutes. Valid values:
	// <li>5: 5-minute granularity. The data at 5-minute granularity in the query period will be returned.</li>
	// <li>60: 1-hour granularity. The data at 1-hour granularity in the query period will be returned.</li>
	// <li>1440: 1-day granularity. The data at 1-day granularity in the query period will be returned.</li>
	// Default value: 1440. Data at 1-day granularity will be returned.
	DataInterval *uint64 `json:"DataInterval,omitnil,omitempty" name:"DataInterval"`

	// List of domain names. The usage data of up to 20 domain names can be queried at a time. You can specify multiple domain names and query their combined usage data. The usage data of all domain names will be returned by default.
	DomainNames []*string `json:"DomainNames,omitnil,omitempty" name:"DomainNames"`
}

type DescribeCDNUsageDataRequest struct {
	*tchttp.BaseRequest
	
	// Start date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). The end date must be after the start date.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// CDN statistics type. Valid values:
	// <li>Flux: traffic in bytes.</li>
	// <li>Bandwidth: bandwidth in bps.</li>
	DataType *string `json:"DataType,omitnil,omitempty" name:"DataType"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Time granularity of usage data in minutes. Valid values:
	// <li>5: 5-minute granularity. The data at 5-minute granularity in the query period will be returned.</li>
	// <li>60: 1-hour granularity. The data at 1-hour granularity in the query period will be returned.</li>
	// <li>1440: 1-day granularity. The data at 1-day granularity in the query period will be returned.</li>
	// Default value: 1440. Data at 1-day granularity will be returned.
	DataInterval *uint64 `json:"DataInterval,omitnil,omitempty" name:"DataInterval"`

	// List of domain names. The usage data of up to 20 domain names can be queried at a time. You can specify multiple domain names and query their combined usage data. The usage data of all domain names will be returned by default.
	DomainNames []*string `json:"DomainNames,omitnil,omitempty" name:"DomainNames"`
}

func (r *DescribeCDNUsageDataRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeCDNUsageDataRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "DataType")
	delete(f, "SubAppId")
	delete(f, "DataInterval")
	delete(f, "DomainNames")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeCDNUsageDataRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeCDNUsageDataResponseParams struct {
	// Time granularity in minutes.
	DataInterval *int64 `json:"DataInterval,omitnil,omitempty" name:"DataInterval"`

	// CDN statistics.
	Data []*StatDataItem `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeCDNUsageDataResponse struct {
	*tchttp.BaseResponse
	Response *DescribeCDNUsageDataResponseParams `json:"Response"`
}

func (r *DescribeCDNUsageDataResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeCDNUsageDataResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeCdnLogsRequestParams struct {
	// Domain name.
	DomainName *string `json:"DomainName,omitnil,omitempty" name:"DomainName"`

	// Start time for log acquisition in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F), which must be after the start time.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Maximum return results of pulling paginated queries. Default value: 100; maximum value: 1000
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Page number offset from the beginning of paginated queries. Default value: 0
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`
}

type DescribeCdnLogsRequest struct {
	*tchttp.BaseRequest
	
	// Domain name.
	DomainName *string `json:"DomainName,omitnil,omitempty" name:"DomainName"`

	// Start time for log acquisition in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F), which must be after the start time.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Maximum return results of pulling paginated queries. Default value: 100; maximum value: 1000
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Page number offset from the beginning of paginated queries. Default value: 0
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`
}

func (r *DescribeCdnLogsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeCdnLogsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "DomainName")
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "SubAppId")
	delete(f, "Limit")
	delete(f, "Offset")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeCdnLogsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeCdnLogsResponseParams struct {
	// Total number of log download links
	// Note: this field may return `null`, indicating that no valid value is obtained.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Log download list for CDN nodes outside Mainland China. If global acceleration is not enabled for the domain name, ignore this parameter.
	// Note: this field may return null, indicating that no valid values can be obtained.
	OverseaCdnLogs []*CdnLogInfo `json:"OverseaCdnLogs,omitnil,omitempty" name:"OverseaCdnLogs"`

	// Log download list for CDN nodes in Mainland China.
	// Note: this field may return null, indicating that no valid values can be obtained.
	DomesticCdnLogs []*CdnLogInfo `json:"DomesticCdnLogs,omitnil,omitempty" name:"DomesticCdnLogs"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeCdnLogsResponse struct {
	*tchttp.BaseResponse
	Response *DescribeCdnLogsResponseParams `json:"Response"`
}

func (r *DescribeCdnLogsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeCdnLogsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeClientUploadAccelerationUsageDataRequestParams struct {
	// The start date for the query in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The end date for the query in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format). The end date must be later than the start date.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The client upload acceleration type. Valid values:
	// <li> AccelerationWithHTTP: Acceleration of HTTP transmission</li>
	// <li> AccelerationWithQUIC: Acceleration of QUIC transmission</li>
	// If you do not specify this parameter, the usage of both types will be queried.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type DescribeClientUploadAccelerationUsageDataRequest struct {
	*tchttp.BaseRequest
	
	// The start date for the query in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The end date for the query in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format). The end date must be later than the start date.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The client upload acceleration type. Valid values:
	// <li> AccelerationWithHTTP: Acceleration of HTTP transmission</li>
	// <li> AccelerationWithQUIC: Acceleration of QUIC transmission</li>
	// If you do not specify this parameter, the usage of both types will be queried.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

func (r *DescribeClientUploadAccelerationUsageDataRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeClientUploadAccelerationUsageDataRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "SubAppId")
	delete(f, "Type")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeClientUploadAccelerationUsageDataRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeClientUploadAccelerationUsageDataResponseParams struct {
	// The usage of client upload acceleration.
	ClientUploadAccelerationUsageDataSet []*StatDataItem `json:"ClientUploadAccelerationUsageDataSet,omitnil,omitempty" name:"ClientUploadAccelerationUsageDataSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeClientUploadAccelerationUsageDataResponse struct {
	*tchttp.BaseResponse
	Response *DescribeClientUploadAccelerationUsageDataResponseParams `json:"Response"`
}

func (r *DescribeClientUploadAccelerationUsageDataResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeClientUploadAccelerationUsageDataResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeContentReviewTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique IDs for filters of an intelligent content recognition template. Array length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeContentReviewTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique IDs for filters of an intelligent content recognition template. Array length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeContentReviewTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeContentReviewTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeContentReviewTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeContentReviewTemplatesResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List of intelligent content recognition template details.
	ContentReviewTemplateSet []*ContentReviewTemplateItem `json:"ContentReviewTemplateSet,omitnil,omitempty" name:"ContentReviewTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeContentReviewTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeContentReviewTemplatesResponseParams `json:"Response"`
}

func (r *DescribeContentReviewTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeContentReviewTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeCurrentPlaylistRequestParams struct {
	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) id.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The unique identifier of the playlist.
	RoundPlayId *string `json:"RoundPlayId,omitnil,omitempty" name:"RoundPlayId"`

	// The length of the returned playlist. maximum is 10, default value is 5.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeCurrentPlaylistRequest struct {
	*tchttp.BaseRequest
	
	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) id.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The unique identifier of the playlist.
	RoundPlayId *string `json:"RoundPlayId,omitnil,omitempty" name:"RoundPlayId"`

	// The length of the returned playlist. maximum is 10, default value is 5.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeCurrentPlaylistRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeCurrentPlaylistRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "RoundPlayId")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeCurrentPlaylistRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeCurrentPlaylistResponseParams struct {
	// Current playlist information.
	CurrentPlaylist []*RoundPlayFilePlayInfo `json:"CurrentPlaylist,omitnil,omitempty" name:"CurrentPlaylist"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeCurrentPlaylistResponse struct {
	*tchttp.BaseResponse
	Response *DescribeCurrentPlaylistResponseParams `json:"Response"`
}

func (r *DescribeCurrentPlaylistResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeCurrentPlaylistResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeDailyPlayStatFileListRequestParams struct {
	// Start date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DescribeDailyPlayStatFileListRequest struct {
	*tchttp.BaseRequest
	
	// Start date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DescribeDailyPlayStatFileListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeDailyPlayStatFileListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeDailyPlayStatFileListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeDailyPlayStatFileListResponseParams struct {
	// List of playback statistics files.
	PlayStatFileSet []*PlayStatFileInfo `json:"PlayStatFileSet,omitnil,omitempty" name:"PlayStatFileSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeDailyPlayStatFileListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeDailyPlayStatFileListResponseParams `json:"Response"`
}

func (r *DescribeDailyPlayStatFileListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeDailyPlayStatFileListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeDrmKeyProviderInfoRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DescribeDrmKeyProviderInfoRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DescribeDrmKeyProviderInfoRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeDrmKeyProviderInfoRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeDrmKeyProviderInfoRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeDrmKeyProviderInfoResponseParams struct {
	// The DRM key information provided by SDMC.
	// Note: This field may return null, indicating that no valid values can be obtained.
	SDMCInfo *SDMCDrmKeyProviderInfo `json:"SDMCInfo,omitnil,omitempty" name:"SDMCInfo"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeDrmKeyProviderInfoResponse struct {
	*tchttp.BaseResponse
	Response *DescribeDrmKeyProviderInfoResponseParams `json:"Response"`
}

func (r *DescribeDrmKeyProviderInfoResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeDrmKeyProviderInfoResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeEnhanceMediaTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// List of Enhance media templates. Length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Template type filter conditions, optional values:
	// <li>Preset: system preset template;</li>
	// <li>Custom: user-defined template. </li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Paging offset, default value: 0.
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Returns the number of records, default value: 10, maximum value: 100.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeEnhanceMediaTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// List of Enhance media templates. Length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Template type filter conditions, optional values:
	// <li>Preset: system preset template;</li>
	// <li>Custom: user-defined template. </li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Paging offset, default value: 0.
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Returns the number of records, default value: 10, maximum value: 100.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeEnhanceMediaTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeEnhanceMediaTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Type")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeEnhanceMediaTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeEnhanceMediaTemplatesResponseParams struct {
	// The total number of records matching the filter criteria.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Detailed list of Rebuild Media templates.
	RebuildMediaTemplateSet []*RebuildMediaTemplate `json:"RebuildMediaTemplateSet,omitnil,omitempty" name:"RebuildMediaTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeEnhanceMediaTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeEnhanceMediaTemplatesResponseParams `json:"Response"`
}

func (r *DescribeEnhanceMediaTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeEnhanceMediaTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeEventConfigRequestParams struct {
	// <b>The VOD [application](https://www.tencentcloud.com/document/product/266/33987) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DescribeEventConfigRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://www.tencentcloud.com/document/product/266/33987) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DescribeEventConfigRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeEventConfigRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeEventConfigRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeEventConfigResponseParams struct {
	// How to receive event notifications. 
	// <li>PUSH: [HTTP callback notification](https://www.tencentcloud.com/document/product/266/33948);</li>
	// <li>PULL: [Reliable notification based on message queue ](https://www.tencentcloud.com/document/product/266/33948). </li>
	Mode *string `json:"Mode,omitnil,omitempty" name:"Mode"`

	// The address used to receive 3.0 format callbacks when using the [HTTP callback notification](https://www.tencentcloud.com/document/product/266/33948) reception method. 
	NotificationUrl *string `json:"NotificationUrl,omitnil,omitempty" name:"NotificationUrl"`

	// Whether to receive the [Video Upload Completed](https://www.tencentcloud.com/document/product/266/33950) event notification. "OFF" is to ignore the event notification, and "ON" is to receive the event notification. 
	UploadMediaCompleteEventSwitch *string `json:"UploadMediaCompleteEventSwitch,omitnil,omitempty" name:"UploadMediaCompleteEventSwitch"`

	// Whether to receive [Video deletion completed](https://www.tencentcloud.com/document/product/266/33952) event notification, "OFF" means to ignore the event notification, "ON" means to receive the event notification .
	DeleteMediaCompleteEventSwitch *string `json:"DeleteMediaCompleteEventSwitch,omitnil,omitempty" name:"DeleteMediaCompleteEventSwitch"`

	// Whether to receive the Persistence completed event notification,  "OFF" means to ignore the event notification, "ON" means to receive the event notification.
	PersistenceCompleteEventSwitch *string `json:"PersistenceCompleteEventSwitch,omitnil,omitempty" name:"PersistenceCompleteEventSwitch"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeEventConfigResponse struct {
	*tchttp.BaseResponse
	Response *DescribeEventConfigResponseParams `json:"Response"`
}

func (r *DescribeEventConfigResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeEventConfigResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeFileAttributesRequestParams struct {
	// The file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last three days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The task priority. The higher the value, the higher the priority. Value range: -10-10. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// A reserved parameter.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type DescribeFileAttributesRequest struct {
	*tchttp.BaseRequest
	
	// The file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last three days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The task priority. The higher the value, the higher the priority. Value range: -10-10. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// A reserved parameter.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *DescribeFileAttributesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeFileAttributesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "SubAppId")
	delete(f, "SessionId")
	delete(f, "SessionContext")
	delete(f, "TasksPriority")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeFileAttributesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeFileAttributesResponseParams struct {
	// The task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeFileAttributesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeFileAttributesResponseParams `json:"Response"`
}

func (r *DescribeFileAttributesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeFileAttributesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeFileAttributesTask struct {
	// The task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// The error code. `0` indicates the task is successful. Other values indicate that the task failed.
	// <li>`40000`: Invalid input parameter.</li>
	// <li>`60000`: Source file error (e.g., video data is corrupted).</li>
	// <li>`70000`: Internal server error. Please try again.</li>
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// The error code. An empty string indicates the task is successful; other values indicate that the task failed. For details, see [Video processing error codes](https://intl.cloud.tencent.com/document/product/266/39145?lang=en&pg=#video-processing).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// The error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// The task progress. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The file ID
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The output of the task to get file attributes.
	// Note: This field may return null, indicating that no valid values can be obtained.
	Output *DescribeFileAttributesTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last seven days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`
}

type DescribeFileAttributesTaskOutput struct {
	// The MD5 hash of the file.
	Md5 *string `json:"Md5,omitnil,omitempty" name:"Md5"`

	// The Sha1 value of the media file.
	Sha1 *string `json:"Sha1,omitnil,omitempty" name:"Sha1"`
}

// Predefined struct for user
type DescribeHeadTailTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Head Tail template number, array length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Paging offset, default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Returns the number of records, default value: 10, maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeHeadTailTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Head Tail template number, array length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Paging offset, default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Returns the number of records, default value: 10, maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeHeadTailTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeHeadTailTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeHeadTailTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeHeadTailTemplatesResponseParams struct {
	// The total number of records matching the filter criteria.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Head Tail Template Details.
	HeadTailTemplateSet []*HeadTailTemplate `json:"HeadTailTemplateSet,omitnil,omitempty" name:"HeadTailTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeHeadTailTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeHeadTailTemplatesResponseParams `json:"Response"`
}

func (r *DescribeHeadTailTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeHeadTailTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeImageProcessingTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The IDs of the templates to query. Length limit: 100.
	Definitions []*uint64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// The template type. Valid values:
	// <li>Preset</li>
	// <li>Custom</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// The number of records to return. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeImageProcessingTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The IDs of the templates to query. Length limit: 100.
	Definitions []*uint64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// The template type. Valid values:
	// <li>Preset</li>
	// <li>Custom</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// The number of records to return. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeImageProcessingTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeImageProcessingTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Type")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeImageProcessingTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeImageProcessingTemplatesResponseParams struct {
	// The total number of records that meet the conditions.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// The information of the queried image processing templates.
	ImageProcessingTemplateSet []*ImageProcessingTemplate `json:"ImageProcessingTemplateSet,omitnil,omitempty" name:"ImageProcessingTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeImageProcessingTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeImageProcessingTemplatesResponseParams `json:"Response"`
}

func (r *DescribeImageProcessingTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeImageProcessingTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeImageReviewUsageDataRequestParams struct {
	// The start date for the query in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The end date for the query in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format). The end date must be later than the start date.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DescribeImageReviewUsageDataRequest struct {
	*tchttp.BaseRequest
	
	// The start date for the query in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The end date for the query in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format). The end date must be later than the start date.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DescribeImageReviewUsageDataRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeImageReviewUsageDataRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeImageReviewUsageDataRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeImageReviewUsageDataResponseParams struct {
	// The image recognition usage statistics (the number of times the image recognition feature is used in the time period specified).
	ImageReviewUsageDataSet []*ImageReviewUsageDataItem `json:"ImageReviewUsageDataSet,omitnil,omitempty" name:"ImageReviewUsageDataSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeImageReviewUsageDataResponse struct {
	*tchttp.BaseResponse
	Response *DescribeImageReviewUsageDataResponseParams `json:"Response"`
}

func (r *DescribeImageReviewUsageDataResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeImageReviewUsageDataResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeImageSpriteTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of image sprite generating templates. Array length limit: 100.
	Definitions []*uint64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Paged offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Template type filter. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type DescribeImageSpriteTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of image sprite generating templates. Array length limit: 100.
	Definitions []*uint64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Paged offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Template type filter. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

func (r *DescribeImageSpriteTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeImageSpriteTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "Type")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeImageSpriteTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeImageSpriteTemplatesResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List of image sprite generating template details.
	ImageSpriteTemplateSet []*ImageSpriteTemplate `json:"ImageSpriteTemplateSet,omitnil,omitempty" name:"ImageSpriteTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeImageSpriteTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeImageSpriteTemplatesResponseParams `json:"Response"`
}

func (r *DescribeImageSpriteTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeImageSpriteTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeJustInTimeTranscodeTemplatesRequestParams struct {
	// Template name filter condition, array length limit: 100.
	Names []*string `json:"Names,omitnil,omitempty" name:"Names"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template type filter conditions, optional values:
	// <li>Preset: system preset task flow template;</li>
	// <li>Custom: user-defined task flow template. </li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Paging offset, default value: 0.
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Returns the number of records, default value: 10, maximum value: 100.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeJustInTimeTranscodeTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// Template name filter condition, array length limit: 100.
	Names []*string `json:"Names,omitnil,omitempty" name:"Names"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template type filter conditions, optional values:
	// <li>Preset: system preset task flow template;</li>
	// <li>Custom: user-defined task flow template. </li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Paging offset, default value: 0.
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Returns the number of records, default value: 10, maximum value: 100.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeJustInTimeTranscodeTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeJustInTimeTranscodeTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Names")
	delete(f, "SubAppId")
	delete(f, "Type")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeJustInTimeTranscodeTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeJustInTimeTranscodeTemplatesResponseParams struct {
	// The total number of records matching the filter criteria.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Template details list.
	JustInTimeTranscodeTemplateSet []*JustInTimeTranscodeTemplate `json:"JustInTimeTranscodeTemplateSet,omitnil,omitempty" name:"JustInTimeTranscodeTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeJustInTimeTranscodeTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeJustInTimeTranscodeTemplatesResponseParams `json:"Response"`
}

func (r *DescribeJustInTimeTranscodeTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeJustInTimeTranscodeTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeLicenseUsageDataRequestParams struct {
	// The start date for the query in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The end date for the query in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format). The end date must be later than the start date.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// The license type, which is DRM by default. Valid values:
	// <li> DRM</li>
	LicenseType *string `json:"LicenseType,omitnil,omitempty" name:"LicenseType"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DescribeLicenseUsageDataRequest struct {
	*tchttp.BaseRequest
	
	// The start date for the query in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The end date for the query in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format). The end date must be later than the start date.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// The license type, which is DRM by default. Valid values:
	// <li> DRM</li>
	LicenseType *string `json:"LicenseType,omitnil,omitempty" name:"LicenseType"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DescribeLicenseUsageDataRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeLicenseUsageDataRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "LicenseType")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeLicenseUsageDataRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeLicenseUsageDataResponseParams struct {
	// The license request statistics (the number of license requests in the time period specified)
	LicenseUsageDataSet []*LicenseUsageDataItem `json:"LicenseUsageDataSet,omitnil,omitempty" name:"LicenseUsageDataSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeLicenseUsageDataResponse struct {
	*tchttp.BaseResponse
	Response *DescribeLicenseUsageDataResponseParams `json:"Response"`
}

func (r *DescribeLicenseUsageDataResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeLicenseUsageDataResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMediaInfosRequestParams struct {
	// List of media file IDs. N starts from 0 and can be up to 19.
	FileIds []*string `json:"FileIds,omitnil,omitempty" name:"FileIds"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The types of information to return. You can specify multiple information types. `N` starts from 0. If you do not specify this parameter, all information will be returned. The supported information types are as follows:
	// <li>`basicInfo` (basic information)</li>
	// <li>`metaData` (video metadata)</li>
	// <li>`transcodeInfo` (transcoding information)</li>
	// <li>`animatedGraphicsInfo` (animated image information)</li>
	// <li>`imageSpriteInfo` (image sprite information)</li>
	// <li>`snapshotByTimeOffsetInfo` (time point screenshot information)</li>
	// <li>`sampleSnapshotInfo` (sampled screenshot information)</li>
	// <li>`keyFrameDescInfo` (timestamp information)</li>
	// <li>`adaptiveDynamicStreamingInfo` (adaptive bitrate information)</li>
	// <li>`miniProgramReviewInfo` (WeChat Mini Program moderation information)</li>
	// <li>`subtitleInfo` (subtitle information)</li>
	// <li>`reviewInfo` (moderation information)</li>
	Filters []*string `json:"Filters,omitnil,omitempty" name:"Filters"`
}

type DescribeMediaInfosRequest struct {
	*tchttp.BaseRequest
	
	// List of media file IDs. N starts from 0 and can be up to 19.
	FileIds []*string `json:"FileIds,omitnil,omitempty" name:"FileIds"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The types of information to return. You can specify multiple information types. `N` starts from 0. If you do not specify this parameter, all information will be returned. The supported information types are as follows:
	// <li>`basicInfo` (basic information)</li>
	// <li>`metaData` (video metadata)</li>
	// <li>`transcodeInfo` (transcoding information)</li>
	// <li>`animatedGraphicsInfo` (animated image information)</li>
	// <li>`imageSpriteInfo` (image sprite information)</li>
	// <li>`snapshotByTimeOffsetInfo` (time point screenshot information)</li>
	// <li>`sampleSnapshotInfo` (sampled screenshot information)</li>
	// <li>`keyFrameDescInfo` (timestamp information)</li>
	// <li>`adaptiveDynamicStreamingInfo` (adaptive bitrate information)</li>
	// <li>`miniProgramReviewInfo` (WeChat Mini Program moderation information)</li>
	// <li>`subtitleInfo` (subtitle information)</li>
	// <li>`reviewInfo` (moderation information)</li>
	Filters []*string `json:"Filters,omitnil,omitempty" name:"Filters"`
}

func (r *DescribeMediaInfosRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMediaInfosRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileIds")
	delete(f, "SubAppId")
	delete(f, "Filters")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMediaInfosRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMediaInfosResponseParams struct {
	// Media file information list.
	MediaInfoSet []*MediaInfo `json:"MediaInfoSet,omitnil,omitempty" name:"MediaInfoSet"`

	// List of IDs of files that do not exist.
	NotExistFileIdSet []*string `json:"NotExistFileIdSet,omitnil,omitempty" name:"NotExistFileIdSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMediaInfosResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMediaInfosResponseParams `json:"Response"`
}

func (r *DescribeMediaInfosResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMediaInfosResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMediaPlayStatDetailsRequestParams struct {
	// The ID of the media file.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The start time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The end time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Granularity. Valid values:
	// <li>Hour</li>
	// <li>Day</li>
	// The default value depends on the time period queried. If the time period is shorter than one day, the default value is `Hour`; if the time period is one day or longer, the default value is `Day`.
	Interval *string `json:"Interval,omitnil,omitempty" name:"Interval"`
}

type DescribeMediaPlayStatDetailsRequest struct {
	*tchttp.BaseRequest
	
	// The ID of the media file.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The start time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The end time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Granularity. Valid values:
	// <li>Hour</li>
	// <li>Day</li>
	// The default value depends on the time period queried. If the time period is shorter than one day, the default value is `Hour`; if the time period is one day or longer, the default value is `Day`.
	Interval *string `json:"Interval,omitnil,omitempty" name:"Interval"`
}

func (r *DescribeMediaPlayStatDetailsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMediaPlayStatDetailsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "SubAppId")
	delete(f, "Interval")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMediaPlayStatDetailsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMediaPlayStatDetailsResponseParams struct {
	// The playback statistics.
	PlayStatInfoSet []*PlayStatInfo `json:"PlayStatInfoSet,omitnil,omitempty" name:"PlayStatInfoSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMediaPlayStatDetailsResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMediaPlayStatDetailsResponseParams `json:"Response"`
}

func (r *DescribeMediaPlayStatDetailsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMediaPlayStatDetailsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMediaProcessUsageDataRequestParams struct {
	// Start date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F). The end date must be on or after the start date.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Query the video processing task type. Currently supported task types include:
	// <li> Transcoding: Normal transcoding</li>
	// <li> Transcoding-TESHD: Extremely fast high-definition transcoding</li>
	// <li> Editing : Video editing</li>
	// <li> Editing-TESHD: Extremely fast high-definition video editing</li>
	// <li> AdaptiveBitrateStreaming: Adaptive bitrate streaming</li>
	// <li> ContentAudit: Content audit</li> li>
	// <li> ContentRecognition: Content recognition</li>
	// <li> RemoveWatermark: Remove watermark</li>
	// <li> ExtractTraceWatermark: Extract watermark</li>
	// <li> AddTraceWatermark: Add watermark </li>
	// <li> RebuildMedia: Rebirth of audio and video quality</li>
	// <li> QualityInspect: Media quality inspection</li>
	// <li> VideoHighlight: Smart video collection</li>
	// < li> VideoTag: Video smart tag</li>
	// <li> VideoClassification: Video smart classification</li>
	// <li> VideoCover: Video smart cover</li>
	// <li> VideoSegment: Video smart split </li>
	// <li>Transcode: transcoding, including normal transcoding, high-speed HD and video editing (not recommended)</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type DescribeMediaProcessUsageDataRequest struct {
	*tchttp.BaseRequest
	
	// Start date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F). The end date must be on or after the start date.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Query the video processing task type. Currently supported task types include:
	// <li> Transcoding: Normal transcoding</li>
	// <li> Transcoding-TESHD: Extremely fast high-definition transcoding</li>
	// <li> Editing : Video editing</li>
	// <li> Editing-TESHD: Extremely fast high-definition video editing</li>
	// <li> AdaptiveBitrateStreaming: Adaptive bitrate streaming</li>
	// <li> ContentAudit: Content audit</li> li>
	// <li> ContentRecognition: Content recognition</li>
	// <li> RemoveWatermark: Remove watermark</li>
	// <li> ExtractTraceWatermark: Extract watermark</li>
	// <li> AddTraceWatermark: Add watermark </li>
	// <li> RebuildMedia: Rebirth of audio and video quality</li>
	// <li> QualityInspect: Media quality inspection</li>
	// <li> VideoHighlight: Smart video collection</li>
	// < li> VideoTag: Video smart tag</li>
	// <li> VideoClassification: Video smart classification</li>
	// <li> VideoCover: Video smart cover</li>
	// <li> VideoSegment: Video smart split </li>
	// <li>Transcode: transcoding, including normal transcoding, high-speed HD and video editing (not recommended)</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

func (r *DescribeMediaProcessUsageDataRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMediaProcessUsageDataRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "SubAppId")
	delete(f, "Type")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMediaProcessUsageDataRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMediaProcessUsageDataResponseParams struct {
	// Overview of video processing statistics, which displays the overview and details of queried tasks.
	MediaProcessDataSet []*TaskStatData `json:"MediaProcessDataSet,omitnil,omitempty" name:"MediaProcessDataSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMediaProcessUsageDataResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMediaProcessUsageDataResponseParams `json:"Response"`
}

func (r *DescribeMediaProcessUsageDataResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMediaProcessUsageDataResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribePersonSamplesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Type of samples to pull. Valid values:
	// <li>UserDefine: custom sample library</li>
	// <li>Default: default sample library</li>
	// 
	// Default value: UserDefine. Samples in the custom sample library will be pulled.
	// Note: samples from the default library can only be pulled by providing the name or both the ID and name of a sample. Only one face image will be returned.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// IDs of samples. Array length limit: 100.
	PersonIds []*string `json:"PersonIds,omitnil,omitempty" name:"PersonIds"`

	// Names of samples. Array length limit: 20.
	Names []*string `json:"Names,omitnil,omitempty" name:"Names"`

	// Tags of a sample. Array length limit: 20.
	Tags []*string `json:"Tags,omitnil,omitempty" name:"Tags"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of entries to be returned. Default value: 100. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribePersonSamplesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Type of samples to pull. Valid values:
	// <li>UserDefine: custom sample library</li>
	// <li>Default: default sample library</li>
	// 
	// Default value: UserDefine. Samples in the custom sample library will be pulled.
	// Note: samples from the default library can only be pulled by providing the name or both the ID and name of a sample. Only one face image will be returned.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// IDs of samples. Array length limit: 100.
	PersonIds []*string `json:"PersonIds,omitnil,omitempty" name:"PersonIds"`

	// Names of samples. Array length limit: 20.
	Names []*string `json:"Names,omitnil,omitempty" name:"Names"`

	// Tags of a sample. Array length limit: 20.
	Tags []*string `json:"Tags,omitnil,omitempty" name:"Tags"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of entries to be returned. Default value: 100. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribePersonSamplesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribePersonSamplesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Type")
	delete(f, "PersonIds")
	delete(f, "Names")
	delete(f, "Tags")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribePersonSamplesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribePersonSamplesResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Figure information.
	PersonSet []*AiSamplePerson `json:"PersonSet,omitnil,omitempty" name:"PersonSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribePersonSamplesResponse struct {
	*tchttp.BaseResponse
	Response *DescribePersonSamplesResponseParams `json:"Response"`
}

func (r *DescribePersonSamplesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribePersonSamplesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeProcedureTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name filter of task flow template. Array length limit: 100.
	Names []*string `json:"Names,omitnil,omitempty" name:"Names"`

	// Filter of task flow template types. Valid values:
	// <li>Preset: preset task flow template;</li>
	// <li>Custom: custom task flow template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeProcedureTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name filter of task flow template. Array length limit: 100.
	Names []*string `json:"Names,omitnil,omitempty" name:"Names"`

	// Filter of task flow template types. Valid values:
	// <li>Preset: preset task flow template;</li>
	// <li>Custom: custom task flow template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeProcedureTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeProcedureTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Names")
	delete(f, "Type")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeProcedureTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeProcedureTemplatesResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List of task flow template details.
	ProcedureTemplateSet []*ProcedureTemplate `json:"ProcedureTemplateSet,omitnil,omitempty" name:"ProcedureTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeProcedureTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeProcedureTemplatesResponseParams `json:"Response"`
}

func (r *DescribeProcedureTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeProcedureTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeQualityInspectTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media quality inspect template list. Length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Template type filter conditions, optional values: <li>Preset: system preset template;</li> <li>Custom: user-defined template. </li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Paging offset, default value: 0.
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Back record count, default value: 10, maximum value: 100.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeQualityInspectTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media quality inspect template list. Length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Template type filter conditions, optional values: <li>Preset: system preset template;</li> <li>Custom: user-defined template. </li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Paging offset, default value: 0.
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Back record count, default value: 10, maximum value: 100.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeQualityInspectTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeQualityInspectTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Type")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeQualityInspectTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeQualityInspectTemplatesResponseParams struct {
	// Comply with the filter conditions, the total number of records.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Media quality inspect template details list.
	QualityInspectTemplateSet []*QualityInspectTemplateItem `json:"QualityInspectTemplateSet,omitnil,omitempty" name:"QualityInspectTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeQualityInspectTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeQualityInspectTemplatesResponseParams `json:"Response"`
}

func (r *DescribeQualityInspectTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeQualityInspectTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeRebuildMediaTemplatesRequestParams struct {
	// List of rebuild media templates.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The template type. Valid values:
	// <li>`Preset`</li>
	// <li>`Custom`</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The pagination offset. Default value: 0.
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// The maximum number of records to return. Default value: 10. Maximum value: 100.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeRebuildMediaTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// List of rebuild media templates.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The template type. Valid values:
	// <li>`Preset`</li>
	// <li>`Custom`</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The pagination offset. Default value: 0.
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// The maximum number of records to return. Default value: 10. Maximum value: 100.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeRebuildMediaTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeRebuildMediaTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definitions")
	delete(f, "SubAppId")
	delete(f, "Type")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeRebuildMediaTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeRebuildMediaTemplatesResponseParams struct {
	// The total number of records that meet the conditions.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Rebuild media template details list.
	RebuildMediaTemplateSet []*RebuildMediaTemplate `json:"RebuildMediaTemplateSet,omitnil,omitempty" name:"RebuildMediaTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeRebuildMediaTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeRebuildMediaTemplatesResponseParams `json:"Response"`
}

func (r *DescribeRebuildMediaTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeRebuildMediaTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeReviewDetailsRequestParams struct {
	// Start date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). The end date must be after the start date.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DescribeReviewDetailsRequest struct {
	*tchttp.BaseRequest
	
	// Start date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End date in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). The end date must be after the start date.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DescribeReviewDetailsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeReviewDetailsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeReviewDetailsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeReviewDetailsResponseParams struct {
	// Times of initiating intelligent content recognition tasks.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Duration of intelligent recognition content.
	TotalDuration *int64 `json:"TotalDuration,omitnil,omitempty" name:"TotalDuration"`

	// Data of intelligent recognition content duration. One piece of data is collected every day.
	Data []*StatDataItem `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeReviewDetailsResponse struct {
	*tchttp.BaseResponse
	Response *DescribeReviewDetailsResponseParams `json:"Response"`
}

func (r *DescribeReviewDetailsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeReviewDetailsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeReviewTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The audit template uniquely identifies the filtering conditions, and the array length limit is: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// The template type. Valid values:
	// <li>Preset</li>
	// <li>Custom</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The pagination offset. Default value: 0.
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// The number of records to return. Default value: 10. Maximum value: 100.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeReviewTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The audit template uniquely identifies the filtering conditions, and the array length limit is: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// The template type. Valid values:
	// <li>Preset</li>
	// <li>Custom</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The pagination offset. Default value: 0.
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// The number of records to return. Default value: 10. Maximum value: 100.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeReviewTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeReviewTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Type")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeReviewTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeReviewTemplatesResponseParams struct {
	// The total number of records that meet the conditions.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// The details of the moderation templates.
	ReviewTemplateSet []*ReviewTemplate `json:"ReviewTemplateSet,omitnil,omitempty" name:"ReviewTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeReviewTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeReviewTemplatesResponseParams `json:"Response"`
}

func (r *DescribeReviewTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeReviewTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeRoundPlaysRequestParams struct {
	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) id. starting from december 25, 2023, if you want to access resources in the vod application (whether it is the default application or a newly created application), you must enter the application id in this field.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Filter criteria: playlist identifier, array length limit: 100.
	RoundPlayIds []*string `json:"RoundPlayIds,omitnil,omitempty" name:"RoundPlayIds"`

	// Filter criteria: playlist status, optional values: <li>enabled: startup status;</li> <li>disabled: stopped status.</li>.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Filter criteria: playlist creation time.
	CreateTime *TimeRange `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Filter criteria: playlist update time.
	UpdateTime *TimeRange `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// Scrolling identifier which is used for pulling in batches. if a single request cannot pull all the data entries, the API will return `scrolltoken`, and if the next request carries it, the next pull will start from the next entry.
	ScrollToken *string `json:"ScrollToken,omitnil,omitempty" name:"ScrollToken"`

	// Pagination offset, default value: 0. this field is obsolete. please use the `scrolltoken` parameter for batch queries.
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. default value: 10. maximum value: 100.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeRoundPlaysRequest struct {
	*tchttp.BaseRequest
	
	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) id. starting from december 25, 2023, if you want to access resources in the vod application (whether it is the default application or a newly created application), you must enter the application id in this field.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Filter criteria: playlist identifier, array length limit: 100.
	RoundPlayIds []*string `json:"RoundPlayIds,omitnil,omitempty" name:"RoundPlayIds"`

	// Filter criteria: playlist status, optional values: <li>enabled: startup status;</li> <li>disabled: stopped status.</li>.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Filter criteria: playlist creation time.
	CreateTime *TimeRange `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Filter criteria: playlist update time.
	UpdateTime *TimeRange `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// Scrolling identifier which is used for pulling in batches. if a single request cannot pull all the data entries, the API will return `scrolltoken`, and if the next request carries it, the next pull will start from the next entry.
	ScrollToken *string `json:"ScrollToken,omitnil,omitempty" name:"ScrollToken"`

	// Pagination offset, default value: 0. this field is obsolete. please use the `scrolltoken` parameter for batch queries.
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. default value: 10. maximum value: 100.
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeRoundPlaysRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeRoundPlaysRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "RoundPlayIds")
	delete(f, "Status")
	delete(f, "CreateTime")
	delete(f, "UpdateTime")
	delete(f, "ScrollToken")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeRoundPlaysRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeRoundPlaysResponseParams struct {
	// The total number of carousel broadcast playlists that meet the filter criteria. deprecated. for batch inquiries, please use the scrolltoken parameter.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// The details of the playlist.
	RoundPlaySet []*RoundPlayInfo `json:"RoundPlaySet,omitnil,omitempty" name:"RoundPlaySet"`

	// Scrolling identifier. if a request does not return all the data entries, this field indicates the id of the next entry. if this field is empty, there is no more data.
	ScrollToken *string `json:"ScrollToken,omitnil,omitempty" name:"ScrollToken"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeRoundPlaysResponse struct {
	*tchttp.BaseResponse
	Response *DescribeRoundPlaysResponseParams `json:"Response"`
}

func (r *DescribeRoundPlaysResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeRoundPlaysResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSampleSnapshotTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of sampled screencapturing templates. Array length limit: 100.
	Definitions []*uint64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Paged offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Template type filter. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type DescribeSampleSnapshotTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of sampled screencapturing templates. Array length limit: 100.
	Definitions []*uint64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Paged offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Template type filter. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

func (r *DescribeSampleSnapshotTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSampleSnapshotTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "Type")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeSampleSnapshotTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSampleSnapshotTemplatesResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List of sampled screencapturing template details.
	SampleSnapshotTemplateSet []*SampleSnapshotTemplate `json:"SampleSnapshotTemplateSet,omitnil,omitempty" name:"SampleSnapshotTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeSampleSnapshotTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeSampleSnapshotTemplatesResponseParams `json:"Response"`
}

func (r *DescribeSampleSnapshotTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSampleSnapshotTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSnapshotByTimeOffsetTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of time point screencapturing templates. Array length limit: 100.
	Definitions []*uint64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Paged offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Template type filter. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type DescribeSnapshotByTimeOffsetTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of time point screencapturing templates. Array length limit: 100.
	Definitions []*uint64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Paged offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Template type filter. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

func (r *DescribeSnapshotByTimeOffsetTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSnapshotByTimeOffsetTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "Type")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeSnapshotByTimeOffsetTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSnapshotByTimeOffsetTemplatesResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List of time point screencapturing template details.
	SnapshotByTimeOffsetTemplateSet []*SnapshotByTimeOffsetTemplate `json:"SnapshotByTimeOffsetTemplateSet,omitnil,omitempty" name:"SnapshotByTimeOffsetTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeSnapshotByTimeOffsetTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeSnapshotByTimeOffsetTemplatesResponseParams `json:"Response"`
}

func (r *DescribeSnapshotByTimeOffsetTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSnapshotByTimeOffsetTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeStorageDataRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DescribeStorageDataRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DescribeStorageDataRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeStorageDataRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeStorageDataRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeStorageDataResponseParams struct {
	// Total number of current media files.
	MediaCount *uint64 `json:"MediaCount,omitnil,omitempty" name:"MediaCount"`

	// Total current storage capacity in bytes.
	TotalStorage *uint64 `json:"TotalStorage,omitnil,omitempty" name:"TotalStorage"`

	// Current Standard storage capacity in bytes.
	StandardStorage *uint64 `json:"StandardStorage,omitnil,omitempty" name:"StandardStorage"`

	// Current Standard_IA storage capacity in bytes.
	InfrequentStorage *uint64 `json:"InfrequentStorage,omitnil,omitempty" name:"InfrequentStorage"`

	// The current ARCHIVE storage usage in bytes.
	ArchiveStorage *uint64 `json:"ArchiveStorage,omitnil,omitempty" name:"ArchiveStorage"`

	// The current DEEP ARCHIVE storage usage in bytes.
	DeepArchiveStorage *uint64 `json:"DeepArchiveStorage,omitnil,omitempty" name:"DeepArchiveStorage"`

	// Storage usage by billing region.
	StorageStat []*StorageStatData `json:"StorageStat,omitnil,omitempty" name:"StorageStat"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeStorageDataResponse struct {
	*tchttp.BaseResponse
	Response *DescribeStorageDataResponseParams `json:"Response"`
}

func (r *DescribeStorageDataResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeStorageDataResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeStorageDetailsRequestParams struct {
	// Start time in ISO 8601 format. For more information, please see [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End time in ISO 8601 format, which should be larger than the start time. For more information, please see [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Time granularity. Valid values:
	// <li>Minute: 5-minute granularity</li>
	// <li>Day: 1-day granularity</li>
	// The value is set according to query period length by default. 5-minute granularity is set for periods no longer than 1 day, and 1-day granularity is set for periods longer than 1 day.
	Interval *string `json:"Interval,omitnil,omitempty" name:"Interval"`

	// Queryed storage type, valid values:
	// <li>TotalStorage: total storage amount, the sum of standard, low-frequency, archive and deep archive storage amounts, excluding early deletion amount. </li>
	// <li>StandardStorage: Standard storage. </li>
	// <li>InfrequentStorage: low-frequency storage. </li>
	// <li>ArchiveStorage: archive storage. </li>
	// <li>DeepArchiveStorage: deep archive storage. </li>
	// <li>DeletedInfrequentStorage: The amount of early deletion of low-frequency storage. </li>
	// <li>DeletedArchiveStorage: The amount of archives deleted in advance. </li>
	// <li>DeletedDeepArchiveStorage: The amount of deep archive deletion in advance. 
	// <li>ArchiveStandardRetrieval: Archive standard retrieval amount. </li>
	// <li>ArchiveExpeditedRetrieval: archive quick retrieval amount. </li>
	// <li>ArchiveBulkRetrieval: Archive batch retrieval amount. </li>
	// <li>DeepArchiveStandardRetrieval: Deep archive standard retrieval amount. </li>
	// <li>DeepArchiveBulkRetrieval: Deep archive batch retrieval amount. </li>
	// <li>InfrequentRetrieval: Low-frequency storage retrieval amount. </li>
	// The default value is TotalStorage.
	StorageType *string `json:"StorageType,omitnil,omitempty" name:"StorageType"`

	// Storage region to query. Valid values:
	// <li>Chinese Mainland</li>
	// <li>Outside Chinese Mainland</li>
	// Default value: Chinese Mainland
	Area *string `json:"Area,omitnil,omitempty" name:"Area"`
}

type DescribeStorageDetailsRequest struct {
	*tchttp.BaseRequest
	
	// Start time in ISO 8601 format. For more information, please see [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End time in ISO 8601 format, which should be larger than the start time. For more information, please see [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Time granularity. Valid values:
	// <li>Minute: 5-minute granularity</li>
	// <li>Day: 1-day granularity</li>
	// The value is set according to query period length by default. 5-minute granularity is set for periods no longer than 1 day, and 1-day granularity is set for periods longer than 1 day.
	Interval *string `json:"Interval,omitnil,omitempty" name:"Interval"`

	// Queryed storage type, valid values:
	// <li>TotalStorage: total storage amount, the sum of standard, low-frequency, archive and deep archive storage amounts, excluding early deletion amount. </li>
	// <li>StandardStorage: Standard storage. </li>
	// <li>InfrequentStorage: low-frequency storage. </li>
	// <li>ArchiveStorage: archive storage. </li>
	// <li>DeepArchiveStorage: deep archive storage. </li>
	// <li>DeletedInfrequentStorage: The amount of early deletion of low-frequency storage. </li>
	// <li>DeletedArchiveStorage: The amount of archives deleted in advance. </li>
	// <li>DeletedDeepArchiveStorage: The amount of deep archive deletion in advance. 
	// <li>ArchiveStandardRetrieval: Archive standard retrieval amount. </li>
	// <li>ArchiveExpeditedRetrieval: archive quick retrieval amount. </li>
	// <li>ArchiveBulkRetrieval: Archive batch retrieval amount. </li>
	// <li>DeepArchiveStandardRetrieval: Deep archive standard retrieval amount. </li>
	// <li>DeepArchiveBulkRetrieval: Deep archive batch retrieval amount. </li>
	// <li>InfrequentRetrieval: Low-frequency storage retrieval amount. </li>
	// The default value is TotalStorage.
	StorageType *string `json:"StorageType,omitnil,omitempty" name:"StorageType"`

	// Storage region to query. Valid values:
	// <li>Chinese Mainland</li>
	// <li>Outside Chinese Mainland</li>
	// Default value: Chinese Mainland
	Area *string `json:"Area,omitnil,omitempty" name:"Area"`
}

func (r *DescribeStorageDetailsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeStorageDetailsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "SubAppId")
	delete(f, "Interval")
	delete(f, "StorageType")
	delete(f, "Area")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeStorageDetailsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeStorageDetailsResponseParams struct {
	// Storage statistics with one piece of data for every 5 minutes or 1 day.
	Data []*StatDataItem `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeStorageDetailsResponse struct {
	*tchttp.BaseResponse
	Response *DescribeStorageDetailsResponseParams `json:"Response"`
}

func (r *DescribeStorageDetailsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeStorageDetailsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeStorageRegionsRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DescribeStorageRegionsRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DescribeStorageRegionsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeStorageRegionsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeStorageRegionsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeStorageRegionsResponseParams struct {
	// The information of the storage regions.
	StorageRegionInfos []*StorageRegionInfo `json:"StorageRegionInfos,omitnil,omitempty" name:"StorageRegionInfos"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeStorageRegionsResponse struct {
	*tchttp.BaseResponse
	Response *DescribeStorageRegionsResponseParams `json:"Response"`
}

func (r *DescribeStorageRegionsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeStorageRegionsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSubAppIdsRequestParams struct {
	// Subapplication name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Tag information. You can query the list of subapplications with specified tags.
	Tags []*ResourceTag `json:"Tags,omitnil,omitempty" name:"Tags"`

	// Page number offset from the beginning of paginated queries. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Maximum return results of pulling paginated queries. Default: 200; maximum: 200.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeSubAppIdsRequest struct {
	*tchttp.BaseRequest
	
	// Subapplication name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Tag information. You can query the list of subapplications with specified tags.
	Tags []*ResourceTag `json:"Tags,omitnil,omitempty" name:"Tags"`

	// Page number offset from the beginning of paginated queries. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Maximum return results of pulling paginated queries. Default: 200; maximum: 200.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeSubAppIdsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSubAppIdsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "Tags")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeSubAppIdsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSubAppIdsResponseParams struct {
	// Subapplication information set.
	SubAppIdInfoSet []*SubAppIdInfo `json:"SubAppIdInfoSet,omitnil,omitempty" name:"SubAppIdInfoSet"`

	// Total number of subapplications.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeSubAppIdsResponse struct {
	*tchttp.BaseResponse
	Response *DescribeSubAppIdsResponseParams `json:"Response"`
}

func (r *DescribeSubAppIdsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSubAppIdsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSuperPlayerConfigsRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Player configuration name filter. Array length limit: 100.
	Names []*string `json:"Names,omitnil,omitempty" name:"Names"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of entries to be returned. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Player configuration type filter. Valid values:
	// <li>Preset: preset configuration;</li>
	// <li>Custom: custom configuration.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type DescribeSuperPlayerConfigsRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Player configuration name filter. Array length limit: 100.
	Names []*string `json:"Names,omitnil,omitempty" name:"Names"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of entries to be returned. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Player configuration type filter. Valid values:
	// <li>Preset: preset configuration;</li>
	// <li>Custom: custom configuration.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

func (r *DescribeSuperPlayerConfigsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSuperPlayerConfigsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Names")
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "Type")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeSuperPlayerConfigsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSuperPlayerConfigsResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Player configuration array.
	PlayerConfigSet []*PlayerConfig `json:"PlayerConfigSet,omitnil,omitempty" name:"PlayerConfigSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeSuperPlayerConfigsResponse struct {
	*tchttp.BaseResponse
	Response *DescribeSuperPlayerConfigsResponseParams `json:"Response"`
}

func (r *DescribeSuperPlayerConfigsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSuperPlayerConfigsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTaskDetailRequestParams struct {
	// Video processing task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DescribeTaskDetailRequest struct {
	*tchttp.BaseRequest
	
	// Video processing task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DescribeTaskDetailRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTaskDetailRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "TaskId")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeTaskDetailRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTaskDetailResponseParams struct {
	// The task type. Valid values:
	// <li>`Procedure`: Video processing</li>
	// <li>`EditMedia`: Video editing</li>
	// <li>`SplitMedia`: Video splitting</li>
	// <li>`ComposeMedia`: Media file production</li>
	// <li>`WechatPublish`: Weixin publishing</li>
	// <li>`WechatMiniProgramPublish`: Publishing videos on Weixin Mini Program</li>
	// <li>`PullUpload`: Pulling media files for upload</li>
	// <li>`FastClipMedia`: Quick clipping</li>
	// <li>`RemoveWatermarkTask`: Watermark removal</li>
	// <li>`DescribeFileAttributesTask`: Getting file attributes</li>
	// <li> `ReviewAudioVideo`: Moderation</li>
	// <li>`ExtractTraceWatermark`: Digital watermark extraction</li>
	// <li>`QualityEnhance`: Enhance audio/video</li>
	// <li>`ComplexAdaptiveDynamicStreaming`: Complex adaptive bitrate streaming processing task</li>
	TaskType *string `json:"TaskType,omitnil,omitempty" name:"TaskType"`

	// Task status. Valid values:
	// <li>WAITING: waiting;</li>
	// <li>PROCESSING: processing;</li>
	// <li>FINISH: completed.</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Creation time of task in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Start time of task execution in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// End time of task execution in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	ProcedureTask *ProcedureTask `json:"ProcedureTask,omitnil,omitempty" name:"ProcedureTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	EditMediaTask *EditMediaTask `json:"EditMediaTask,omitnil,omitempty" name:"EditMediaTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	WechatPublishTask *WechatPublishTask `json:"WechatPublishTask,omitnil,omitempty" name:"WechatPublishTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	ComposeMediaTask *ComposeMediaTask `json:"ComposeMediaTask,omitnil,omitempty" name:"ComposeMediaTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	SplitMediaTask *SplitMediaTask `json:"SplitMediaTask,omitnil,omitempty" name:"SplitMediaTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	WechatMiniProgramPublishTask *WechatMiniProgramPublishTask `json:"WechatMiniProgramPublishTask,omitnil,omitempty" name:"WechatMiniProgramPublishTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	PullUploadTask *PullUploadTask `json:"PullUploadTask,omitnil,omitempty" name:"PullUploadTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	TranscodeTask *TranscodeTask2017 `json:"TranscodeTask,omitnil,omitempty" name:"TranscodeTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	ConcatTask *ConcatTask2017 `json:"ConcatTask,omitnil,omitempty" name:"ConcatTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	ClipTask *ClipTask2017 `json:"ClipTask,omitnil,omitempty" name:"ClipTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	CreateImageSpriteTask *CreateImageSpriteTask2017 `json:"CreateImageSpriteTask,omitnil,omitempty" name:"CreateImageSpriteTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	SnapshotByTimeOffsetTask *SnapshotByTimeOffsetTask2017 `json:"SnapshotByTimeOffsetTask,omitnil,omitempty" name:"SnapshotByTimeOffsetTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	RemoveWatermarkTask *RemoveWatermarkTask `json:"RemoveWatermarkTask,omitnil,omitempty" name:"RemoveWatermarkTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	RebuildMediaTask *RebuildMediaTask `json:"RebuildMediaTask,omitnil,omitempty" name:"RebuildMediaTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	ExtractTraceWatermarkTask *ExtractTraceWatermarkTask `json:"ExtractTraceWatermarkTask,omitnil,omitempty" name:"ExtractTraceWatermarkTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	ExtractCopyRightWatermarkTask *ExtractCopyRightWatermarkTask `json:"ExtractCopyRightWatermarkTask,omitnil,omitempty" name:"ExtractCopyRightWatermarkTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	ReviewAudioVideoTask *ReviewAudioVideoTask `json:"ReviewAudioVideoTask,omitnil,omitempty" name:"ReviewAudioVideoTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	ReduceMediaBitrateTask *ReduceMediaBitrateTask `json:"ReduceMediaBitrateTask,omitnil,omitempty" name:"ReduceMediaBitrateTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	DescribeFileAttributesTask *DescribeFileAttributesTask `json:"DescribeFileAttributesTask,omitnil,omitempty" name:"DescribeFileAttributesTask"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	QualityInspectTask *QualityInspectTask `json:"QualityInspectTask,omitnil,omitempty" name:"QualityInspectTask"`

	// Media Quality Enhance task information. This field has a value only when TaskType is QualityEnhance.
	// Note: This field may return null, indicating that no valid value can be obtained.
	QualityEnhanceTask *QualityEnhanceTask `json:"QualityEnhanceTask,omitnil,omitempty" name:"QualityEnhanceTask"`

	// Complex adaptive bitrate streaming processing task information. This field has a value only when TaskType is ComplexAdaptiveDynamicStreaming. 
	// Note: This field may return null, indicating that no valid value can be obtained.
	ComplexAdaptiveDynamicStreamingTask *ComplexAdaptiveDynamicStreamingTask `json:"ComplexAdaptiveDynamicStreamingTask,omitnil,omitempty" name:"ComplexAdaptiveDynamicStreamingTask"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeTaskDetailResponse struct {
	*tchttp.BaseResponse
	Response *DescribeTaskDetailResponseParams `json:"Response"`
}

func (r *DescribeTaskDetailResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTaskDetailResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTasksRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Filter: Task status. Valid values: WAITING (waiting), PROCESSING (processing), FINISH (completed).
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Filter: file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Filter: task creation time.
	CreateTime *TimeRange `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Filter: task end time.
	FinishTime *TimeRange `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`

	// Sort field. Valid values:
	// <li>`CreateTime`: task creation time</li>
	// <li>`FinishTime`: task end time</li>
	Sort *SortBy `json:"Sort,omitnil,omitempty" name:"Sort"`

	// Number of entries to be returned. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Scrolling identifier which is used for pulling in batches. If a single request cannot pull all the data entries, the API will return `ScrollToken`, and if the next request carries it, the next pull will start from the next entry.
	ScrollToken *string `json:"ScrollToken,omitnil,omitempty" name:"ScrollToken"`
}

type DescribeTasksRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Filter: Task status. Valid values: WAITING (waiting), PROCESSING (processing), FINISH (completed).
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Filter: file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Filter: task creation time.
	CreateTime *TimeRange `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Filter: task end time.
	FinishTime *TimeRange `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`

	// Sort field. Valid values:
	// <li>`CreateTime`: task creation time</li>
	// <li>`FinishTime`: task end time</li>
	Sort *SortBy `json:"Sort,omitnil,omitempty" name:"Sort"`

	// Number of entries to be returned. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Scrolling identifier which is used for pulling in batches. If a single request cannot pull all the data entries, the API will return `ScrollToken`, and if the next request carries it, the next pull will start from the next entry.
	ScrollToken *string `json:"ScrollToken,omitnil,omitempty" name:"ScrollToken"`
}

func (r *DescribeTasksRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTasksRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Status")
	delete(f, "FileId")
	delete(f, "CreateTime")
	delete(f, "FinishTime")
	delete(f, "Sort")
	delete(f, "Limit")
	delete(f, "ScrollToken")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeTasksRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTasksResponseParams struct {
	// Task overview list.
	TaskSet []*TaskSimpleInfo `json:"TaskSet,omitnil,omitempty" name:"TaskSet"`

	// Scrolling identifier. If a request does not return all the data entries, this field indicates the ID of the next entry. If this field is empty, there is no more data.
	ScrollToken *string `json:"ScrollToken,omitnil,omitempty" name:"ScrollToken"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeTasksResponse struct {
	*tchttp.BaseResponse
	Response *DescribeTasksResponseParams `json:"Response"`
}

func (r *DescribeTasksResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTasksResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTranscodeTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of transcoding templates. Array length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Template type filter. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Container filter. Valid values:
	// <li>Video: video container that can contain both video stream and audio stream;</li>
	// <li>PureAudio: audio container that can contain only audio stream.</li>
	ContainerType *string `json:"ContainerType,omitnil,omitempty" name:"ContainerType"`

	// TESHD filter, which is used to filter common transcoding or ultra-fast HD transcoding templates. Valid values:
	// <li>Common: Common transcoding template;</li>
	// <li>TEHD: TESHD template.</li>
	TEHDType *string `json:"TEHDType,omitnil,omitempty" name:"TEHDType"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeTranscodeTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Unique ID filter of transcoding templates. Array length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Template type filter. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Container filter. Valid values:
	// <li>Video: video container that can contain both video stream and audio stream;</li>
	// <li>PureAudio: audio container that can contain only audio stream.</li>
	ContainerType *string `json:"ContainerType,omitnil,omitempty" name:"ContainerType"`

	// TESHD filter, which is used to filter common transcoding or ultra-fast HD transcoding templates. Valid values:
	// <li>Common: Common transcoding template;</li>
	// <li>TEHD: TESHD template.</li>
	TEHDType *string `json:"TEHDType,omitnil,omitempty" name:"TEHDType"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of returned entries. Default value: 10. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeTranscodeTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTranscodeTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Definitions")
	delete(f, "Type")
	delete(f, "ContainerType")
	delete(f, "TEHDType")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeTranscodeTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTranscodeTemplatesResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List of transcoding template details.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TranscodeTemplateSet []*TranscodeTemplate `json:"TranscodeTemplateSet,omitnil,omitempty" name:"TranscodeTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeTranscodeTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeTranscodeTemplatesResponseParams `json:"Response"`
}

func (r *DescribeTranscodeTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTranscodeTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeVodDomainsRequestParams struct {
	// Domain name list. When this field is left blank, all domain name information will be listed by default. The limitations of this field are as follows:
	// <li>The maximum number of domain names is 20. </li>
	Domains []*string `json:"Domains,omitnil,omitempty" name:"Domains"`

	// Maximum results to return for pulling paginated queries. Default value: 20
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Page number offset from the beginning of paginated queries. Default value: 0
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type DescribeVodDomainsRequest struct {
	*tchttp.BaseRequest
	
	// Domain name list. When this field is left blank, all domain name information will be listed by default. The limitations of this field are as follows:
	// <li>The maximum number of domain names is 20. </li>
	Domains []*string `json:"Domains,omitnil,omitempty" name:"Domains"`

	// Maximum results to return for pulling paginated queries. Default value: 20
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Page number offset from the beginning of paginated queries. Default value: 0
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *DescribeVodDomainsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeVodDomainsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domains")
	delete(f, "Limit")
	delete(f, "Offset")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeVodDomainsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeVodDomainsResponseParams struct {
	// Total number of domain names
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Domain name information list
	DomainSet []*DomainDetailInfo `json:"DomainSet,omitnil,omitempty" name:"DomainSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeVodDomainsResponse struct {
	*tchttp.BaseResponse
	Response *DescribeVodDomainsResponseParams `json:"Response"`
}

func (r *DescribeVodDomainsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeVodDomainsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeWatermarkTemplatesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Watermark type filter. Valid values:
	// <li>image: image watermark;</li>
	// <li>text: text watermark.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Unique ID filter of watermarking templates. Array length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Number of returned entries
	// <li>Default value: 10;</li>
	// <li>Maximum value: 100.</li>
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeWatermarkTemplatesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Watermark type filter. Valid values:
	// <li>image: image watermark;</li>
	// <li>text: text watermark.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Unique ID filter of watermarking templates. Array length limit: 100.
	Definitions []*int64 `json:"Definitions,omitnil,omitempty" name:"Definitions"`

	// Number of returned entries
	// <li>Default value: 10;</li>
	// <li>Maximum value: 100.</li>
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeWatermarkTemplatesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeWatermarkTemplatesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Type")
	delete(f, "Offset")
	delete(f, "Definitions")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeWatermarkTemplatesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeWatermarkTemplatesResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List of watermarking template details.
	// Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkTemplateSet []*WatermarkTemplate `json:"WatermarkTemplateSet,omitnil,omitempty" name:"WatermarkTemplateSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeWatermarkTemplatesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeWatermarkTemplatesResponseParams `json:"Response"`
}

func (r *DescribeWatermarkTemplatesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeWatermarkTemplatesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeWordSamplesRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// <b>Keyword usage. Valid values:</b>
	// 1. Recognition.Ocr: OCR-based content recognition
	// 2. Recognition.Asr: ASR-based content recognition
	// 3. Review.Ocr: OCR-based inappropriate information recognition
	// 4. Review.Asr: ASR-based inappropriate information recognition
	// <b>Valid values can also be:</b>
	// 5. Recognition: ASR- and OCR-based content recognition; equivalent to 1+2
	// 6. Review: ASR- and OCR-based inappropriate information recognition; equivalent to 3+4
	// You can select multiple elements, which are connected by OR logic. If a use case contains any element in this parameter, the keyword sample will be used.
	Usages []*string `json:"Usages,omitnil,omitempty" name:"Usages"`

	// Keyword filter. Array length limit: 100 words.
	Keywords []*string `json:"Keywords,omitnil,omitempty" name:"Keywords"`

	// Tag filter. Array length limit: 20 words.
	Tags []*string `json:"Tags,omitnil,omitempty" name:"Tags"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of entries to be returned. Default value: 100. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

type DescribeWordSamplesRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// <b>Keyword usage. Valid values:</b>
	// 1. Recognition.Ocr: OCR-based content recognition
	// 2. Recognition.Asr: ASR-based content recognition
	// 3. Review.Ocr: OCR-based inappropriate information recognition
	// 4. Review.Asr: ASR-based inappropriate information recognition
	// <b>Valid values can also be:</b>
	// 5. Recognition: ASR- and OCR-based content recognition; equivalent to 1+2
	// 6. Review: ASR- and OCR-based inappropriate information recognition; equivalent to 3+4
	// You can select multiple elements, which are connected by OR logic. If a use case contains any element in this parameter, the keyword sample will be used.
	Usages []*string `json:"Usages,omitnil,omitempty" name:"Usages"`

	// Keyword filter. Array length limit: 100 words.
	Keywords []*string `json:"Keywords,omitnil,omitempty" name:"Keywords"`

	// Tag filter. Array length limit: 20 words.
	Tags []*string `json:"Tags,omitnil,omitempty" name:"Tags"`

	// Pagination offset. Default value: 0.
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of entries to be returned. Default value: 100. Maximum value: 100.
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`
}

func (r *DescribeWordSamplesRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeWordSamplesRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Usages")
	delete(f, "Keywords")
	delete(f, "Tags")
	delete(f, "Offset")
	delete(f, "Limit")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeWordSamplesRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeWordSamplesResponseParams struct {
	// Number of eligible entries.
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Keyword information.
	WordSet []*AiSampleWord `json:"WordSet,omitnil,omitempty" name:"WordSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeWordSamplesResponse struct {
	*tchttp.BaseResponse
	Response *DescribeWordSamplesResponseParams `json:"Response"`
}

func (r *DescribeWordSamplesResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeWordSamplesResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DomainDetailInfo struct {
	// Domain name
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Acceleration region information
	// Note: this field may return `null`, indicating that no valid value is obtained.
	AccelerateAreaInfos []*AccelerateAreaInfo `json:"AccelerateAreaInfos,omitnil,omitempty" name:"AccelerateAreaInfos"`

	// Deployment status. Valid values:
	// <li>Online</li>
	// <li>Deploying</li>
	// <li>Locked: you cannot change the deployment status of locked domain names</li>
	DeployStatus *string `json:"DeployStatus,omitnil,omitempty" name:"DeployStatus"`

	// HTTPS configuration information
	// Note: this field may return `null`, indicating that no valid value is obtained.
	HTTPSConfig *DomainHTTPSConfig `json:"HTTPSConfig,omitnil,omitempty" name:"HTTPSConfig"`

	// [Key hotlink protection](https://intl.cloud.tencent.com/document/product/266/33986) configuration
	// Note: this field may return `null`, indicating that no valid value is obtained.
	UrlSignatureAuthPolicy *UrlSignatureAuthPolicy `json:"UrlSignatureAuthPolicy,omitnil,omitempty" name:"UrlSignatureAuthPolicy"`

	// [Referer hotlink protection](https://intl.cloud.tencent.com/document/product/266/33985) configuration
	// Note: this field may return `null`, indicating that no valid value is obtained.
	RefererAuthPolicy *RefererAuthPolicy `json:"RefererAuthPolicy,omitnil,omitempty" name:"RefererAuthPolicy"`

	// The time when the domain name was added in the VOD system
	// <li>The time is in [ISO 8601 date format](https://intl.cloud.tencent.com/document/product/266/11732).</li>
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// The QUIC configuration for the domain.
	// Note: This field may return null, indicating that no valid values can be obtained.
	QUICConfig *DomainQUICConfig `json:"QUICConfig,omitnil,omitempty" name:"QUICConfig"`


	IPFilterPolicy *IPFilterPolicy `json:"IPFilterPolicy,omitnil,omitempty" name:"IPFilterPolicy"`

	// Domain type. Valid values:
	// <li>`VOD`: Domain name distributed using the VOD product;</li> <li>`EdgeOne`: Domain name distributed using the EdgeOne product.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type DomainHTTPSConfig struct {
	// Time when the certificate expires
	// <li>The time is in [ISO 8601 date format](https://intl.cloud.tencent.com/document/product/266/11732).</li>
	CertExpireTime *string `json:"CertExpireTime,omitnil,omitempty" name:"CertExpireTime"`

	// Certificate ID in Tencent Cloud SSL product.
	CloudCertId *string `json:"CloudCertId,omitnil,omitempty" name:"CloudCertId"`
}

type DomainQUICConfig struct {
	// The QUIC status. Valid values:
	// <li>`Enabled`</li>
	// <li>`Disabled`</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`
}

type DrmStreamingsInfo struct {
	// ID of the adaptive bitrate streaming template whose protection type is SimpleAES.
	SimpleAesDefinition *uint64 `json:"SimpleAesDefinition,omitnil,omitempty" name:"SimpleAesDefinition"`

	// The ID of the adaptive bitrate streaming template that encrypts the streams by Widewine.
	WidevineDefinition *uint64 `json:"WidevineDefinition,omitnil,omitempty" name:"WidevineDefinition"`

	// The ID of the adaptive bitrate streaming template that encrypts the streams by FairPlay.
	FairPlayDefinition *uint64 `json:"FairPlayDefinition,omitnil,omitempty" name:"FairPlayDefinition"`
}

type DrmStreamingsInfoForUpdate struct {
	// ID of the adaptive bitrate streaming template whose protection type is SimpleAES.
	SimpleAesDefinition *uint64 `json:"SimpleAesDefinition,omitnil,omitempty" name:"SimpleAesDefinition"`

	// The ID of the adaptive bitrate streaming template that encrypts the streams by Widewine.
	WidevineDefinition *uint64 `json:"WidevineDefinition,omitnil,omitempty" name:"WidevineDefinition"`

	// The ID of the adaptive bitrate streaming template that encrypts the streams by FairPlay.
	FairPlayDefinition *uint64 `json:"FairPlayDefinition,omitnil,omitempty" name:"FairPlayDefinition"`
}

type DynamicRangeInfo struct {
	// The dynamic range information. Valid values:
	// <li>`SDR`: Standard Dynamic Range</li>
	// <li>`HDR`: High Dynamic Range</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The HDR type. This parameter is valid only if `Type` is `HDR`. Valid values:
	// <li>`hdr10`</li>
	// <li>`hlg`</li>
	HDRType *string `json:"HDRType,omitnil,omitempty" name:"HDRType"`
}

type EditMediaFileInfo struct {
	// Video ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Offset time of the start of the video clip, unit: seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// Offset time at the end of the video clip, unit: seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`
}

type EditMediaOutputConfig struct {
	// Output file name, up to 64 characters. By default, the generated file name is specified by the system.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// Output file format, optional values: mp4, hls. The default is mp4.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Classification ID is used to classify media. You can create a classification through the Create Classification interface to obtain the classification ID. 
	// <li>Default value: 0, indicating other categories. </li>
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The expiration time of the output file. The file will be deleted after this time. The default is permanent and not expired. The format is expressed in accordance with the ISO 8601 standard. For details, see [ISO Date Format Description](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// Output video information.
	VideoStream *EditMediaVideoStream `json:"VideoStream,omitnil,omitempty" name:"VideoStream"`

	// TSC Transcoding Config.
	TEHDConfig *EditMediaTEHDConfig `json:"TEHDConfig,omitnil,omitempty" name:"TEHDConfig"`
}

// Predefined struct for user
type EditMediaRequestParams struct {
	// Input the type of video. The possible values u200bu200bare File and Stream.
	InputType *string `json:"InputType,omitnil,omitempty" name:"InputType"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Input video file information, required when InputType is File.
	FileInfos []*EditMediaFileInfo `json:"FileInfos,omitnil,omitempty" name:"FileInfos"`

	// nput stream information, required when InputType is Stream.
	StreamInfos []*EditMediaStreamInfo `json:"StreamInfos,omitnil,omitempty" name:"StreamInfos"`

	// EditMedia template ID. The values u200bu200bare 10 and 20. If left blank, the 10 template is used. 
	// <li>10: When splicing, the input with the highest resolution is used as the benchmark;</li>
	// <li>20: When splicing, the input with the highest code rate is used as the benchmark. </li>
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Task flow template name, if you want Fill in when executing the task flow on the generated new video.
	ProcedureName *string `json:"ProcedureName,omitnil,omitempty" name:"ProcedureName"`

	// The file configuration generated after editing.
	OutputConfig *EditMediaOutputConfig `json:"OutputConfig,omitnil,omitempty" name:"OutputConfig"`

	// Identifies the source context, which is used to transparently transmit user request information. This field value will be returned in the EditMediaComplete callback and task flow status change callback, with a maximum length of 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The priority of the task. The larger the value, the higher the priority. The value range is -10 to 10. If left blank, it means 0.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// The identification code used for task deduplication. If there is a request with the same identification code within three days, this request will return an error. The maximum length is 50 characters, without or with an empty string to indicate no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Reserved fields, used for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type EditMediaRequest struct {
	*tchttp.BaseRequest
	
	// Input the type of video. The possible values u200bu200bare File and Stream.
	InputType *string `json:"InputType,omitnil,omitempty" name:"InputType"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Input video file information, required when InputType is File.
	FileInfos []*EditMediaFileInfo `json:"FileInfos,omitnil,omitempty" name:"FileInfos"`

	// nput stream information, required when InputType is Stream.
	StreamInfos []*EditMediaStreamInfo `json:"StreamInfos,omitnil,omitempty" name:"StreamInfos"`

	// EditMedia template ID. The values u200bu200bare 10 and 20. If left blank, the 10 template is used. 
	// <li>10: When splicing, the input with the highest resolution is used as the benchmark;</li>
	// <li>20: When splicing, the input with the highest code rate is used as the benchmark. </li>
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Task flow template name, if you want Fill in when executing the task flow on the generated new video.
	ProcedureName *string `json:"ProcedureName,omitnil,omitempty" name:"ProcedureName"`

	// The file configuration generated after editing.
	OutputConfig *EditMediaOutputConfig `json:"OutputConfig,omitnil,omitempty" name:"OutputConfig"`

	// Identifies the source context, which is used to transparently transmit user request information. This field value will be returned in the EditMediaComplete callback and task flow status change callback, with a maximum length of 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The priority of the task. The larger the value, the higher the priority. The value range is -10 to 10. If left blank, it means 0.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// The identification code used for task deduplication. If there is a request with the same identification code within three days, this request will return an error. The maximum length is 50 characters, without or with an empty string to indicate no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Reserved fields, used for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *EditMediaRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *EditMediaRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "InputType")
	delete(f, "SubAppId")
	delete(f, "FileInfos")
	delete(f, "StreamInfos")
	delete(f, "Definition")
	delete(f, "ProcedureName")
	delete(f, "OutputConfig")
	delete(f, "SessionContext")
	delete(f, "TasksPriority")
	delete(f, "SessionId")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "EditMediaRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type EditMediaResponseParams struct {
	// The task ID of the video editing. You can use this ID to query the status of the editing task (task type is EditMedia).
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type EditMediaResponse struct {
	*tchttp.BaseResponse
	Response *EditMediaResponseParams `json:"Response"`
}

func (r *EditMediaResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *EditMediaResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type EditMediaStreamInfo struct {
	// ID of recorded stream
	StreamId *string `json:"StreamId,omitnil,omitempty" name:"StreamId"`

	// Start time of stream clipping in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	// Note: this field may return null, indicating that no valid values can be obtained.
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End time of stream clipping in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	// Note: this field may return null, indicating that no valid values can be obtained.
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`
}

type EditMediaTEHDConfig struct {
	// TSC Transcoding type, optional values: <li>TEHD-100 means TSC Transcoding-definition-100;</li> <li>OFF means turning off TSC Transcoding-definition. </li>Leave it blank to indicate OFF.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type EditMediaTask struct {
	// Task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Task flow status. Valid values:
	// <li>PROCESSING: processing;</li>
	// <li>FINISH: completed.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. 0: success; other values: failure.
	// <li>40000: invalid input parameter. Please check it;</li>
	// <li>60000: invalid source file (e.g., video data is corrupted). Please check whether the source file is normal;</li>
	// <li>70000: internal service error. Please try again.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Progress of a video editing task. Value range: [0, 100]
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// Input of video editing task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Input *EditMediaTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of video editing task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *EditMediaTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The metadata of the output video.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`

	// The task ID for the task type `Procedure`. If a task flow (`ProcedureName`) is specified by [EditMedia](https://intl.cloud.tencent.com/document/api/266/34783?from_cn_redirect=1), and the task flow includes one or more of `MediaProcessTask`, `AiAnalysisTask`, and `AiRecognitionTask`, the task specified by this parameter will be executed.
	ProcedureTaskId *string `json:"ProcedureTaskId,omitnil,omitempty" name:"ProcedureTaskId"`

	// The task ID for the task type `ReviewAudioVideo`. If a task flow (`ProcedureName`) is specified by [EditMedia](https://intl.cloud.tencent.com/document/api/266/34783?from_cn_redirect=1), and the task flow includes `ReviewAudioVideoTask`, the task specified by this parameter will be executed.
	ReviewAudioVideoTaskId *string `json:"ReviewAudioVideoTaskId,omitnil,omitempty" name:"ReviewAudioVideoTaskId"`

	// The ID used for deduplication. If there was a request with the same ID in the last seven days, the current request will return an error. The ID can contain up to 50 characters. If this parameter is left empty or a blank string is entered, no deduplication will be performed.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`
}

type EditMediaTaskInput struct {
	// Input video source type. Valid values: File, Stream.
	InputType *string `json:"InputType,omitnil,omitempty" name:"InputType"`

	// Information of input video file. This field has a value only when `InputType` is `File`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileInfoSet []*EditMediaFileInfo `json:"FileInfoSet,omitnil,omitempty" name:"FileInfoSet"`

	// Input stream information. This field has a value only when `InputType` is `Stream`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	StreamInfoSet []*EditMediaStreamInfo `json:"StreamInfoSet,omitnil,omitempty" name:"StreamInfoSet"`
}

type EditMediaTaskOutput struct {
	// File type, such as mp4 and flv.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileType *string `json:"FileType,omitnil,omitempty" name:"FileType"`

	// Media file playback address.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// Media file ID.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Output filename of up to 64 characters, which is generated by the system by default.
	// Note: this field may return null, indicating that no valid values can be obtained.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// Category ID, which is used to categorize the media for management. A category can be created and its ID can be obtained by using the [category creating](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API.
	// <li>Default value: 0, which means "Other".</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// Expiration time of output media file in ISO 8601 format, after which the file will be deleted. Files will never expire by default. For more information, please see [Notes on ISO Date Format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	// Note: this field may return null, indicating that no valid values can be obtained.
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`
}

type EditMediaVideoStream struct {
	// The encoding format of the video stream, optional values:
	// <li>libx264: H.264 encoding;</li>
	// <li>libx265: H.265 encoding;</li>
	// <li>av1: AOMedia Video 1 encoding;</li>
	// <li>H.266: H.266 encoding. </li>
	Codec *string `json:"Codec,omitnil,omitempty" name:"Codec"`

	// The bit rate of the video stream, value range: 0 and [128, 35000], unit: kbps. 
	// When the value is 0 or left blank, it means automatically selecting the best video bit rate.
	Bitrate *uint64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// Resolution adaptive, optional values:
	// <li>open: open, at this time, Width represents the long side of the video, and Height represents the short side of the video;</li>
	// <li>close: closed, at this time , Width represents the width of the video, and Height represents the height of the video. </li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Resolution adaptive, optional values:
	// <li>open: open, at this time, Width represents the long side of the video, and Height represents the short side of the video;</li>
	// <li>close: closed, at this time , Width represents the width of the video, and Height represents the height of the video. </li>
	// Default value: open.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// The maximum value of the video stream height (or short side), value range: 0 and [128, 4096], unit: px. 
	// <li>When Width and Height are both 0, the resolution is based on the base resolution;</li>
	// <li>When Width is 0 and Height is non-0, Width is scaled according to the base resolution;</li> li>
	// <li>When Width is non-0 and Height is 0, the Height is scaled according to the base resolution; </li>
	// <li>When both Width and Height are non-0, the resolution is specified by the user. </li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Video frame rate, value range: [0, 100], unit: Hz. 
	// When the value is 0, the frame rate will be automatically set for the video. 
	// The default value is 0.
	Fps *int64 `json:"Fps,omitnil,omitempty" name:"Fps"`
}

type EmptyTrackItem struct {
	// Duration in seconds.
	Duration *float64 `json:"Duration,omitnil,omitempty" name:"Duration"`
}

// Predefined struct for user
type EnhanceMediaByTemplateRequestParams struct {
	// File ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Enhance Media Template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Starting offset time, unit: seconds, leaving it blank means intercepting from the beginning of the video.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End offset time, unit: seconds, leaving it blank means intercepting to the end of the video.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// File configuration after Enhance.
	OutputConfig *RebuildMediaOutputConfig `json:"OutputConfig,omitnil,omitempty" name:"OutputConfig"`

	// The identification code used for deduplication. If there is a request for the same identification code within three days, this request will return an error. The maximum length is 50 characters, without or with an empty string to indicate no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Source context, used to transparently transmit user request information. The task flow status change callback will return the value of this field, which can be up to 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The priority of the task. The larger the value, the higher the priority. The value range is -10 to 10. If left blank, it means 0.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// Reserved fields, used for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type EnhanceMediaByTemplateRequest struct {
	*tchttp.BaseRequest
	
	// File ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Enhance Media Template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Starting offset time, unit: seconds, leaving it blank means intercepting from the beginning of the video.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End offset time, unit: seconds, leaving it blank means intercepting to the end of the video.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// File configuration after Enhance.
	OutputConfig *RebuildMediaOutputConfig `json:"OutputConfig,omitnil,omitempty" name:"OutputConfig"`

	// The identification code used for deduplication. If there is a request for the same identification code within three days, this request will return an error. The maximum length is 50 characters, without or with an empty string to indicate no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Source context, used to transparently transmit user request information. The task flow status change callback will return the value of this field, which can be up to 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The priority of the task. The larger the value, the higher the priority. The value range is -10 to 10. If left blank, it means 0.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// Reserved fields, used for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *EnhanceMediaByTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *EnhanceMediaByTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "StartTimeOffset")
	delete(f, "EndTimeOffset")
	delete(f, "OutputConfig")
	delete(f, "SessionId")
	delete(f, "SessionContext")
	delete(f, "TasksPriority")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "EnhanceMediaByTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type EnhanceMediaByTemplateResponseParams struct {
	// The task ID of the Enhance Media. You can use this ID to query the status of the EnhanceMedia task.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type EnhanceMediaByTemplateResponse struct {
	*tchttp.BaseResponse
	Response *EnhanceMediaByTemplateResponseParams `json:"Response"`
}

func (r *EnhanceMediaByTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *EnhanceMediaByTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type EnhanceMediaQualityOutputConfig struct {
	// Output file name, up to 64 characters. The system will specify the file name by default
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// Category ID, used for media classification management, can be obtained by [creating a category](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) interface, create a category, get the category ID.
	// <li>Default value: 0, which means other categories.</li>
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The expiration time of the output file, the file will be deleted after this time, the default is never to expire, the format is in accordance with the ISO 8601 standard, see [ISO date format description](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`
}

// Predefined struct for user
type EnhanceMediaQualityRequestParams struct {
	// Media file ID, that is, the globally unique identifier of the file on VOD, which is assigned by the VOD backend after successful upload. This field can be obtained from [video upload completion event notification](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) or [vod console](https://console.cloud.tencent.com/vod/media).
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Remaster template ID, please contact Tencent Cloud for details
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>VOD [Subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) ID. If you want to access resources in the Subapplication, enter the Subapplication ID in this field; otherwise, you do not need to fill in this field.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Configuration of media files after Remaster
	OutputConfig *EnhanceMediaQualityOutputConfig `json:"OutputConfig,omitnil,omitempty" name:"OutputConfig"`

	// The identification code used for deduplication. If there has been a request with the same identification code within three days, this request will return an error. Up to 50 characters, without or with an empty string means no deduplication
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Source context, used to pass through user request information, Remaster completion callback will return this field value, up to 1000 characters
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The priority of the task, the higher the value, the higher the priority, the range is -10 to 10, not filled in means 0
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`
}

type EnhanceMediaQualityRequest struct {
	*tchttp.BaseRequest
	
	// Media file ID, that is, the globally unique identifier of the file on VOD, which is assigned by the VOD backend after successful upload. This field can be obtained from [video upload completion event notification](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) or [vod console](https://console.cloud.tencent.com/vod/media).
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Remaster template ID, please contact Tencent Cloud for details
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>VOD [Subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) ID. If you want to access resources in the Subapplication, enter the Subapplication ID in this field; otherwise, you do not need to fill in this field.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Configuration of media files after Remaster
	OutputConfig *EnhanceMediaQualityOutputConfig `json:"OutputConfig,omitnil,omitempty" name:"OutputConfig"`

	// The identification code used for deduplication. If there has been a request with the same identification code within three days, this request will return an error. Up to 50 characters, without or with an empty string means no deduplication
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Source context, used to pass through user request information, Remaster completion callback will return this field value, up to 1000 characters
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The priority of the task, the higher the value, the higher the priority, the range is -10 to 10, not filled in means 0
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`
}

func (r *EnhanceMediaQualityRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *EnhanceMediaQualityRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "OutputConfig")
	delete(f, "SessionId")
	delete(f, "SessionContext")
	delete(f, "TasksPriority")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "EnhanceMediaQualityRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type EnhanceMediaQualityResponseParams struct {
	// Remaster task ID
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type EnhanceMediaQualityResponse struct {
	*tchttp.BaseResponse
	Response *EnhanceMediaQualityResponseParams `json:"Response"`
}

func (r *EnhanceMediaQualityResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *EnhanceMediaQualityResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type EventContent struct {
	// Event handler. The caller must call `ConfirmEvents` to confirm that the message has been received, and the confirmation is valid for 30 seconds. After the confirmation expires, the event can be obtained again.
	EventHandle *string `json:"EventHandle,omitnil,omitempty" name:"EventHandle"`

	// <b>Supported event types:</b><li>`NewFileUpload`: Video uploaded.</li><li>`ProcedureStateChanged`: Task flow status changed.</li><li>`FileDeleted`: Video deleted.</li><li>`RestoreMediaComplete`: Video retrieved.</li><li>`PullComplete`: Finished video pulling.</li><li>`EditMediaComplete`: Finished video editing.</li><li>`SplitMediaComplete`: Finished video splitting.</li><li>`ComposeMediaComplete`: Finished producing the media file.</li><li>`WechatMiniProgramPublishComplete`: Finished publishing on Weixin Mini Program.</li><li>`RemoveWatermark`: Watermark removed.</li><li>`RebuildMediaComplete`: Finished audio/video remastering.</li><li>`ReviewAudioVideoComplete`: Finished moderation.</li><li>`ExtractTraceWatermarkComplete`: Finished digital watermark extraction.</li><li>`DescribeFileAttributesComplete`: Finished getting file attributes.</li><li>`QualityEnhanceComplete`: FinishedQualityEnhance.</li><li>`PersistenceComplete`: Clipping persistented. </li><li>`ComplexAdaptiveDynamicStreamingComplete `: Finished complex adaptive bitrate streaming processing. </li><b>v2017 task types:</b><li>`TranscodeComplete`: Finished video transcoding.</li><li>`ConcatComplete`: Finished video splicing.</li><li>`ClipComplete`: Finished video clipping.</li><li>`CreateImageSpriteComplete`: Finished image sprite generation.</li><li>`CreateSnapshotByTimeOffsetComplete`: Finished time point screencapturing.</li>
	EventType *string `json:"EventType,omitnil,omitempty" name:"EventType"`

	// Media uploaded event, valid when the event type is NewFileUpload.
	// Note: This field may return null, indicating that no valid value can be obtained.
	FileUploadEvent *FileUploadTask `json:"FileUploadEvent,omitnil,omitempty" name:"FileUploadEvent"`

	// Task flow status changed event, valid when the event type is ProcedureStateChanged.
	// Note: This field may return null, indicating that no valid value can be obtained.
	ProcedureStateChangeEvent *ProcedureTask `json:"ProcedureStateChangeEvent,omitnil,omitempty" name:"ProcedureStateChangeEvent"`

	// File deleted event, valid when the event type is FileDeleted.
	// Note: This field may return null, indicating that no valid value can be obtained.
	FileDeleteEvent *FileDeleteTask `json:"FileDeleteEvent,omitnil,omitempty" name:"FileDeleteEvent"`

	// PullUpload completion event, valid when the event type is PullComplete.
	// Note: This field may return null, indicating that no valid value can be obtained.
	PullCompleteEvent *PullUploadTask `json:"PullCompleteEvent,omitnil,omitempty" name:"PullCompleteEvent"`

	// EditMedia completion event, valid when the event type is EditMediaComplete.
	// Note: This field may return null, indicating that no valid value can be obtained.
	EditMediaCompleteEvent *EditMediaTask `json:"EditMediaCompleteEvent,omitnil,omitempty" name:"EditMediaCompleteEvent"`

	// SplitMedia completion event, valid when the event type is SplitMediaComplete.
	// Note: This field may return null, indicating that no valid value can be obtained.
	SplitMediaCompleteEvent *SplitMediaTask `json:"SplitMediaCompleteEvent,omitnil,omitempty" name:"SplitMediaCompleteEvent"`

	// ComposeMedia completion event, valid when the event type is ComposeMediaComplete.
	// Note: This field may return null, indicating that no valid value can be obtained.
	ComposeMediaCompleteEvent *ComposeMediaTask `json:"ComposeMediaCompleteEvent,omitnil,omitempty" name:"ComposeMediaCompleteEvent"`

	// Expired.
	ClipCompleteEvent *ClipTask2017 `json:"ClipCompleteEvent,omitnil,omitempty" name:"ClipCompleteEvent"`

	// Expired.
	TranscodeCompleteEvent *TranscodeTask2017 `json:"TranscodeCompleteEvent,omitnil,omitempty" name:"TranscodeCompleteEvent"`

	// Expired.
	CreateImageSpriteCompleteEvent *CreateImageSpriteTask2017 `json:"CreateImageSpriteCompleteEvent,omitnil,omitempty" name:"CreateImageSpriteCompleteEvent"`

	// Expired.
	ConcatCompleteEvent *ConcatTask2017 `json:"ConcatCompleteEvent,omitnil,omitempty" name:"ConcatCompleteEvent"`

	// Expired.
	SnapshotByTimeOffsetCompleteEvent *SnapshotByTimeOffsetTask2017 `json:"SnapshotByTimeOffsetCompleteEvent,omitnil,omitempty" name:"SnapshotByTimeOffsetCompleteEvent"`

	// Expired.
	WechatPublishCompleteEvent *WechatPublishTask `json:"WechatPublishCompleteEvent,omitnil,omitempty" name:"WechatPublishCompleteEvent"`

	// WechatMiniProgramPublish completion event, valid when the event type is WechatMiniProgramPublishComplete.
	// Note: This field may return null, indicating that no valid value can be obtained.
	WechatMiniProgramPublishCompleteEvent *WechatMiniProgramPublishTask `json:"WechatMiniProgramPublishCompleteEvent,omitnil,omitempty" name:"WechatMiniProgramPublishCompleteEvent"`

	// RemoveWatermark completion event, valid when the event type is RemoveWatermark.
	// Note: This field may return null, indicating that no valid value can be obtained.
	RemoveWatermarkCompleteEvent *RemoveWatermarkTask `json:"RemoveWatermarkCompleteEvent,omitnil,omitempty" name:"RemoveWatermarkCompleteEvent"`

	// RestoreMedia completion event, valid when the event type is RestoreMediaComplete.
	// Note: This field may return null, indicating that no valid value can be obtained.
	RestoreMediaCompleteEvent *RestoreMediaTask `json:"RestoreMediaCompleteEvent,omitnil,omitempty" name:"RestoreMediaCompleteEvent"`

	// RebuildMedia completion event, valid when the event type is RebuildMediaComplete.
	// Note: This field may return null, indicating that no valid value can be obtained.
	RebuildMediaCompleteEvent *RebuildMediaTask `json:"RebuildMediaCompleteEvent,omitnil,omitempty" name:"RebuildMediaCompleteEvent"`

	// Expired.
	ExtractTraceWatermarkCompleteEvent *ExtractTraceWatermarkTask `json:"ExtractTraceWatermarkCompleteEvent,omitnil,omitempty" name:"ExtractTraceWatermarkCompleteEvent"`

	// Expired.
	ExtractCopyRightWatermarkCompleteEvent *ExtractCopyRightWatermarkTask `json:"ExtractCopyRightWatermarkCompleteEvent,omitnil,omitempty" name:"ExtractCopyRightWatermarkCompleteEvent"`

	// ReviewAudioVideo completion event, valid when the event type is ReviewAudioVideoComplete.
	// Note: This field may return null, indicating that no valid value can be obtained.
	ReviewAudioVideoCompleteEvent *ReviewAudioVideoTask `json:"ReviewAudioVideoCompleteEvent,omitnil,omitempty" name:"ReviewAudioVideoCompleteEvent"`

	// Expired.
	ReduceMediaBitrateCompleteEvent *ReduceMediaBitrateTask `json:"ReduceMediaBitrateCompleteEvent,omitnil,omitempty" name:"ReduceMediaBitrateCompleteEvent"`

	// DescribeFileAttributes completion event, valid when the event type is DescribeFileAttributesComplete.
	// Note: This field may return null, indicating that no valid value can be obtained.
	DescribeFileAttributesCompleteEvent *DescribeFileAttributesTask `json:"DescribeFileAttributesCompleteEvent,omitnil,omitempty" name:"DescribeFileAttributesCompleteEvent"`

	// QualityInspect completion event, valid when the event type is QualityInspectComplete.
	// Note: This field may return null, indicating that no valid value can be obtained.
	QualityInspectCompleteEvent *QualityInspectTask `json:"QualityInspectCompleteEvent,omitnil,omitempty" name:"QualityInspectCompleteEvent"`

	// Remaster completion event, valid when the event type is QualityEnhanceComplete.
	// Pay attention to: this field may return null, indicating that no valid value can be obtained
	QualityEnhanceCompleteEvent *QualityEnhanceTask `json:"QualityEnhanceCompleteEvent,omitnil,omitempty" name:"QualityEnhanceCompleteEvent"`

	// MediaCastStatus changed event, valid when the event type is MediaCastStatusChanged.
	// Pay attention to: this field may return null, indicating that no valid value can be obtained.
	MediaCastStatusChangedEvent *MediaCastEvent `json:"MediaCastStatusChangedEvent,omitnil,omitempty" name:"MediaCastStatusChangedEvent"`

	// Persistence completion event, valid when the event type is PersistenceComplete.
	// Note: This field may return null, indicating that no valid value can be obtained.
	PersistenceCompleteEvent *PersistenceCompleteTask `json:"PersistenceCompleteEvent,omitnil,omitempty" name:"PersistenceCompleteEvent"`

	// Complex adaptive bitrate streaming processing completion event, valid when the event type is ComplexAdaptiveDynamicStreamingComplete.
	// Note: This field may return null, indicating that no valid value can be obtained.
	ComplexAdaptiveDynamicStreamingCompleteEvent *ComplexAdaptiveDynamicStreamingTask `json:"ComplexAdaptiveDynamicStreamingCompleteEvent,omitnil,omitempty" name:"ComplexAdaptiveDynamicStreamingCompleteEvent"`
}

// Predefined struct for user
type ExecuteFunctionRequestParams struct {
	// Name of called backend API.
	FunctionName *string `json:"FunctionName,omitnil,omitempty" name:"FunctionName"`

	// API parameter. For specific parameter format, negotiate with the backend before calling.
	FunctionArg *string `json:"FunctionArg,omitnil,omitempty" name:"FunctionArg"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The ID used for deduplication. If there was a request with the same ID in the last seven days, the current request will return an error. The ID can contain up to 50 characters. If this parameter is left empty or a blank string is entered, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Reserved field for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type ExecuteFunctionRequest struct {
	*tchttp.BaseRequest
	
	// Name of called backend API.
	FunctionName *string `json:"FunctionName,omitnil,omitempty" name:"FunctionName"`

	// API parameter. For specific parameter format, negotiate with the backend before calling.
	FunctionArg *string `json:"FunctionArg,omitnil,omitempty" name:"FunctionArg"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The ID used for deduplication. If there was a request with the same ID in the last seven days, the current request will return an error. The ID can contain up to 50 characters. If this parameter is left empty or a blank string is entered, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Reserved field for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *ExecuteFunctionRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ExecuteFunctionRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FunctionName")
	delete(f, "FunctionArg")
	delete(f, "SubAppId")
	delete(f, "SessionContext")
	delete(f, "SessionId")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ExecuteFunctionRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ExecuteFunctionResponseParams struct {
	// String generated by packaging processing result. For specifications, negotiate with the backend.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Result *string `json:"Result,omitnil,omitempty" name:"Result"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ExecuteFunctionResponse struct {
	*tchttp.BaseResponse
	Response *ExecuteFunctionResponseParams `json:"Response"`
}

func (r *ExecuteFunctionResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ExecuteFunctionResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ExtractCopyRightWatermarkRequestParams struct {
	// The media URL from which the watermark needs to be extracted.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Identifies the source context, which is used to transparently transmit user request information. This field value will be returned in the ExtractCopyRightWatermarkComplete callback and task flow status change callback, with a maximum length of 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The identification code used for task deduplication. If there is a request with the same identification code within three days, this request will return an error. The maximum length is 50 characters, without or with an empty string to indicate no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The priority of the task. The larger the value, the higher the priority. The value range is -10 to 10. If left blank, it means 0.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// Reserved fields, used for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type ExtractCopyRightWatermarkRequest struct {
	*tchttp.BaseRequest
	
	// The media URL from which the watermark needs to be extracted.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Identifies the source context, which is used to transparently transmit user request information. This field value will be returned in the ExtractCopyRightWatermarkComplete callback and task flow status change callback, with a maximum length of 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The identification code used for task deduplication. If there is a request with the same identification code within three days, this request will return an error. The maximum length is 50 characters, without or with an empty string to indicate no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The priority of the task. The larger the value, the higher the priority. The value range is -10 to 10. If left blank, it means 0.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// Reserved fields, used for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *ExtractCopyRightWatermarkRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ExtractCopyRightWatermarkRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Url")
	delete(f, "SubAppId")
	delete(f, "SessionContext")
	delete(f, "SessionId")
	delete(f, "TasksPriority")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ExtractCopyRightWatermarkRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ExtractCopyRightWatermarkResponseParams struct {
	// Task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ExtractCopyRightWatermarkResponse struct {
	*tchttp.BaseResponse
	Response *ExtractCopyRightWatermarkResponseParams `json:"Response"`
}

func (r *ExtractCopyRightWatermarkResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ExtractCopyRightWatermarkResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ExtractCopyRightWatermarkTask struct {
	// Task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Task status, values:
	// <li>PROCESSING: Processing;</li>
	// <li>FINISH: Completed. </li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code, 0 means success, other values u200bu200bmean failure:
	// <li>40000: The input parameters are illegal, please check the input parameters;</li>
	// <li>60000: Source file error (such as video data damage), Please confirm whether the source file is normal;</li>
	// <li>70000: Internal service error, it is recommended to try again. </li>
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Error code. An empty string indicates success. Other values u200bu200bindicate failure. For values, please refer to [Video Processing Error Code](https://www.tencentcloud.com/document/product/266/39145) list.
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Extract copyright watermark task input information.
	// Note: This field may return null, indicating that no valid value can be obtained.
	Input *ExtractCopyRightWatermarkTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Extract copyright watermark task output information.
	// Note: This field may return null, indicating that no valid value can be obtained.
	Output *ExtractCopyRightWatermarkTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// Identification code used for deduplication. If there is a request for the same identification code within seven days, this request will return an error. The maximum length is 50 characters, without or with an empty string to indicate no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Source context, used to transparently transmit user request information. The task flow status change callback will return the value of this field, which can be up to 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`
}

type ExtractCopyRightWatermarkTaskInput struct {
	// The media URL from which the watermark needs to be extracted.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`
}

type ExtractCopyRightWatermarkTaskOutput struct {
	// Copyright information
	Text *string `json:"Text,omitnil,omitempty" name:"Text"`
}

// Predefined struct for user
type ExtractTraceWatermarkRequestParams struct {
	// The URL of the media on which digital watermark extraction is to be performed.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// The ID of the file specified by `Url`.
	// <li><font color=red>Note</font>: This parameter is required.</li>
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The source context, which is used to pass through user request information. The `ExtractTraceWatermarkComplete` callback and the `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last three days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The task priority, which can be a value from -10 to 10. The higher the value, the higher the priority. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// A reserved parameter.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type ExtractTraceWatermarkRequest struct {
	*tchttp.BaseRequest
	
	// The URL of the media on which digital watermark extraction is to be performed.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// The ID of the file specified by `Url`.
	// <li><font color=red>Note</font>: This parameter is required.</li>
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The source context, which is used to pass through user request information. The `ExtractTraceWatermarkComplete` callback and the `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last three days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The task priority, which can be a value from -10 to 10. The higher the value, the higher the priority. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// A reserved parameter.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *ExtractTraceWatermarkRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ExtractTraceWatermarkRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Url")
	delete(f, "FileId")
	delete(f, "SubAppId")
	delete(f, "SessionContext")
	delete(f, "SessionId")
	delete(f, "TasksPriority")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ExtractTraceWatermarkRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ExtractTraceWatermarkResponseParams struct {
	// The task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ExtractTraceWatermarkResponse struct {
	*tchttp.BaseResponse
	Response *ExtractTraceWatermarkResponseParams `json:"Response"`
}

func (r *ExtractTraceWatermarkResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ExtractTraceWatermarkResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ExtractTraceWatermarkTask struct {
	// The task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The task status. Valid values:
	// <li>PROCESSING</li>
	// <li>FINISH</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// The error code. `0` indicates the task is successful. Other values indicate that the task failed.
	// <li>40000: Invalid input parameter.</li>
	// <li>60000: Source file error (e.g., video data is corrupted).</li>
	// <li>70000: Internal server error. Please try again.</li>
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// The error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// The error code. An empty string indicates the task is successful; other values indicate that the task failed. For details, see [Video processing error codes](https://intl.cloud.tencent.com/document/product/266/39145?lang=en&pg=#video-processing).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// The information of a digital watermark extraction task.
	Input *ExtractTraceWatermarkTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// The output of a digital watermark extraction task.
	Output *ExtractTraceWatermarkTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last seven days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`
}

type ExtractTraceWatermarkTaskInput struct {
	// The URL of the media on which digital watermark extraction is to be performed.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// Media file ID. The original media file ID corresponding to the URL.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`
}

type ExtractTraceWatermarkTaskOutput struct {
	// The distributor’s user ID, which is a six-digit hex number. This parameter is relevant when [digital watermarks](https://intl.cloud.tencent.com/document/product/266/75789?from_cn_redirect=1) are used.
	Uv *string `json:"Uv,omitnil,omitempty" name:"Uv"`

	// This parameter has been deprecated.
	Uid *string `json:"Uid,omitnil,omitempty" name:"Uid"`
}

type FaceConfigureInfo struct {
	// Switch of face recognition task. Valid values:
	// <li>ON: enables intelligent face recognition task;</li>
	// <li>OFF: disables intelligent face recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Face recognition filter score. If this score is reached or exceeded, a recognition result will be returned. Value range: 0–100. Default value: 95.
	Score *float64 `json:"Score,omitnil,omitempty" name:"Score"`

	// Default face filter labels, which specify the types of faces to return. If this parameter is left empty, the recognition results for all labels are returned. Valid values:
	// <li>`entertainment`: people in the entertainment industry</li>
	// <li>`sport`: sports celebrities</li>
	// <li>`politician`: politically sensitive people</li>
	DefaultLibraryLabelSet []*string `json:"DefaultLibraryLabelSet,omitnil,omitempty" name:"DefaultLibraryLabelSet"`

	// Custom face labels for filtering. After you specify a label, callbacks of face images without this label will be returned. If this parameter is not specified or left empty, callbacks of all face images will be returned.
	// You can specify up to 100 labels, with each containing up to 16 characters.
	UserDefineLibraryLabelSet []*string `json:"UserDefineLibraryLabelSet,omitnil,omitempty" name:"UserDefineLibraryLabelSet"`

	// Figure library. Valid values:
	// <li>Default: default figure library;</li>
	// <li>UserDefine: custom figure library.</li>
	// <li>All: both default and custom figure libraries will be used.</li>
	// Default value: All (both default and custom figure libraries will be used.)
	FaceLibrary *string `json:"FaceLibrary,omitnil,omitempty" name:"FaceLibrary"`
}

type FaceConfigureInfoForUpdate struct {
	// Switch of face recognition task. Valid values:
	// <li>ON: enables intelligent face recognition task;</li>
	// <li>OFF: disables intelligent face recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Face recognition filter score. If this score is reached or exceeded, a recognition result will be returned. Value range: 0–100.
	Score *float64 `json:"Score,omitnil,omitempty" name:"Score"`

	// Default face filter labels, which specify the types of faces to return. If this parameter is left empty or an empty value is entered, the recognition results for all labels are returned. Valid values:
	// <li>`entertainment`: people in the entertainment industry</li>
	// <li>`sport`: sports celebrities</li>
	// <li>`politician`: politically sensitive people</li>
	DefaultLibraryLabelSet []*string `json:"DefaultLibraryLabelSet,omitnil,omitempty" name:"DefaultLibraryLabelSet"`

	// Custom face labels for filtering. After you specify a label, callbacks of face images without this label will be returned. If this parameter is not specified or left empty, callbacks of all face images will be returned.
	// You can specify up to 100 labels, with each containing up to 16 characters.
	UserDefineLibraryLabelSet []*string `json:"UserDefineLibraryLabelSet,omitnil,omitempty" name:"UserDefineLibraryLabelSet"`

	// Figure library. Valid values:
	// <li>Default: default figure library;</li>
	// <li>UserDefine: custom figure library.</li>
	// <li>All: both default and custom figure libraries will be used.</li>
	FaceLibrary *string `json:"FaceLibrary,omitnil,omitempty" name:"FaceLibrary"`
}

type FaceEnhanceInfo struct {
	// Whether to enable face enhancement. Valid values:
	// <li>`ON`</li>
	// <li>`OFF`</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The face enhancement strength. This parameter is valid only if `Switch` is `ON`. Value range: 0.0 – 1.0.
	// Default value: `0.0`.
	Intensity *float64 `json:"Intensity,omitnil,omitempty" name:"Intensity"`
}

type FastEditMediaFileInfo struct {
	// Media file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The types of media. Valid values: <li>Transcode:Transcoded output; </li> <li>Original: Original audio and video. </li>The audio and video being operated on must be in HLS format.
	AudioVideoType *string `json:"AudioVideoType,omitnil,omitempty" name:"AudioVideoType"`

	// When AudioVideoType is set to Transcode, it is valid and indicates the transcoding template ID for the media being operated on.
	TranscodeDefinition *int64 `json:"TranscodeDefinition,omitnil,omitempty" name:"TranscodeDefinition"`

	// Offset time of the start of the video clip, unit: seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// Offset time at the end of the video clip, unit: seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`
}

// Predefined struct for user
type FastEditMediaRequestParams struct {
	// Input media file information. Support for up to 100 media inputs.
	FileInfos []*FastEditMediaFileInfo `json:"FileInfos,omitnil,omitempty" name:"FileInfos"`

	// ClipMode is used to indicate whether to include this segment when the clipping time point falls in the middle of a TS segment. There are two values:<li>StartInclusiveEndInclusive: When the clip start time point and end time point fall in the middle of a segment, this segment will be included; </li> <li>StartInclusiveEndExclusive: When the starting time point falls in the middle of a segment, the segment will be included; when the end time point falls in the middle of a segment, the segment will not be included.</li> If not specified, the default is StartInclusiveEndInclusive.
	ClipMode *string `json:"ClipMode,omitnil,omitempty" name:"ClipMode"`

	// <b> VOD [Application](/document/product/266/14574) ID. Customers who activate VOD services from December 25, 2023, if they access resources in VOD applications (whether it is a default application or a newly created application), must fill in this field as the application ID. </b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type FastEditMediaRequest struct {
	*tchttp.BaseRequest
	
	// Input media file information. Support for up to 100 media inputs.
	FileInfos []*FastEditMediaFileInfo `json:"FileInfos,omitnil,omitempty" name:"FileInfos"`

	// ClipMode is used to indicate whether to include this segment when the clipping time point falls in the middle of a TS segment. There are two values:<li>StartInclusiveEndInclusive: When the clip start time point and end time point fall in the middle of a segment, this segment will be included; </li> <li>StartInclusiveEndExclusive: When the starting time point falls in the middle of a segment, the segment will be included; when the end time point falls in the middle of a segment, the segment will not be included.</li> If not specified, the default is StartInclusiveEndInclusive.
	ClipMode *string `json:"ClipMode,omitnil,omitempty" name:"ClipMode"`

	// <b> VOD [Application](/document/product/266/14574) ID. Customers who activate VOD services from December 25, 2023, if they access resources in VOD applications (whether it is a default application or a newly created application), must fill in this field as the application ID. </b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *FastEditMediaRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *FastEditMediaRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileInfos")
	delete(f, "ClipMode")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "FastEditMediaRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type FastEditMediaResponseParams struct {
	// The unique identification of the media file of the fast edited video
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Fast-edited media playback address
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type FastEditMediaResponse struct {
	*tchttp.BaseResponse
	Response *FastEditMediaResponseParams `json:"Response"`
}

func (r *FastEditMediaResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *FastEditMediaResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type FileDeleteResultItem struct {
	// The ID of the file deleted.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The type of the file deleted.
	// Note: This field may return `null`, indicating that no valid value can be obtained.
	DeleteParts []*MediaDeleteItem `json:"DeleteParts,omitnil,omitempty" name:"DeleteParts"`
}

type FileDeleteTask struct {
	// List of IDs of deleted files.
	FileIdSet []*string `json:"FileIdSet,omitnil,omitempty" name:"FileIdSet"`

	// The information of the files deleted.
	FileDeleteResultInfo []*FileDeleteResultItem `json:"FileDeleteResultInfo,omitnil,omitempty" name:"FileDeleteResultInfo"`
}

type FileReviewInfo struct {
	// Audio/Video moderation details\*.
	// 
	// \* This parameter only contains the information of moderation tasks initiated by the [ReviewAudioVideo](https://intl.cloud.tencent.com/document/api/266/80283?from_cn_redirect=1) or [ReviewImage](https://intl.cloud.tencent.com/document/api/266/73217?from_cn_redirect=1) API.
	// Note: This field may return null, indicating that no valid values can be obtained.
	MediaReviewInfo *ReviewInfo `json:"MediaReviewInfo,omitnil,omitempty" name:"MediaReviewInfo"`

	// Thumbnail moderation details\*.
	// 
	// \* This parameter only contains the information of moderation tasks initiated by the [ReviewAudioVideo](https://intl.cloud.tencent.com/document/api/266/80283?from_cn_redirect=1) or [ReviewImage](https://intl.cloud.tencent.com/document/api/266/73217?from_cn_redirect=1) API.
	// Note: This field may return null, indicating that no valid values can be obtained.
	CoverReviewInfo *ReviewInfo `json:"CoverReviewInfo,omitnil,omitempty" name:"CoverReviewInfo"`
}

type FileUploadTask struct {
	// Unique file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Basic information of media file generated after upload is completed.
	MediaBasicInfo *MediaBasicInfo `json:"MediaBasicInfo,omitnil,omitempty" name:"MediaBasicInfo"`

	// The task ID for the task type `Procedure`. If a task flow is specified for [uploaded media](https://intl.cloud.tencent.com/document/product/266/33475?from_cn_redirect=1#.E4.BB.BB.E5.8A.A1.E5.8F.91.E8.B5.B7), and the task flow includes one or more of `MediaProcessTask`, `AiAnalysisTask`, and `AiRecognitionTask`, the task specified by this parameter will be executed.
	ProcedureTaskId *string `json:"ProcedureTaskId,omitnil,omitempty" name:"ProcedureTaskId"`

	// The task ID for the task type `ReviewAudioVideo`. If a task flow is specified for [uploaded media](https://intl.cloud.tencent.com/document/product/266/33475?from_cn_redirect=1#.E4.BB.BB.E5.8A.A1.E5.8F.91.E8.B5.B7), and the task flow includes `ReviewAudioVideoTask`, the task specified by this parameter will be executed.
	ReviewAudioVideoTaskId *string `json:"ReviewAudioVideoTaskId,omitnil,omitempty" name:"ReviewAudioVideoTaskId"`

	// Metadata, such as size, duration, video stream information, audio stream information, etc.
	// Note: this field may return null, indicating that no valid values can be obtained.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`
}

type FileVerifyInfo struct {
	// File verification URL guidance.
	FileVerifyUrl *string `json:"FileVerifyUrl,omitnil,omitempty" name:"FileVerifyUrl"`

	// File verification domain name list.
	FileVerifyDomains []*string `json:"FileVerifyDomains,omitnil,omitempty" name:"FileVerifyDomains"`

	// File verification file name.
	// Note: This field may return null, indicating that no valid value can be obtained.
	FileVerifyName *string `json:"FileVerifyName,omitnil,omitempty" name:"FileVerifyName"`
}

type FollowRedirect struct {
	// Back-to-origin follow configuration switch, the values u200bu200bare: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

// Predefined struct for user
type ForbidMediaDistributionRequestParams struct {
	// List of media files. Up to 20 ones can be submitted at a time.
	FileIds []*string `json:"FileIds,omitnil,omitempty" name:"FileIds"`

	// forbid: forbids, recover: unblocks.
	Operation *string `json:"Operation,omitnil,omitempty" name:"Operation"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type ForbidMediaDistributionRequest struct {
	*tchttp.BaseRequest
	
	// List of media files. Up to 20 ones can be submitted at a time.
	FileIds []*string `json:"FileIds,omitnil,omitempty" name:"FileIds"`

	// forbid: forbids, recover: unblocks.
	Operation *string `json:"Operation,omitnil,omitempty" name:"Operation"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *ForbidMediaDistributionRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ForbidMediaDistributionRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileIds")
	delete(f, "Operation")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ForbidMediaDistributionRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ForbidMediaDistributionResponseParams struct {
	// List of IDs of files that do not exist.
	NotExistFileIdSet []*string `json:"NotExistFileIdSet,omitnil,omitempty" name:"NotExistFileIdSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ForbidMediaDistributionResponse struct {
	*tchttp.BaseResponse
	Response *ForbidMediaDistributionResponseParams `json:"Response"`
}

func (r *ForbidMediaDistributionResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ForbidMediaDistributionResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ForceRedirect struct {
	// Access forced jump configuration switch, value: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Access forced jump type: <li>http: forced http jump</li> <li>https: forced https jump</li>
	RedirectType *string `json:"RedirectType,omitnil,omitempty" name:"RedirectType"`

	// Status code returned for forced redirect Supports 301, 302.
	RedirectStatusCode *uint64 `json:"RedirectStatusCode,omitnil,omitempty" name:"RedirectStatusCode"`

	// Whether to return the newly added header during force redirection.
	CarryHeaders *string `json:"CarryHeaders,omitnil,omitempty" name:"CarryHeaders"`
}

type FrameTagConfigureInfo struct {
	// Switch of intelligent frame-specific tagging task. Valid values:
	// <li>ON: enables intelligent frame-specific tagging task;</li>
	// <li>OFF: disables intelligent frame-specific tagging task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Frame capturing interval in seconds. If this parameter is left empty, 1 second will be used by default. Minimum value: 0.5 seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`
}

type FrameTagConfigureInfoForUpdate struct {
	// Switch of intelligent frame-specific tagging task. Valid values:
	// <li>ON: enables intelligent frame-specific tagging task;</li>
	// <li>OFF: disables intelligent frame-specific tagging task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Frame capturing interval in seconds. Minimum value: 0.5 seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`
}

type HDRInfo struct {
	// Whether to enable HDR. Valid values:
	// <li>`ON`</li>
	// <li>`OFF`</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The HDR type. Valid values:
	// <li>`hdr10`</li>
	// <li>`hlg`</li>
	// 
	// Note:
	// <li>This parameter is valid only if `Switch` is `ON`.</li>
	// <li>For audio/video remastering, this parameter is valid only if the output video codec is `libx265`.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

// Predefined struct for user
type HandleCurrentPlaylistRequestParams struct {
	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574) id.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The unique identifier of the playlist.
	RoundPlayId *string `json:"RoundPlayId,omitnil,omitempty" name:"RoundPlayId"`

	// Operation type, available options:<li>insert: insert program into the current playlist.</li> <li>inserttemporary: temporarily insert program into the current playlist. can only be inserted after the currently playing program. temporarily inserted programs are only effective during this carousel process.</li><li>delete: delete program from the playlist. cannot delete currently playing programs.</li>.
	Operation *string `json:"Operation,omitnil,omitempty" name:"Operation"`

	// Playlist program id. required when operation is insert, indicating the program list will be inserted after this program. the insertion position must be after the currently playing program.
	ItemId *string `json:"ItemId,omitnil,omitempty" name:"ItemId"`

	// Program list. required when operation is insert, inserttemporary, delete, indicating the list of programs to be operated on. the list length can be up to a maximum of 10.
	RoundPlaylist []*RoundPlayListItemInfo `json:"RoundPlaylist,omitnil,omitempty" name:"RoundPlaylist"`
}

type HandleCurrentPlaylistRequest struct {
	*tchttp.BaseRequest
	
	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574) id.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The unique identifier of the playlist.
	RoundPlayId *string `json:"RoundPlayId,omitnil,omitempty" name:"RoundPlayId"`

	// Operation type, available options:<li>insert: insert program into the current playlist.</li> <li>inserttemporary: temporarily insert program into the current playlist. can only be inserted after the currently playing program. temporarily inserted programs are only effective during this carousel process.</li><li>delete: delete program from the playlist. cannot delete currently playing programs.</li>.
	Operation *string `json:"Operation,omitnil,omitempty" name:"Operation"`

	// Playlist program id. required when operation is insert, indicating the program list will be inserted after this program. the insertion position must be after the currently playing program.
	ItemId *string `json:"ItemId,omitnil,omitempty" name:"ItemId"`

	// Program list. required when operation is insert, inserttemporary, delete, indicating the list of programs to be operated on. the list length can be up to a maximum of 10.
	RoundPlaylist []*RoundPlayListItemInfo `json:"RoundPlaylist,omitnil,omitempty" name:"RoundPlaylist"`
}

func (r *HandleCurrentPlaylistRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *HandleCurrentPlaylistRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "RoundPlayId")
	delete(f, "Operation")
	delete(f, "ItemId")
	delete(f, "RoundPlaylist")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "HandleCurrentPlaylistRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type HandleCurrentPlaylistResponseParams struct {
	// List of successfully operated programs.
	RoundPlaylist []*RoundPlayListItemInfo `json:"RoundPlaylist,omitnil,omitempty" name:"RoundPlaylist"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type HandleCurrentPlaylistResponse struct {
	*tchttp.BaseResponse
	Response *HandleCurrentPlaylistResponseParams `json:"Response"`
}

func (r *HandleCurrentPlaylistResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *HandleCurrentPlaylistResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type HeadTailConfigureInfo struct {
	// Switch of video opening and ending credits recognition task. Valid values:
	// <li>ON: enables video opening and ending credits recognition task;</li>
	// <li>OFF: disables video opening and ending credits recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type HeadTailConfigureInfoForUpdate struct {
	// Switch of video opening and ending credits recognition task. Valid values:
	// <li>ON: enables video opening and ending credits recognition task;</li>
	// <li>OFF: disables video opening and ending credits recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type HeadTailTaskInput struct {
	// Video opening/closing credits configuration template ID
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type HeadTailTemplate struct {
	// Head Tail Template Number.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Template name, supports up to 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description, up to 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Title candidate list. When using it, the one closest to the resolution of the feature film will be selected. When the same candidate exists, the first one will be selected. A maximum of 5 are supported.
	HeadCandidateSet []*string `json:"HeadCandidateSet,omitnil,omitempty" name:"HeadCandidateSet"`

	// Ending candidate list. When using it, the one closest to the resolution of the feature film will be selected. When the same candidate exists, the first one will be selected. A maximum of 5 are supported.
	TailCandidateSet []*string `json:"TailCandidateSet,omitnil,omitempty" name:"TailCandidateSet"`

	// Padding method. When the video stream configuration width and height parameters are inconsistent with the aspect ratio of the original video, the transcoding processing method is "padding". Optional filling method:
	// <li> stretch: stretch, stretch each frame to fill the entire screen, which may cause the transcoded video to be "squashed" or "stretched";</li> 
	// <li> gauss: Gaussian blur, keep the video aspect ratio unchanged, use Gaussian blur for the remaining edges; </li>
	// <li> white: leave blank, keep the video aspect ratio unchanged, use the remaining edges for the edge Use white filling; </li>
	// <li> black: Leave black, keep the video aspect ratio unchanged, and fill the remaining edges with black. </li>
	// Default value: stretch.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`

	// Template creation time, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// The last modification time of the template, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

type HeuristicCache struct {
	// Heuristic cache configuration switch, the values u200bu200bare: 
	// <li>on: on; </li>
	// <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Custom heuristic cache time configuration.
	// Note: This field may return null, indicating that no valid value can be obtained.
	CacheConfig *HeuristicCacheConfig `json:"CacheConfig,omitnil,omitempty" name:"CacheConfig"`
}

type HeuristicCacheConfig struct {
	// Heuristic custom time cache configuration switch, the values u200bu200bare: <li>on: on; </li> <li>off: off. </li>
	HeuristicCacheTimeSwitch *string `json:"HeuristicCacheTimeSwitch,omitnil,omitempty" name:"HeuristicCacheTimeSwitch"`

	// Unit: seconds.
	HeuristicCacheTime *uint64 `json:"HeuristicCacheTime,omitnil,omitempty" name:"HeuristicCacheTime"`
}

type HighlightSegmentItem struct {
	// Confidence.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Start time offset of a segment.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of a segment.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`
}

type HighlightsConfigureInfo struct {
	// Switch of an intelligent highlight generating task. Valid values:
	// <li>ON: enable an intelligent highlight generating task;</li>
	// <li>OFF: disable an intelligent highlight generating task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type HighlightsConfigureInfoForUpdate struct {
	// Switch of an intelligent highlight generating task. Valid values:
	// <li>ON: enable an intelligent highlight generating task;</li>
	// <li>OFF: disable an intelligent highlight generating task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type HttpHeaderPathRule struct {
	// http header setting method: <li>set: setting. Change the value of the specified header parameter to the set value; if the set header does not exist, the header will be added; if there are multiple duplicate header parameters, all will be changed and merged into one header. ;</li> <li>del: delete. Delete the specified header parameter;</li> <li>add: add. Add the specified header parameters. By default, repeated addition is allowed, that is, the same header is added repeatedly (note: repeated addition may affect the browser response, please use the set operation first). </li>
	HeaderMode *string `json:"HeaderMode,omitnil,omitempty" name:"HeaderMode"`

	// HTTP header name. Up to 100 characters can be set.
	HeaderName *string `json:"HeaderName,omitnil,omitempty" name:"HeaderName"`

	// http header value, up to 1000 characters can be set; optional when Mode is del; required when Mode is add/set.
	HeaderValue *string `json:"HeaderValue,omitnil,omitempty" name:"HeaderValue"`

	// Rule type: <li>all: valid for all files;</li> <li>file: valid for specified file suffix;</li> <li>directory: valid for specified path;</li> <li>path: specified absolute The path takes effect. </li>
	RuleType *string `json:"RuleType,omitnil,omitempty" name:"RuleType"`

	// Matching content under the corresponding type of RuleType: <li>Fill in * when all is used;</li> <li>Fill in suffix name when file is used, such as jpg, txt;</li> <li>Fill in path when directory is used, such as /xxx/ test/;</li> <li>Fill in the absolute path when path is specified, such as /xxx/test.html. </li>
	RulePaths []*string `json:"RulePaths,omitnil,omitempty" name:"RulePaths"`
}

type Https struct {
	// https configuration switch, value: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// http2 configuration switch, value: <li>on: on; </li> <li>off: off. </li>
	Http2 *string `json:"Http2,omitnil,omitempty" name:"Http2"`

	// Server certificate configuration information
	CertInfo *CDNCertInfo `json:"CertInfo,omitnil,omitempty" name:"CertInfo"`
}

type HwPrivateAccess struct {
	// Huawei Cloud Object Storage back-to-origin authentication configuration switch, the value is: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Access ID
	AccessKey *string `json:"AccessKey,omitnil,omitempty" name:"AccessKey"`

	// Key
	SecretKey *string `json:"SecretKey,omitnil,omitempty" name:"SecretKey"`

	// BucketName
	Bucket *string `json:"Bucket,omitnil,omitempty" name:"Bucket"`
}

type IPFilterPolicy struct {

	Status *string `json:"Status,omitnil,omitempty" name:"Status"`


	FilterType *string `json:"FilterType,omitnil,omitempty" name:"FilterType"`


	IPList []*string `json:"IPList,omitnil,omitempty" name:"IPList"`
}

type ImageBlur struct {
	// The blur type. Valid values:
	// <li>`Gaussian`</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The radius of the blur. Value range: 1-50. This parameter is valid if `Type` is `Gaussian`.
	Radius *int64 `json:"Radius,omitnil,omitempty" name:"Radius"`

	// The standard deviation of the Gaussian distribution, which must be greater than 0. This parameter is valid if `Type` is `Gaussian`.
	Sigma *int64 `json:"Sigma,omitnil,omitempty" name:"Sigma"`
}

type ImageCenterCut struct {
	// The cropping type. Valid values:
	// <li>Circle: Cropping to circle. `Radius` specifies the radius of the output image.</li>
	// <li>Rectangle: Cropping to rectangle. `Width` and `Height` specify the width and height of the output image.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The width (pixels) of the output image. This parameter is valid if `Type` is `Rectangle`.
	Width *int64 `json:"Width,omitnil,omitempty" name:"Width"`

	// The height (pixels) of the output image. This parameter is valid if `Type` is `Rectangle`.
	Height *int64 `json:"Height,omitnil,omitempty" name:"Height"`

	// The radius of the output image. This parameter is valid if `Type` is `Circle`.
	Radius *int64 `json:"Radius,omitnil,omitempty" name:"Radius"`
}

type ImageOperation struct {
	// Image processing type. Optional types are:
	// <li>Scale: image thumbnail processing;</li>
	// <li>CenterCut: image cropping processing;</li>
	// <li>Blur: image blur processing. </li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The scaling details. This parameter is valid only if `Type` is `Scale`.
	Scale *ImageScale `json:"Scale,omitnil,omitempty" name:"Scale"`

	// The cropping details. This parameter is valid only if `Type` is `CenterCut`.
	CenterCut *ImageCenterCut `json:"CenterCut,omitnil,omitempty" name:"CenterCut"`

	// Image blurring. This parameter is valid only if `Type` is `Blur`.
	Blur *ImageBlur `json:"Blur,omitnil,omitempty" name:"Blur"`
}

type ImageProcessingTemplate struct {
	// The template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The template type. Valid values:
	// <li>Preset</li>
	// <li>Custom</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// An array of image processing operations. The operations will be performed in the specified order.
	// <li>Length limit: 3.</li>
	Operations []*ImageOperation `json:"Operations,omitnil,omitempty" name:"Operations"`

	// The template creation time in [ISO date format](https://www.tencentcloud.com/document/product/266/11732?lang=en&pg=#iso-date-format).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`
}

type ImageReviewUsageDataItem struct {
	// The start time (in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)) of the data returned. For example, if the granularity is a day, `2018-12-01T00:00:00+08:00` indicates that the data is for the whole day of December 1, 2018.
	Time *string `json:"Time,omitnil,omitempty" name:"Time"`

	// The number of times the image recognition feature is used.
	Count *int64 `json:"Count,omitnil,omitempty" name:"Count"`
}

type ImageScale struct {
	// The scaling type. Valid values:
	// <li>`WidthFirst`: Specify the width and proportionally scale the height.</li>
	// <li>`HeightFirst`: Specify the height and proportionally scale the width.</li>
	// <li>`LongEdgeFirst`: Specify the long side (`LongEdge`) and proportionally scale the short side.</li>
	// <li>`ShortEdgeFirst`: Specify the short side (`ShortEdge`) and proportionally scale the long side.</li>
	// <li>Force: Specify both the height and width. The output image may be distorted.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The image height (pixels). This parameter is valid only if `Type` is `HeightFirst` or `Force`.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// The image width (pixels). This parameter is valid only if `Type` is `WidthFirst` or `Force`.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// The long side of the output image (pixels). This parameter is valid only if `Type` is `LongEdgeFirst`.
	LongEdge *uint64 `json:"LongEdge,omitnil,omitempty" name:"LongEdge"`

	// The short side of the output image (pixels). This parameter is valid only if `Type` is `ShortEdgeFirst`.
	ShortEdge *uint64 `json:"ShortEdge,omitnil,omitempty" name:"ShortEdge"`
}

type ImageSpriteTaskInput struct {
	// Image sprite generating template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type ImageSpriteTemplate struct {
	// Unique ID of an image sprite generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Template type. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Name of an image sprite generating template.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Maximum value of the width (or long side) of a subimage in an image sprite in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of a subimage in an image sprite in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Sampling type.
	SampleType *string `json:"SampleType,omitnil,omitempty" name:"SampleType"`

	// Sampling interval.
	SampleInterval *uint64 `json:"SampleInterval,omitnil,omitempty" name:"SampleInterval"`

	// Subimage row count of an image sprite.
	RowCount *uint64 `json:"RowCount,omitnil,omitempty" name:"RowCount"`

	// Subimage column count of an image sprite.
	ColumnCount *uint64 `json:"ColumnCount,omitnil,omitempty" name:"ColumnCount"`

	// Creation time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`

	// Template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The image format.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`
}

type ImageTransform struct {
	// Type. Valid values:
	// <li> Rotate: image rotation.</li>
	// <li> Flip: image flipping.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Rotation angle of image with its center point as origin. Value range: 0-360. This parameter is valid if `Type` is `Rotate`.
	RotateAngle *float64 `json:"RotateAngle,omitnil,omitempty" name:"RotateAngle"`

	// Image flipping action. Valid values:
	// <li>Horizental: horizontal flipping, i.e., horizontally mirrored.</li>
	// <li>Vertical: vertical flipping, i.e., vertically mirrored.</li>
	// This is valid if `Type` is `Flip`.
	Flip *string `json:"Flip,omitnil,omitempty" name:"Flip"`
}

type ImageWatermarkInput struct {
	// The [Base64](https://tools.ietf.org/html/rfc4648) encoded string of a watermark image. Only JPEG, PNG, and GIF images are supported.
	ImageContent *string `json:"ImageContent,omitnil,omitempty" name:"ImageContent"`

	// Watermark width. % and px formats are supported:
	// <li>If the string ends in %, the `Width` of the watermark will be the specified percentage of the video width. For example, `10%` means that `Width` is 10% of the video width;</li>
	// <li>If the string ends in px, the `Width` of the watermark will be in pixels. For example, `100px` means that `Width` is 100 pixels. Value range: [8, 4096].</li>
	// Default value: 10%.
	Width *string `json:"Width,omitnil,omitempty" name:"Width"`

	// Watermark height. % and px formats are supported:
	// <li>If the string ends in %, the `Height` of the watermark will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height;</li>
	// <li>If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px. Valid values: 0 or [8,4096].</li>
	// Default value: 0 px, which means that `Height` will be proportionally scaled according to the aspect ratio of the original watermark image.
	Height *string `json:"Height,omitnil,omitempty" name:"Height"`

	// Repeat type of an animated watermark. Valid values:
	// <li>once: no longer appears after watermark playback ends.</li>
	// <li>repeat_last_frame: stays on the last frame after watermark playback ends.</li>
	// <li>repeat (default): repeats the playback until the video ends.</li>
	RepeatType *string `json:"RepeatType,omitnil,omitempty" name:"RepeatType"`


	Transparency *int64 `json:"Transparency,omitnil,omitempty" name:"Transparency"`
}

type ImageWatermarkInputForUpdate struct {
	// String generated by [Base64-encoding](https://tools.ietf.org/html/rfc4648) a watermark image. JPEG and PNG images are supported.
	ImageContent *string `json:"ImageContent,omitnil,omitempty" name:"ImageContent"`

	// Watermark width. % and px formats are supported:
	// <li>If the string ends in %, the `Width` of the watermark will be the specified percentage of the video width. For example, `10%` means that `Width` is 10% of the video width;</li>
	// <li>If the string ends in px, the `Width` of the watermark will be in pixels. For example, `100px` means that `Width` is 100 pixels. Value range: [8, 4096].</li>
	Width *string `json:"Width,omitnil,omitempty" name:"Width"`

	// Watermark height. % and px formats are supported:
	// <li>If the string ends in %, the `Height` of the watermark will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height;</li>
	// <li>If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px. Valid values: 0 or [8,4096].</li>
	Height *string `json:"Height,omitnil,omitempty" name:"Height"`

	// Repeat type of an animated watermark. Valid values:
	// <li>once: no longer appears after watermark playback ends.</li>
	// <li>repeat_last_frame: stays on the last frame after watermark playback ends.</li>
	// <li>repeat (default): repeats the playback until the video ends.</li>
	RepeatType *string `json:"RepeatType,omitnil,omitempty" name:"RepeatType"`


	Transparency *int64 `json:"Transparency,omitnil,omitempty" name:"Transparency"`
}

type ImageWatermarkTemplate struct {
	// Watermark image address.
	ImageUrl *string `json:"ImageUrl,omitnil,omitempty" name:"ImageUrl"`

	// Watermark width. % and px formats are supported:
	// <li>If the string ends in %, the `Width` of the watermark will be the specified percentage of the video width; for example, `10%` means that `Width` is 10% of the video width;</li>
	// <li>If the string ends in px, the `Width` of the watermark will be in px; for example, `100px` means that `Width` is 100 px.</li>
	Width *string `json:"Width,omitnil,omitempty" name:"Width"`

	// Watermark height. % and px formats are supported:
	// <li>If the string ends in %, the `Height` of the watermark will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height;</li>
	// <li>If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px;</li>
	// `0px` means that `Height` will be proportionally scaled according to the video width.
	Height *string `json:"Height,omitnil,omitempty" name:"Height"`

	// Repeat type of an animated watermark. Valid values:
	// <li>once: no longer appears after watermark playback ends.</li>
	// <li>repeat_last_frame: stays on the last frame after watermark playback ends.</li>
	// <li>repeat (default): repeats the playback until the video ends.</li>
	RepeatType *string `json:"RepeatType,omitnil,omitempty" name:"RepeatType"`


	Transparency *int64 `json:"Transparency,omitnil,omitempty" name:"Transparency"`
}

// Predefined struct for user
type InspectMediaQualityRequestParams struct {
	// Media file ID, i.e., the globally unique ID of a file in VOD assigned by the VOD backend after successful upload. This field can be obtained through the [video upload completion event notification](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) or [VOD Console](https://console.cloud.tencent.com/vod/media).
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Media quality inspect template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The priority of the task, the higher the numeric value, the higher the priority. The range is from -10 to 10, and not filled represents 0.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// The source context which is used to pass through the user request information. After `Procedure` is specified, the task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Used to identify duplicate requests. After you send a request, if any request with the same `SessionId` has already been sent in the last three days (72 hours), an error message will be returned. `SessionId` contains up to 50 characters. If this parameter is not carried or is an empty string, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Retain field, using when special purpose.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type InspectMediaQualityRequest struct {
	*tchttp.BaseRequest
	
	// Media file ID, i.e., the globally unique ID of a file in VOD assigned by the VOD backend after successful upload. This field can be obtained through the [video upload completion event notification](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) or [VOD Console](https://console.cloud.tencent.com/vod/media).
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Media quality inspect template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The priority of the task, the higher the numeric value, the higher the priority. The range is from -10 to 10, and not filled represents 0.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// The source context which is used to pass through the user request information. After `Procedure` is specified, the task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Used to identify duplicate requests. After you send a request, if any request with the same `SessionId` has already been sent in the last three days (72 hours), an error message will be returned. `SessionId` contains up to 50 characters. If this parameter is not carried or is an empty string, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Retain field, using when special purpose.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *InspectMediaQualityRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *InspectMediaQualityRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "TasksPriority")
	delete(f, "SessionContext")
	delete(f, "SessionId")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "InspectMediaQualityRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type InspectMediaQualityResponseParams struct {
	// Media quality inspection task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type InspectMediaQualityResponse struct {
	*tchttp.BaseResponse
	Response *InspectMediaQualityResponseParams `json:"Response"`
}

func (r *InspectMediaQualityResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *InspectMediaQualityResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type IpFilter struct {
	// IP black and white list configuration switch, value: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// IP blacklist and whitelist types: <li>whitelist: whitelist;</li> <li>blacklist: blacklist. </li>
	FilterType *string `json:"FilterType,omitnil,omitempty" name:"FilterType"`

	// IP black and white list, supports: IP in the form of X.X.X.X, or network segment in the form of /8, /16, /24; Can populate up to 50 whitelists or 50 blacklists.
	Filters []*string `json:"Filters,omitnil,omitempty" name:"Filters"`

	// IP blocklist/allowlist path-based configuration. This feature is only available to selected beta customers.
	FilterRules []*IpFilterPathRule `json:"FilterRules,omitnil,omitempty" name:"FilterRules"`
}

type IpFilterPathRule struct {
	// IP blacklist and whitelist types: <li>whitelist: whitelist;</li> <li>blacklist: blacklist. </li>
	FilterType *string `json:"FilterType,omitnil,omitempty" name:"FilterType"`

	// IP black and white list, supports: IP in the form of X.X.X.X, or network segment in the form of /8, /16, /24; Can populate up to 50 whitelists or 50 blacklists.
	Filters []*string `json:"Filters,omitnil,omitempty" name:"Filters"`

	// Rule type: <li>all: valid for all files;</li> <li>file: valid for specified file suffix;</li> <li>directory: valid for specified path;</li> <li>path: specified absolute The path takes effect. </li>
	RuleType *string `json:"RuleType,omitnil,omitempty" name:"RuleType"`

	// Matching content under the corresponding type of RuleType: <li>Fill in * when all is used;</li> <li>Fill in suffix name when file is used, such as jpg, txt;</li> <li>Fill in path when directory is used, such as /xxx/ test/;</li> <li>Fill in the absolute path when path is specified, such as /xxx/test.html. </li>
	RulePaths []*string `json:"RulePaths,omitnil,omitempty" name:"RulePaths"`
}

type Ipv6Access struct {
	// Domain name enables ipv6 access configuration switch. The value is: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type JitterConfigureInfo struct {
	// Video shake and ghost detection switch, optional values:
	// <li>ON: turn on;</li>
	// <li>OFF: turn off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type JitterConfigureInfoForUpdate struct {
	// Video shake and ghost detection switch, optional values:
	// <li>ON: turn on;</li>
	// <li>OFF: turn off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type JustInTimeTranscodeTemplate struct {
	// Template type.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Video parameter configuration.
	// Note: This field may return null, indicating that no valid value can be obtained.
	VideoConfigure *VideoConfigureInfo `json:"VideoConfigure,omitnil,omitempty" name:"VideoConfigure"`

	// Watermark parameter configuration. 
	// Note: This field may return null, indicating that no valid value can be obtained.
	WatermarkConfigure *WatermarkConfigureData `json:"WatermarkConfigure,omitnil,omitempty" name:"WatermarkConfigure"`
}

type LicenseUsageDataItem struct {
	// The start time (in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format)) of the data returned. For example, if the granularity is a day, `2018-12-01T00:00:00+08:00` indicates that the data is for the whole day of December 1, 2018.
	Time *string `json:"Time,omitnil,omitempty" name:"Time"`

	// The number of license requests.
	Count *int64 `json:"Count,omitnil,omitempty" name:"Count"`
}

type LiveRealTimeClipMediaSegmentInfo struct {
	// Start time of the cliped segment, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732)
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End time of the cliped segment, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732)
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`
}

// Predefined struct for user
type LiveRealTimeClipRequestParams struct {
	// The live stream code.
	StreamId *string `json:"StreamId,omitnil,omitempty" name:"StreamId"`

	// Start time of stream clipping in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End time of stream clipping in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://www.tencentcloud.com/document/product/266/33987) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Whether to clip persistently. 0: no, 1: yes. Default: no.
	IsPersistence *int64 `json:"IsPersistence,omitnil,omitempty" name:"IsPersistence"`

	// Storage expiration time of video generated by persistent clipping in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). `9999-12-31T23:59:59Z` means `never expire`. After the expiration, the media file and its related resources (such as transcoding results and image sprites) will be permanently deleted. This parameter will be valid only when `IsPersistence` is 1. By default, the video will never expire.
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// VOD task flow processing for video generated by persistent clipping. For more information, please see [Specifying Task Flow After Upload](https://intl.cloud.tencent.com/document/product/266/9759?from_cn_redirect=1). This parameter will be valid only when `IsPersistence` is 1.
	Procedure *string `json:"Procedure,omitnil,omitempty" name:"Procedure"`

	// The ID of the media file's category. You can use the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API to create a category and get the category ID.
	// <li>The default value is `0`, which means the "Other" category.</li>
	// This parameter is valid only if `IsPersistence` is `1`.
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The source context, which is used to pass through user request information. The [NewFileUpload](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) callback will return the value of this parameter. It can contain up to 250 characters and is valid only if `IsPersistence` is `1`.
	SourceContext *string `json:"SourceContext,omitnil,omitempty" name:"SourceContext"`

	// The session context, which is used to pass through user request information. If the `Procedure` parameter is specified, the [ProcedureStateChanged](https://intl.cloud.tencent.com/document/product/266/9636?from_cn_redirect=1) callback will return the value of this parameter. It can contain up to 1,000 characters and is valid only if `IsPersistence` is `1`.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Whether the metadata of clipped video needs to be returned. 0: no, 1: yes. Default value: no.
	MetaDataRequired *uint64 `json:"MetaDataRequired,omitnil,omitempty" name:"MetaDataRequired"`

	// Domain name used for live clipping. Time shifting must be enabled in LVB.
	Host *string `json:"Host,omitnil,omitempty" name:"Host"`

	// The information of the live stream to clip.
	// <li>The video clip is cut from the original stream by default.</li>
	// <li>If `Type` of `StreamInfo` is set to `Transcoding`, the video clip will be cut from the output stream of the transcoding template specified by `TemplateId`.</li>
	StreamInfo *LiveRealTimeClipStreamInfo `json:"StreamInfo,omitnil,omitempty" name:"StreamInfo"`

	// Reserved field. Do not enter a value for it.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type LiveRealTimeClipRequest struct {
	*tchttp.BaseRequest
	
	// The live stream code.
	StreamId *string `json:"StreamId,omitnil,omitempty" name:"StreamId"`

	// Start time of stream clipping in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// End time of stream clipping in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// <b>The VOD [application](https://www.tencentcloud.com/document/product/266/33987) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Whether to clip persistently. 0: no, 1: yes. Default: no.
	IsPersistence *int64 `json:"IsPersistence,omitnil,omitempty" name:"IsPersistence"`

	// Storage expiration time of video generated by persistent clipping in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). `9999-12-31T23:59:59Z` means `never expire`. After the expiration, the media file and its related resources (such as transcoding results and image sprites) will be permanently deleted. This parameter will be valid only when `IsPersistence` is 1. By default, the video will never expire.
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// VOD task flow processing for video generated by persistent clipping. For more information, please see [Specifying Task Flow After Upload](https://intl.cloud.tencent.com/document/product/266/9759?from_cn_redirect=1). This parameter will be valid only when `IsPersistence` is 1.
	Procedure *string `json:"Procedure,omitnil,omitempty" name:"Procedure"`

	// The ID of the media file's category. You can use the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API to create a category and get the category ID.
	// <li>The default value is `0`, which means the "Other" category.</li>
	// This parameter is valid only if `IsPersistence` is `1`.
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The source context, which is used to pass through user request information. The [NewFileUpload](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) callback will return the value of this parameter. It can contain up to 250 characters and is valid only if `IsPersistence` is `1`.
	SourceContext *string `json:"SourceContext,omitnil,omitempty" name:"SourceContext"`

	// The session context, which is used to pass through user request information. If the `Procedure` parameter is specified, the [ProcedureStateChanged](https://intl.cloud.tencent.com/document/product/266/9636?from_cn_redirect=1) callback will return the value of this parameter. It can contain up to 1,000 characters and is valid only if `IsPersistence` is `1`.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Whether the metadata of clipped video needs to be returned. 0: no, 1: yes. Default value: no.
	MetaDataRequired *uint64 `json:"MetaDataRequired,omitnil,omitempty" name:"MetaDataRequired"`

	// Domain name used for live clipping. Time shifting must be enabled in LVB.
	Host *string `json:"Host,omitnil,omitempty" name:"Host"`

	// The information of the live stream to clip.
	// <li>The video clip is cut from the original stream by default.</li>
	// <li>If `Type` of `StreamInfo` is set to `Transcoding`, the video clip will be cut from the output stream of the transcoding template specified by `TemplateId`.</li>
	StreamInfo *LiveRealTimeClipStreamInfo `json:"StreamInfo,omitnil,omitempty" name:"StreamInfo"`

	// Reserved field. Do not enter a value for it.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *LiveRealTimeClipRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *LiveRealTimeClipRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "StreamId")
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "SubAppId")
	delete(f, "IsPersistence")
	delete(f, "ExpireTime")
	delete(f, "Procedure")
	delete(f, "ClassId")
	delete(f, "SourceContext")
	delete(f, "SessionContext")
	delete(f, "MetaDataRequired")
	delete(f, "Host")
	delete(f, "StreamInfo")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "LiveRealTimeClipRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type LiveRealTimeClipResponseParams struct {
	// Playback URL of clipped video.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// Unique media file ID of video generated by persistent clipping.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Task flow ID of video generated by persistent clipping.
	// Note: this field may return null, indicating that no valid values can be obtained.
	VodTaskId *string `json:"VodTaskId,omitnil,omitempty" name:"VodTaskId"`

	// 
	// Note: This field may return null, indicating that no valid value can be obtained.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`

	// Cliped media segment info.
	SegmentSet []*LiveRealTimeClipMediaSegmentInfo `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type LiveRealTimeClipResponse struct {
	*tchttp.BaseResponse
	Response *LiveRealTimeClipResponseParams `json:"Response"`
}

func (r *LiveRealTimeClipResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *LiveRealTimeClipResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type LiveRealTimeClipStreamInfo struct {
	// The type of live stream to clip. Valid values:
	// <li>Original (<b>default</b>)</li>
	// <li>Transcoding</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The transcoding template ID.
	// <b>This is required if `Type` is `Transcoding`.</b>
	TemplateId *uint64 `json:"TemplateId,omitnil,omitempty" name:"TemplateId"`
}

type LiveRecordInfo struct {
	// Live recording stream ID.
	StreamId *string `json:"StreamId,omitnil,omitempty" name:"StreamId"`

	// Recording start time, use [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	RecordStartTime *string `json:"RecordStartTime,omitnil,omitempty" name:"RecordStartTime"`

	// Recording end time, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	RecordEndTime *string `json:"RecordEndTime,omitnil,omitempty" name:"RecordEndTime"`
}

type LowLightEnhanceInfo struct {
	// Whether to enable low-light enhancement. Valid values:
	// <li>`ON`</li>
	// <li>`OFF`</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The low-light enhancement type. This parameter is valid only if `Switch` is `ON`.
	// <li>`normal`</li>
	// Default value: `normal`.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

// Predefined struct for user
type ManageTaskRequestParams struct {
	// Video processing task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Operation type. Valid value:
	// <li>Abort: terminate a task. You can only terminate initiated tasks in `WAITING` status.</li>
	OperationType *string `json:"OperationType,omitnil,omitempty" name:"OperationType"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type ManageTaskRequest struct {
	*tchttp.BaseRequest
	
	// Video processing task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Operation type. Valid value:
	// <li>Abort: terminate a task. You can only terminate initiated tasks in `WAITING` status.</li>
	OperationType *string `json:"OperationType,omitnil,omitempty" name:"OperationType"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *ManageTaskRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ManageTaskRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "TaskId")
	delete(f, "OperationType")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ManageTaskRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ManageTaskResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ManageTaskResponse struct {
	*tchttp.BaseResponse
	Response *ManageTaskResponseParams `json:"Response"`
}

func (r *ManageTaskResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ManageTaskResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type MaxAge struct {
	// MaxAge rule
	MaxAgeRules []*MaxAgeRule `json:"MaxAgeRules,omitnil,omitempty" name:"MaxAgeRules"`
}

type MaxAgeRule struct {
	// Rule type: <li>all: valid for all files;</li> <li>file: valid for specified file suffix;</li> <li>directory: valid for specified path;</li> <li>path: specified absolute The path takes effect. </li>
	MaxAgeType *string `json:"MaxAgeType,omitnil,omitempty" name:"MaxAgeType"`

	// Matching content under the corresponding type of MaxAgeType: <li>Fill in * when all is used; </li> <li> Fill in suffix name when file is used, such as jpg, txt; </li> <li> Fill in path when directory is used, such as /xxx/ test/;</li> <li>Fill in the absolute path when path is specified, such as /xxx/test.html. </li> <b>Note: all rules cannot be deleted. They follow the origin site by default and can be modified. </b>
	MaxAgeContents []*string `json:"MaxAgeContents,omitnil,omitempty" name:"MaxAgeContents"`

	// MaxAge time setting, unit second; <b>Note: The time is 0, which means no caching. </b>
	MaxAgeTime *uint64 `json:"MaxAgeTime,omitnil,omitempty" name:"MaxAgeTime"`

	// Whether to follow the origin server. Valid values: on and off. If it's on, MaxAgeTime is ignored.
	FollowOrigin *string `json:"FollowOrigin,omitnil,omitempty" name:"FollowOrigin"`
}

type MediaAdaptiveDynamicStreamingInfo struct {
	// Information array of adaptive bitrate streaming.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AdaptiveDynamicStreamingSet []*AdaptiveDynamicStreamingInfoItem `json:"AdaptiveDynamicStreamingSet,omitnil,omitempty" name:"AdaptiveDynamicStreamingSet"`
}

type MediaAiAnalysisClassificationItem struct {
	// Name of intelligently generated category.
	Classification *string `json:"Classification,omitnil,omitempty" name:"Classification"`

	// Confidence of intelligently generated category between 0 and 100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`
}

type MediaAiAnalysisCoverItem struct {
	// Address of intelligently generated cover.
	CoverUrl *string `json:"CoverUrl,omitnil,omitempty" name:"CoverUrl"`

	// Confidence of intelligently generated cover between 0 and 100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`
}

type MediaAiAnalysisFrameTagItem struct {
	// Frame-specific tag name.
	Tag *string `json:"Tag,omitnil,omitempty" name:"Tag"`

	// Category list of frame-specific tag names. `CategorySet.N` indicates the N+1-level category.
	// For example, if the `Tag` is "tower", and `CategorySet` contains two elements (`CategorySet.0` is "scene", and `CategorySet.1` is "architecture"), then the frame-specific tag is "tower", the first-level category is "scene", and the second-level category is "architecture".
	CategorySet []*string `json:"CategorySet,omitnil,omitempty" name:"CategorySet"`

	// Confidence of intelligently generated frame-specific tag between 0 and 100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`
}

type MediaAiAnalysisFrameTagSegmentItem struct {
	// Start time offset of frame-specific tag.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of frame-specific tag.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// List of tags in time period.
	TagSet []*MediaAiAnalysisFrameTagItem `json:"TagSet,omitnil,omitempty" name:"TagSet"`
}

type MediaAiAnalysisHighlightItem struct {
	// Address of an intelligently generated highlight.
	HighlightUrl *string `json:"HighlightUrl,omitnil,omitempty" name:"HighlightUrl"`

	// Address of an intelligently generated highlight cover.
	CovImgUrl *string `json:"CovImgUrl,omitnil,omitempty" name:"CovImgUrl"`

	// Confidence of an intelligently generated highlight between 0 and 100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Duration of an intelligently generated highlight.
	Duration *float64 `json:"Duration,omitnil,omitempty" name:"Duration"`

	// List of intelligently generated highlight subsegments, which together form a highlight.
	SegmentSet []*HighlightSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`
}

type MediaAiAnalysisTagItem struct {
	// Tag name.
	Tag *string `json:"Tag,omitnil,omitempty" name:"Tag"`

	// Confidence of tag between 0 and 100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`
}

type MediaAnimatedGraphicsInfo struct {
	// Result information of animated image generating task
	// Note: this field may return null, indicating that no valid values can be obtained.
	AnimatedGraphicsSet []*MediaAnimatedGraphicsItem `json:"AnimatedGraphicsSet,omitnil,omitempty" name:"AnimatedGraphicsSet"`
}

type MediaAnimatedGraphicsItem struct {
	// Address of generated animated image.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// Animated image generating template ID. For more information, please see [Animated Image Generating Parameter Template](https://intl.cloud.tencent.com/document/product/266/33481?from_cn_redirect=1#.3Cspan-id-.3D-.22zdt.22.3E.3C.2Fspan.3E.E8.BD.AC.E5.8A.A8.E5.9B.BE.E6.A8.A1.E6.9D.BF).
	// Note: this field may return null, indicating that no valid values can be obtained.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Animated image format, such as gif.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// Height of animated image in px.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Height *int64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Width of animated image in px.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Width *int64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Bitrate of animated image in bps.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Bitrate *int64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// Size of animated image in bytes.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Size *int64 `json:"Size,omitnil,omitempty" name:"Size"`

	// MD5 value of an animated image.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Md5 *string `json:"Md5,omitnil,omitempty" name:"Md5"`

	// Start time offset of animated image in video in seconds.
	// Note: this field may return null, indicating that no valid values can be obtained.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of animated image in video in seconds.
	// Note: this field may return null, indicating that no valid values can be obtained.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`
}

type MediaAudioStreamItem struct {
	// Bitrate of audio stream in bps.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Bitrate *int64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// Sample rate of audio stream in Hz.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SamplingRate *int64 `json:"SamplingRate,omitnil,omitempty" name:"SamplingRate"`

	// Audio stream encoder, such as aac.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Codec *string `json:"Codec,omitnil,omitempty" name:"Codec"`
}

type MediaBasicInfo struct {
	// Media filename.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Media file description.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	// Creation time of media file in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	// Note: this field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last update time of media file (by an operation that triggers updating of media file information such as modifying video attributes or initiating video processing) in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	// Note: this field may return null, indicating that no valid values can be obtained.
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// Expiration time of media file in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). After the expiration, the media file and its related resources (such as transcoding results and image sprites) will be permanently deleted. `9999-12-31T23:59:59Z` means "never expire".
	// Note: this field may return null, indicating that no valid values can be obtained.
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// Category ID of media file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// Category name of media file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ClassName *string `json:"ClassName,omitnil,omitempty" name:"ClassName"`

	// Category path to media file separated by "-", such as "new first-level category - new second-level category".
	// Note: this field may return null, indicating that no valid values can be obtained.
	ClassPath *string `json:"ClassPath,omitnil,omitempty" name:"ClassPath"`

	// Cover image address of media file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	CoverUrl *string `json:"CoverUrl,omitnil,omitempty" name:"CoverUrl"`

	// Media file container, such as mp4 and flv.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// URL of source media file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	MediaUrl *string `json:"MediaUrl,omitnil,omitempty" name:"MediaUrl"`

	// Source information of media file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SourceInfo *MediaSourceData `json:"SourceInfo,omitnil,omitempty" name:"SourceInfo"`

	// Regions where media files are stored, such as `ap-chongqing`. For more regions, see [Storage Region](https://intl.cloud.tencent.com/document/product/266/9760).
	StorageRegion *string `json:"StorageRegion,omitnil,omitempty" name:"StorageRegion"`

	// Tag information of media file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TagSet []*string `json:"TagSet,omitnil,omitempty" name:"TagSet"`

	// Unique ID of an LVB recording file.
	Vid *string `json:"Vid,omitnil,omitempty" name:"Vid"`

	// File type:
	// <li>Video: video file</li>
	// <li>Audio: audio file</li>
	// <li>Image: image file</li>
	Category *string `json:"Category,omitnil,omitempty" name:"Category"`

	// File status: Normal: normal, Forbidden: banned.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Storage class of a media file:
	// <li>STANDARD</li>
	// <li>STANDARD_IA</li>
	// <li>ARCHIVE</li>
	// <li>DEEP_ARCHIVE</li>
	StorageClass *string `json:"StorageClass,omitnil,omitempty" name:"StorageClass"`
}

type MediaCastEvent struct {

	CastId *string `json:"CastId,omitnil,omitempty" name:"CastId"`


	Status *string `json:"Status,omitnil,omitempty" name:"Status"`
}

type MediaClassInfo struct {
	// The category ID.
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// Parent category ID, which is -1 for a first-level category.
	ParentId *int64 `json:"ParentId,omitnil,omitempty" name:"ParentId"`

	// The category name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Category level. 0 for first-level category, up to 3, i.e., up to 4 levels of categories are allowed.
	Level *uint64 `json:"Level,omitnil,omitempty" name:"Level"`

	// The IDs of the immediate subcategories of the current category.
	SubClassIdSet []*int64 `json:"SubClassIdSet,omitnil,omitempty" name:"SubClassIdSet"`

	// The category name. This parameter is not recommended. Please use `Name` instead.
	ClassName *string `json:"ClassName,omitnil,omitempty" name:"ClassName"`
}

type MediaContentReviewAsrTextSegmentItem struct {
	// Start time offset of suspected segment in seconds.
	// Note: this field may return null, indicating that no valid values can be obtained.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of suspected segment in seconds.
	// Note: this field may return null, indicating that no valid values can be obtained.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Confidence of suspected segment.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Processing suggestion for the detected suspicious content. Valid values:
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// List of suspected keywords.
	// Note: this field may return null, indicating that no valid values can be obtained.
	KeywordSet []*string `json:"KeywordSet,omitnil,omitempty" name:"KeywordSet"`
}

type MediaContentReviewOcrTextSegmentItem struct {
	// Start time offset of suspected segment in seconds.
	// Note: this field may return null, indicating that no valid values can be obtained.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of suspected segment in seconds.
	// Note: this field may return null, indicating that no valid values can be obtained.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Confidence of suspected segment.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Processing suggestion for the detected suspicious content. Valid values:
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// List of suspected keywords.
	// Note: this field may return null, indicating that no valid values can be obtained.
	KeywordSet []*string `json:"KeywordSet,omitnil,omitempty" name:"KeywordSet"`

	// Zone coordinates (at the pixel level) of suspected text: [x1, y1, x2, y2], i.e., the coordinates of the top-left and bottom-right corners.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AreaCoordSet []*int64 `json:"AreaCoordSet,omitnil,omitempty" name:"AreaCoordSet"`

	// URL of a suspected image (which will not be permanently stored
	// and will be deleted after `PicUrlExpireTime`).
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// Expiration time of suspected image URL in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	PicUrlExpireTime *string `json:"PicUrlExpireTime,omitnil,omitempty" name:"PicUrlExpireTime"`
}

type MediaContentReviewPoliticalSegmentItem struct {
	// Start time offset of a suspected segment in seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of a suspected segment in seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Confidence score for the detected politically sensitive content
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Processing suggestion for the detected politically sensitive content. Valid values:
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// Name of the politically sensitive content or banned images
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Labels for the detected politically sensitive content. The relationship between the values of this parameter and those of the `LabelSet` parameter in [PoliticalImgReviewTemplateInfo](https://intl.cloud.tencent.com/document/api/266/31773?from_cn_redirect=1#PoliticalImgReviewTemplateInfo) is as follows:
	// violation_photo:
	// <li>`violation_photo`: banned images</li>
	// politician:
	// <li>`nation_politician`: state leader of China</li>
	// <li>`province_politician`: provincial officials</li>
	// <li>`bureau_politician`: bureau-level officials</li>
	// <li>`county_politician`: county-level officials</li>
	// <li>`rural_politician`: township-level officials</li>
	// <li>`sensitive_politician`: politically sensitive people</li>
	// <li>`foreign_politician`: state leaders of other countries</li>
	// entertainment:
	// <li>`sensitive_entertainment`: banned people in the entertainment industry</li>
	// sport:
	// <li>`sensitive_sport`: banned sports celebrities</li>
	// entrepreneur:
	// <li>`sensitive_entrepreneur`: banned businesspeople</li>
	// scholar:
	// <li>sensitive_scholar: banned scholars</li>
	// celebrity:
	// <li>sensitive_celebrity: banned celebrities</li>
	// <li>historical_celebrity: banned historical figures</li>
	// military:
	// <li>sensitive_military: banned people in military</li>
	Label *string `json:"Label,omitnil,omitempty" name:"Label"`

	// URL of a suspected image (which will not be permanently stored
	//  and will be deleted after `PicUrlExpireTime`).
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// Coordinates (pixel) of the detected politically sensitive content or banned icons. The format is [x1, y1, x2, y2], which indicates the coordinates of the top-left and bottom-right corners.
	AreaCoordSet []*int64 `json:"AreaCoordSet,omitnil,omitempty" name:"AreaCoordSet"`

	// This field has been disused. Please use `PicUrlExpireTime`.
	PicUrlExpireTimeStamp *int64 `json:"PicUrlExpireTimeStamp,omitnil,omitempty" name:"PicUrlExpireTimeStamp"`

	// Expiration time of suspected image URL in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	PicUrlExpireTime *string `json:"PicUrlExpireTime,omitnil,omitempty" name:"PicUrlExpireTime"`
}

type MediaContentReviewSegmentItem struct {
	// Start time offset of a suspected segment in seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of a suspected segment in seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Confidence score for the detected pornographic content
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// Label for the detected pornographic content
	Label *string `json:"Label,omitnil,omitempty" name:"Label"`

	// Processing suggestion for the detected pornographic content. Valid values:
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// URL of a suspected image (which will not be permanently stored
	//  and will be deleted after `PicUrlExpireTime`).
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// This field has been disused. Please use `PicUrlExpireTime`.
	PicUrlExpireTimeStamp *int64 `json:"PicUrlExpireTimeStamp,omitnil,omitempty" name:"PicUrlExpireTimeStamp"`

	// Expiration time of suspected image URL in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	PicUrlExpireTime *string `json:"PicUrlExpireTime,omitnil,omitempty" name:"PicUrlExpireTime"`
}

type MediaDeleteItem struct {
	// The specified portion to be deleted. The parameter is invalid if this field is not filled in. Optional values u200bare:
	// <li>OriginalFiles (Delete the original file. After deletion, video processing operations such as transcoding cannot be initiated);</li>
	// <li>TranscodeFiles (delete transcoded files);</li>
	// <li>AdaptiveDynamicStreamingFiles (Delete the adaptive bitrate streaming files);</li>
	// <font color=red>Notice:</font> <li>When the value is OriginalFiles, the cover file carried when uploading the file will be deleted;</li>
	// <li>When the value is TranscodeFiles, cover files generated by media processing will be deleted.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// ID of the template for which to delete the videos of the type specified by the `Type` parameter. For the template definition, please see [Transcoding Template](https://intl.cloud.tencent.com/document/product/266/33478?from_cn_redirect=1#.3Cspan-id-.3D-.22zm.22-.3E.3C.2Fspan.3E.E8.BD.AC.E7.A0.81.E6.A8.A1.E6.9D.BF).
	// Default value: 0, which indicates to delete all videos of the type specified by the `Type` parameter.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type MediaImageSpriteInfo struct {
	// Information set of image sprites with specified specifications. Each element represents a set of image sprites with the same specification.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ImageSpriteSet []*MediaImageSpriteItem `json:"ImageSpriteSet,omitnil,omitempty" name:"ImageSpriteSet"`
}

type MediaImageSpriteItem struct {
	// Image sprite specification. For more information, please see [Image Sprite Parameter Template](https://intl.cloud.tencent.com/document/product/266/33480?from_cn_redirect=1#.E9.9B.AA.E7.A2.A7.E5.9B.BE.E6.A8.A1.E6.9D.BF).
	// Note: this field may return null, indicating that no valid values can be obtained.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Subimage height of image sprite.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Height *int64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Subimage width of image sprite.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Width *int64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Total number of subimages in each image sprite.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Address of each image sprite.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ImageUrlSet []*string `json:"ImageUrlSet,omitnil,omitempty" name:"ImageUrlSet"`

	// Address of WebVtt file for the position-time relationship among subimages in an image sprite. The WebVtt file indicates the corresponding time points of each subimage and their coordinates in the image sprite, which is typically used by the player for implementing preview.
	// Note: this field may return null, indicating that no valid values can be obtained.
	WebVttUrl *string `json:"WebVttUrl,omitnil,omitempty" name:"WebVttUrl"`
}

type MediaInfo struct {
	// Basic information, such as video name, category, playback address, and cover image.
	// Note: this field may return null, indicating that no valid values can be obtained.
	BasicInfo *MediaBasicInfo `json:"BasicInfo,omitnil,omitempty" name:"BasicInfo"`

	// Metadata, such as size, duration, video stream information, and audio stream information.
	// Note: this field may return null, indicating that no valid values can be obtained.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`

	// Result information of transcoding, such as address, specification, bitrate, and resolution of the videos in various bitrates generated by transcoding a video.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TranscodeInfo *MediaTranscodeInfo `json:"TranscodeInfo,omitnil,omitempty" name:"TranscodeInfo"`

	// Result information of animated image generating, i.e., relevant information of an animated image (such as .gif) generated from a video.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AnimatedGraphicsInfo *MediaAnimatedGraphicsInfo `json:"AnimatedGraphicsInfo,omitnil,omitempty" name:"AnimatedGraphicsInfo"`

	// Sampled screenshot information, i.e., relevant information of a sampled screenshot generated from a video.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SampleSnapshotInfo *MediaSampleSnapshotInfo `json:"SampleSnapshotInfo,omitnil,omitempty" name:"SampleSnapshotInfo"`

	// Image sprite information, i.e., relevant information of image sprite generated from video.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ImageSpriteInfo *MediaImageSpriteInfo `json:"ImageSpriteInfo,omitnil,omitempty" name:"ImageSpriteInfo"`

	// Time point screenshot information, i.e., information of each time point screenshot generated from a video.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SnapshotByTimeOffsetInfo *MediaSnapshotByTimeOffsetInfo `json:"SnapshotByTimeOffsetInfo,omitnil,omitempty" name:"SnapshotByTimeOffsetInfo"`

	// Timestamp information, i.e., information of each timestamp set for a video.
	// Note: this field may return null, indicating that no valid values can be obtained.
	KeyFrameDescInfo *MediaKeyFrameDescInfo `json:"KeyFrameDescInfo,omitnil,omitempty" name:"KeyFrameDescInfo"`

	// Adaptive bitrate streaming information, such as specification, encryption type, and container format.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AdaptiveDynamicStreamingInfo *MediaAdaptiveDynamicStreamingInfo `json:"AdaptiveDynamicStreamingInfo,omitnil,omitempty" name:"AdaptiveDynamicStreamingInfo"`

	// WeChat Mini Program audit information.
	// Note: this field may return null, indicating that no valid values can be obtained.
	MiniProgramReviewInfo *MediaMiniProgramReviewInfo `json:"MiniProgramReviewInfo,omitnil,omitempty" name:"MiniProgramReviewInfo"`

	// Subtitle information
	// Note: this field may return `null`, indicating that no valid value is obtained.
	SubtitleInfo *MediaSubtitleInfo `json:"SubtitleInfo,omitnil,omitempty" name:"SubtitleInfo"`

	// Unique ID of media file.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Moderation details.
	// Note: This field may return null, indicating that no valid values can be obtained.
	ReviewInfo *FileReviewInfo `json:"ReviewInfo,omitnil,omitempty" name:"ReviewInfo"`
}

type MediaInputInfo struct {
	// Video URL.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// Video name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Custom video ID.
	Id *string `json:"Id,omitnil,omitempty" name:"Id"`
}

type MediaKeyFrameDescInfo struct {
	// Information array of video timestamps.
	// Note: this field may return null, indicating that no valid values can be obtained.
	KeyFrameDescSet []*MediaKeyFrameDescItem `json:"KeyFrameDescSet,omitnil,omitempty" name:"KeyFrameDescSet"`
}

type MediaKeyFrameDescItem struct {
	// Offset time of video timestamp in seconds.
	TimeOffset *float64 `json:"TimeOffset,omitnil,omitempty" name:"TimeOffset"`

	// Content string of timestamp containing 1-128 characters.
	Content *string `json:"Content,omitnil,omitempty" name:"Content"`
}

type MediaMetaData struct {
	// Size of uploaded media file in bytes (which is the sum of size of m3u8 and ts files if the video is in HLS format).
	// Note: this field may return null, indicating that no valid values can be obtained.
	Size *int64 `json:"Size,omitnil,omitempty" name:"Size"`

	// Container, such as m4a and mp4.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// Sum of the average bitrate of a video stream and that of an audio stream in bps.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Bitrate *int64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// Maximum value of the height of a video stream in px.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Height *int64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Maximum value of the width of a video stream in px.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Width *int64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Video duration in seconds.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Duration *float64 `json:"Duration,omitnil,omitempty" name:"Duration"`

	// Selected angle during video recording in degrees.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Rotate *int64 `json:"Rotate,omitnil,omitempty" name:"Rotate"`

	// Video stream information.
	// Note: this field may return null, indicating that no valid values can be obtained.
	VideoStreamSet []*MediaVideoStreamItem `json:"VideoStreamSet,omitnil,omitempty" name:"VideoStreamSet"`

	// Audio stream information.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AudioStreamSet []*MediaAudioStreamItem `json:"AudioStreamSet,omitnil,omitempty" name:"AudioStreamSet"`

	// Video duration in seconds.
	// Note: this field may return null, indicating that no valid values can be obtained.
	VideoDuration *float64 `json:"VideoDuration,omitnil,omitempty" name:"VideoDuration"`

	// Audio duration in seconds.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AudioDuration *float64 `json:"AudioDuration,omitnil,omitempty" name:"AudioDuration"`

	// The MD5 hash of the file.
	// <li><font color=red>Note</font>: To get the MD5 hash of a file, call the `DescribeFileAttributes` API. The information will be returned after the task is completed.</li>
	Md5 *string `json:"Md5,omitnil,omitempty" name:"Md5"`
}

type MediaMiniProgramReviewElem struct {
	// Audit type. 
	// <li>Porn: porn image,</li>
	// <li>Porn.Ocr: porn text,</li>
	// <li>Porn.Asr: porn speech,</li>
	// <li>Terrorism: terrorism image,</li>
	// <li>Political: politically sensitive image,</li>
	// <li>Political.Ocr: politically sensitive text</li>
	// <li>Political.Asr: politically sensitive speech</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Audit suggestion.
	// <li>pass: normal,</li>
	// <li>block: violating,</li>
	// <li>review: suspected of violation.</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// Confidence of audit result between 0 and 100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`
}

type MediaMiniProgramReviewInfo struct {
	// Audit information list.
	MiniProgramReviewList []*MediaMiniProgramReviewInfoItem `json:"MiniProgramReviewList,omitnil,omitempty" name:"MiniProgramReviewList"`
}

type MediaMiniProgramReviewInfoItem struct {
	// Template ID, which is the ID of the transcoding template corresponding to the video published on WeChat Mini Program. 0 represents the source video.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Video metadata.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`

	// Video playback address for WeChat Mini Program audit
	// Note: this field may return null, indicating that no valid values can be obtained.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// Status of video release on WeChat Mini Program
	// <li>Pass: succeeded.</li>
	// <li>Rejected: rejected.</li>
	ReviewResult *string `json:"ReviewResult,omitnil,omitempty" name:"ReviewResult"`

	// WeChat Mini Program audit element.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ReviewSummary []*MediaMiniProgramReviewElem `json:"ReviewSummary,omitnil,omitempty" name:"ReviewSummary"`
}

type MediaOutputInfo struct {
	// Region of the bucket where an output file is stored, such as ap-guangzhou.
	Region *string `json:"Region,omitnil,omitempty" name:"Region"`

	// Bucket of output file.
	Bucket *string `json:"Bucket,omitnil,omitempty" name:"Bucket"`

	// Path to output file, which must end in "/".
	Dir *string `json:"Dir,omitnil,omitempty" name:"Dir"`
}

type MediaProcessTaskAdaptiveDynamicStreamingResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// The progress of the adaptive bitrate task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// Input of adaptive bitrate streaming task.
	Input *AdaptiveDynamicStreamingTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of adaptive bitrate streaming task.
	Output *AdaptiveDynamicStreamingInfoItem `json:"Output,omitnil,omitempty" name:"Output"`

	// The time when the conversion to adaptive code stream task starts, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the adaptive code stream conversion task is completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type MediaProcessTaskAnimatedGraphicResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input of animated image generating task.
	Input *AnimatedGraphicTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of animated image generating task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *MediaAnimatedGraphicsItem `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an animated image generation task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the rotation graph task started to execute, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the rotation graph task is completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type MediaProcessTaskCoverBySnapshotResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input of cover generating task.
	Input *CoverBySnapshotTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of cover generating task.
	Output *CoverBySnapshotTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of a video screenshot (thumbnail) task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the screenshot making cover task started, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// Screenshot the time when the cover task was completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type MediaProcessTaskImageSpriteResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input of image sprite generating task.
	Input *ImageSpriteTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of image sprite generating task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *MediaImageSpriteItem `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of an image sprite generation task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the sprite cut task started to be executed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the sprite cut task is completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type MediaProcessTaskInput struct {
	// List of transcoding tasks.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TranscodeTaskSet []*TranscodeTaskInput `json:"TranscodeTaskSet,omitnil,omitempty" name:"TranscodeTaskSet"`

	// List of animated image generating tasks.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AnimatedGraphicTaskSet []*AnimatedGraphicTaskInput `json:"AnimatedGraphicTaskSet,omitnil,omitempty" name:"AnimatedGraphicTaskSet"`

	// List of time point screencapturing tasks.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SnapshotByTimeOffsetTaskSet []*SnapshotByTimeOffsetTaskInput `json:"SnapshotByTimeOffsetTaskSet,omitnil,omitempty" name:"SnapshotByTimeOffsetTaskSet"`

	// List of sampled screencapturing tasks.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SampleSnapshotTaskSet []*SampleSnapshotTaskInput `json:"SampleSnapshotTaskSet,omitnil,omitempty" name:"SampleSnapshotTaskSet"`

	// List of image sprite generating tasks.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ImageSpriteTaskSet []*ImageSpriteTaskInput `json:"ImageSpriteTaskSet,omitnil,omitempty" name:"ImageSpriteTaskSet"`

	// List of cover generating tasks.
	// Note: this field may return null, indicating that no valid values can be obtained.
	CoverBySnapshotTaskSet []*CoverBySnapshotTaskInput `json:"CoverBySnapshotTaskSet,omitnil,omitempty" name:"CoverBySnapshotTaskSet"`

	// List of adaptive bitrate streaming tasks.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AdaptiveDynamicStreamingTaskSet []*AdaptiveDynamicStreamingTaskInput `json:"AdaptiveDynamicStreamingTaskSet,omitnil,omitempty" name:"AdaptiveDynamicStreamingTaskSet"`
}

type MediaProcessTaskResult struct {
	// Task type. Valid values:
	// <li>Transcode: transcoding</li>
	// <li>AnimatedGraphics: animated image generating</li>
	// <li>SnapshotByTimeOffset: time point screencapturing</li>
	// <li>SampleSnapshot: sampled screencapturing</li>
	// <li>ImageSprites: image sprite generating</li>
	// <li>CoverBySnapshot: Screencapturing for cover image</li>
	// <li>AdaptiveDynamicStreaming: adaptive bitrate streaming</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Query result of transcoding task, which is valid when task type is `Transcode`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TranscodeTask *MediaProcessTaskTranscodeResult `json:"TranscodeTask,omitnil,omitempty" name:"TranscodeTask"`

	// Query result of animated image generating task, which is valid when task type is `AnimatedGraphics`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AnimatedGraphicTask *MediaProcessTaskAnimatedGraphicResult `json:"AnimatedGraphicTask,omitnil,omitempty" name:"AnimatedGraphicTask"`

	// Query result of time point screencapturing task, which is valid when task type is `SnapshotByTimeOffset`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SnapshotByTimeOffsetTask *MediaProcessTaskSnapshotByTimeOffsetResult `json:"SnapshotByTimeOffsetTask,omitnil,omitempty" name:"SnapshotByTimeOffsetTask"`

	// Query result of sampled screencapturing task, which is valid when task type is `SampleSnapshot`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SampleSnapshotTask *MediaProcessTaskSampleSnapshotResult `json:"SampleSnapshotTask,omitnil,omitempty" name:"SampleSnapshotTask"`

	// Query result of image sprite generating task, which is valid when task type is `ImageSprite`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ImageSpriteTask *MediaProcessTaskImageSpriteResult `json:"ImageSpriteTask,omitnil,omitempty" name:"ImageSpriteTask"`

	// Query result of cover generating task, which is valid if task type is `CoverBySnapshot`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	CoverBySnapshotTask *MediaProcessTaskCoverBySnapshotResult `json:"CoverBySnapshotTask,omitnil,omitempty" name:"CoverBySnapshotTask"`

	// Query result of adaptive bitrate streaming, which is valid if task type is `AdaptiveDynamicStreaming`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AdaptiveDynamicStreamingTask *MediaProcessTaskAdaptiveDynamicStreamingResult `json:"AdaptiveDynamicStreamingTask,omitnil,omitempty" name:"AdaptiveDynamicStreamingTask"`
}

type MediaProcessTaskSampleSnapshotResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input of sampled screencapturing task.
	Input *SampleSnapshotTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of sampled screencapturing task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *MediaSampleSnapshotItem `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of a sampled screenshot task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the sampling screenshot task starts execution is in [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the sampling screenshot task is completed uses [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type MediaProcessTaskSnapshotByTimeOffsetResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input of time point screencapturing task.
	Input *SnapshotByTimeOffsetTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of time point screencapturing task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *MediaSnapshotByTimeOffsetItem `json:"Output,omitnil,omitempty" name:"Output"`

	// The progress of a time point screenshot task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The time when the point-in-time screenshot task started to be executed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The time when the point-in-time screenshot task is completed, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type MediaProcessTaskTranscodeResult struct {
	// Task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You’re not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Input of transcoding task.
	Input *TranscodeTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of transcoding task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Output *MediaTranscodeItem `json:"Output,omitnil,omitempty" name:"Output"`

	// Transcoding progress. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// Transcoding task start time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732)
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// Transcoding task end time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732)
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type MediaSampleSnapshotInfo struct {
	// Information set of sampled screenshots with the specified specifications. Each element represents a set of sampled screenshots with the same specification.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SampleSnapshotSet []*MediaSampleSnapshotItem `json:"SampleSnapshotSet,omitnil,omitempty" name:"SampleSnapshotSet"`
}

type MediaSampleSnapshotItem struct {
	// Sampled screenshot specification ID. For more information, please see [Sampled Screencapturing Parameter Template](https://intl.cloud.tencent.com/document/product/266/33480?from_cn_redirect=1#.E9.87.87.E6.A0.B7.E6.88.AA.E5.9B.BE.E6.A8.A1.E6.9D.BF).
	// Note: this field may return null, indicating that no valid values can be obtained.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Sample type. Valid values:
	// <li>Percent: samples at a specified percentage interval.</li>
	// <li>Time: samples at a specified time interval.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	SampleType *string `json:"SampleType,omitnil,omitempty" name:"SampleType"`

	// Sampling interval
	// <li>If `SampleType` is `Percent`, this value means taking a screenshot at an interval of the specified percentage.</li>
	// <li>If `SampleType` is `Time`, this value means taking a screenshot at an interval of the specified time (in seconds). The first screenshot is always the first video frame.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	Interval *int64 `json:"Interval,omitnil,omitempty" name:"Interval"`

	// List of URLs of generated screenshots.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ImageUrlSet []*string `json:"ImageUrlSet,omitnil,omitempty" name:"ImageUrlSet"`

	// List of watermarking template IDs if the screenshots are watermarked.
	// Note: this field may return null, indicating that no valid values can be obtained.
	WaterMarkDefinition []*int64 `json:"WaterMarkDefinition,omitnil,omitempty" name:"WaterMarkDefinition"`
}

type MediaSnapshotByTimeOffsetInfo struct {
	// Information set of time point screenshots with a specified specification. Currently, there can be only one set of screenshots for each specification.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SnapshotByTimeOffsetSet []*MediaSnapshotByTimeOffsetItem `json:"SnapshotByTimeOffsetSet,omitnil,omitempty" name:"SnapshotByTimeOffsetSet"`
}

type MediaSnapshotByTimeOffsetItem struct {
	// Specification of a time point screenshot. For more information, please see [Parameter Template for Time Point Screencapturing](https://intl.cloud.tencent.com/document/product/266/33480?from_cn_redirect=1#.E6.97.B6.E9.97.B4.E7.82.B9.E6.88.AA.E5.9B.BE.E6.A8.A1.E6.9D.BF).
	// Note: this field may return null, indicating that no valid values can be obtained.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Information set of screenshots of the same specification. Each element represents a screenshot.
	// Note: this field may return null, indicating that no valid values can be obtained.
	PicInfoSet []*MediaSnapshotByTimePicInfoItem `json:"PicInfoSet,omitnil,omitempty" name:"PicInfoSet"`
}

type MediaSnapshotByTimePicInfoItem struct {
	// Time offset corresponding to the screenshot in the video in <font color=red>milliseconds</font>.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TimeOffset *float64 `json:"TimeOffset,omitnil,omitempty" name:"TimeOffset"`

	// Screenshot URL.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// List of watermarking template IDs if the screenshots are watermarked.
	// Note: this field may return null, indicating that no valid values can be obtained.
	WaterMarkDefinition []*int64 `json:"WaterMarkDefinition,omitnil,omitempty" name:"WaterMarkDefinition"`
}

type MediaSourceData struct {
	// Media files source category: <li>Record: From recording. Such as live streaming recording, live time shift recording, etc.</li> <li>Upload: From upload. Such as pull upload, upload from server, client UGC upload, etc.</li> <li>VideoProcessing: From video processing. Such as video splicing, video editing, etc.</li> <li>TrtcRecord: From TRTC accompanying recording.</li> <li>WebPageRecord: From panoramic recording.</li> <li>Unknown: Unknown source.</li>
	SourceType *string `json:"SourceType,omitnil,omitempty" name:"SourceType"`

	// User-transparent transmission field when creating a file.
	SourceContext *string `json:"SourceContext,omitnil,omitempty" name:"SourceContext"`

	// Live streaming recording information, valid when the file source is Record.
	LiveRecordInfo *LiveRecordInfo `json:"LiveRecordInfo,omitnil,omitempty" name:"LiveRecordInfo"`

	// TRTC recording information, valid when the file source is TrtcRecord.
	TrtcRecordInfo *TrtcRecordInfo `json:"TrtcRecordInfo,omitnil,omitempty" name:"TrtcRecordInfo"`

	// Panoramic recording information, valid when the file source is WebPageRecord.
	WebPageRecordInfo *WebPageRecordInfo `json:"WebPageRecordInfo,omitnil,omitempty" name:"WebPageRecordInfo"`
}

type MediaSubStreamInfoItem struct {
	// The stream type. Valid values:
	// <li>`audio`: Audio only</li>
	// <li>`video`: Video (may include audio)</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The video width (px) if `Type` is `video`.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// The video height (px) if `Type` is `video`.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// The file size (bytes).
	// <font color=red>Note:</font>For adaptive bitrate streaming files generated before 2023-02-09T16:00:00Z, the value of this parameter is `0`.
	Size *uint64 `json:"Size,omitnil,omitempty" name:"Size"`
}

type MediaSubtitleInfo struct {
	// Subtitle information list
	SubtitleSet []*MediaSubtitleItem `json:"SubtitleSet,omitnil,omitempty" name:"SubtitleSet"`
}

type MediaSubtitleInput struct {
	// Subtitle name. Length limit: 64 characters
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Subtitle language. Common values:
	// <li>`zh`: Chinese</li>
	// <li>`en`: English</li>
	// <li>`ja`: Japanese</li>
	// <li>`ko`: Korean</li>
	// <li>`vi`: Vietnamese</li>
	// <li>`ms`: Malay</li>
	// <li>`th`: Thai</li>
	// <li>`pt`: Portuguese</li>
	// <li>`tr`: Turkish</li>
	// <li>`ar`: Arabic</li>
	// <li>`es`: Spanish</li>
	// <li>`hi`: Hindi</li>
	// <li>`fr`: French</li>For other valid values, see [RFC 5646](https://tools.ietf.org/html/rfc5646).
	Language *string `json:"Language,omitnil,omitempty" name:"Language"`

	// Subtitle format. Valid value:
	// <li>vtt</li>
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Subtitle content, which is [Base64-encoded](https://tools.ietf.org/html/rfc4648) strings
	Content *string `json:"Content,omitnil,omitempty" name:"Content"`

	// The subtitle ID. It can be up to 16 characters long, can contain letters, numbers, underscores (_), and hyphens (-), and cannot be identical to an existing subtitle ID.
	Id *string `json:"Id,omitnil,omitempty" name:"Id"`
}

type MediaSubtitleItem struct {
	// Unique subtitle ID
	Id *string `json:"Id,omitnil,omitempty" name:"Id"`

	// Subtitle name
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Subtitle language. Common values:
	// <li>`zh`: Chinese</li>
	// <li>`en`: English</li>
	// <li>`ja`: Japanese</li>
	// <li>`ko`: Korean</li>
	// <li>`vi`: Vietnamese</li>
	// <li>`ms`: Malay</li>
	// <li>`th`: Thai</li>
	// <li>`pt`: Portuguese</li>
	// <li>`tr`: Turkish</li>
	// <li>`ar`: Arabic</li>
	// <li>`es`: Spanish</li>
	// <li>`hi`: Hindi</li>
	// <li>`fr`: French</li>For other valid values, see [RFC 5646](https://tools.ietf.org/html/rfc5646).
	Language *string `json:"Language,omitnil,omitempty" name:"Language"`

	// Subtitle format. Valid value:
	// <li>vtt</li>
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Subtitle URL
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// Subtitle source, values:
	// <li>UserUploaded: user uploaded;</li>
	// <li>AIRecognition: AI recognition, generated through asr full text recognition or voice translation.</li>
	Source *string `json:"Source,omitnil,omitempty" name:"Source"`
}

type MediaTrack struct {
	// Track type. Valid values:
	// <ul>
	// <li>Video: video track, which is composed of the following items: <ul><li>VideoTrackItem</li><li>MediaTransitionItem</li> <li>EmptyTrackItem</li></ul> </li>
	// <li>Audio: audio track, which is composed of the following items: <ul><li>AudioTrackItem</li><li>MediaTransitionItem</li><li>EmptyTrackItem</li></ul></li>
	// <li>Sticker: sticker track, which is composed of the following items: <ul><li> StickerTrackItem</li><li>EmptyTrackItem</li></ul></li>	
	// </ul>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// List of media segments on track.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TrackItems []*MediaTrackItem `json:"TrackItems,omitnil,omitempty" name:"TrackItems"`
}

type MediaTrackItem struct {
	// Segment type. Valid values:
	// <li>Video: video segment.</li>
	// <li>Audio: audio segment.</li>
	// <li>Sticker: sticker segment.</li>
	// <li>Transition: transition.</li>
	// <li>Empty: empty segment.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Video segment, which is valid if `Type` is `Video`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	VideoItem *VideoTrackItem `json:"VideoItem,omitnil,omitempty" name:"VideoItem"`

	// Audio segment, which is valid if `Type` is `Audio`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AudioItem *AudioTrackItem `json:"AudioItem,omitnil,omitempty" name:"AudioItem"`

	// Sticker segment, which is valid if `Type` is `Sticker`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	StickerItem *StickerTrackItem `json:"StickerItem,omitnil,omitempty" name:"StickerItem"`

	// Transition, which is valid if `Type` is `Transition`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TransitionItem *MediaTransitionItem `json:"TransitionItem,omitnil,omitempty" name:"TransitionItem"`

	// Empty segment, which is valid if `Type` is `Empty`. It is used as placeholder on time axis. <li>If you want a period of silence between two audio segments, you can use `EmptyTrackItem` to hold the place.</li>
	// <li>Use `EmptyTrackItem` as a placeholder to locate an item.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	EmptyItem *EmptyTrackItem `json:"EmptyItem,omitnil,omitempty" name:"EmptyItem"`
}

type MediaTranscodeInfo struct {
	// Information set of transcoding with each specification. Each element represents a result of transcoding with a specification.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TranscodeSet []*MediaTranscodeItem `json:"TranscodeSet,omitnil,omitempty" name:"TranscodeSet"`
}

type MediaTranscodeItem struct {
	// Address of output video file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// For transcoding specification ID, see [Transcoding Parameter Template](https://intl.cloud.tencent.com/document/product/266/33476?from_cn_redirect=1). 
	// <font color=red>Note: A value of 0 represents the original file. </font>
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Sum of the average bitrate of a video stream and that of an audio stream in bps.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Bitrate *int64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// Maximum value of the height of a video stream in px.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Height *int64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Maximum value of the width of a video stream in px.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Width *int64 `json:"Width,omitnil,omitempty" name:"Width"`

	// The file size (bytes).
	// <li>If the file is an HLS file, the value of this parameter is the sum of the size of the M3U8 and TS files.</li>
	Size *int64 `json:"Size,omitnil,omitempty" name:"Size"`

	// Video duration in seconds.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Duration *float64 `json:"Duration,omitnil,omitempty" name:"Duration"`

	// MD5 value of video.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Md5 *string `json:"Md5,omitnil,omitempty" name:"Md5"`

	// Container, such as m4a and mp4.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// Video stream information.
	// Note: this field may return null, indicating that no valid values can be obtained.
	VideoStreamSet []*MediaVideoStreamItem `json:"VideoStreamSet,omitnil,omitempty" name:"VideoStreamSet"`

	// Audio stream information.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AudioStreamSet []*MediaAudioStreamItem `json:"AudioStreamSet,omitnil,omitempty" name:"AudioStreamSet"`

	// The watermark type. Valid values:
	// <li>Trace: Digital watermark</li>
	// <li>None: Regular watermark</li>
	DigitalWatermarkType *string `json:"DigitalWatermarkType,omitnil,omitempty" name:"DigitalWatermarkType"`


	CopyRightWatermarkText *string `json:"CopyRightWatermarkText,omitnil,omitempty" name:"CopyRightWatermarkText"`
}

type MediaTransitionItem struct {
	// Transition duration in seconds. For two media segments that use a transition, the start time of the second segment on the track will be automatically set to the end time of the first segment minus the transition duration.
	Duration *float64 `json:"Duration,omitnil,omitempty" name:"Duration"`

	// List of transition operations. Up to one video image or audio transition operation is supported.
	// Note: this field may return null, indicating that no valid values can be obtained.
	//
	// Deprecated: Transitions is deprecated.
	Transitions []*TransitionOpertion `json:"Transitions,omitnil,omitempty" name:"Transitions"`

	// Transition operation list. Image transition operations and audio transition operations support at most one each.
	MediaTransitions []*TransitionOperation `json:"MediaTransitions,omitnil,omitempty" name:"MediaTransitions"`
}

type MediaVideoStreamItem struct {
	// Bitrate of video stream in bps.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Bitrate *int64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// Height of video stream in px.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Height *int64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Width of video stream in px.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Width *int64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Video stream encoder, such as h264.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Codec *string `json:"Codec,omitnil,omitempty" name:"Codec"`

	// Frame rate in Hz.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Fps *int64 `json:"Fps,omitnil,omitempty" name:"Fps"`

	// The codec tag. This parameter is valid only if `Codec` is `hevc`.
	CodecTag *string `json:"CodecTag,omitnil,omitempty" name:"CodecTag"`

	// Dynamic range information.
	// <li><font color=red>Note</font>: This parameter is valid for transcoding files generated after 2023-01-10T00:00:00Z.</li>
	DynamicRangeInfo *DynamicRangeInfo `json:"DynamicRangeInfo,omitnil,omitempty" name:"DynamicRangeInfo"`
}

// Predefined struct for user
type ModifyAIAnalysisTemplateRequestParams struct {
	// Unique ID of video content analysis template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Video content analysis template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Video content analysis template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter of intelligent categorization task.
	ClassificationConfigure *ClassificationConfigureInfoForUpdate `json:"ClassificationConfigure,omitnil,omitempty" name:"ClassificationConfigure"`

	// Control parameter of intelligent tagging task.
	TagConfigure *TagConfigureInfoForUpdate `json:"TagConfigure,omitnil,omitempty" name:"TagConfigure"`

	// Control parameter of intelligent cover generating task.
	CoverConfigure *CoverConfigureInfoForUpdate `json:"CoverConfigure,omitnil,omitempty" name:"CoverConfigure"`

	// Control parameter of intelligent frame-specific tagging task.
	FrameTagConfigure *FrameTagConfigureInfoForUpdate `json:"FrameTagConfigure,omitnil,omitempty" name:"FrameTagConfigure"`

	// Control parameter of an intelligent highlight generating task.
	HighlightConfigure *HighlightsConfigureInfoForUpdate `json:"HighlightConfigure,omitnil,omitempty" name:"HighlightConfigure"`
}

type ModifyAIAnalysisTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of video content analysis template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Video content analysis template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Video content analysis template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter of intelligent categorization task.
	ClassificationConfigure *ClassificationConfigureInfoForUpdate `json:"ClassificationConfigure,omitnil,omitempty" name:"ClassificationConfigure"`

	// Control parameter of intelligent tagging task.
	TagConfigure *TagConfigureInfoForUpdate `json:"TagConfigure,omitnil,omitempty" name:"TagConfigure"`

	// Control parameter of intelligent cover generating task.
	CoverConfigure *CoverConfigureInfoForUpdate `json:"CoverConfigure,omitnil,omitempty" name:"CoverConfigure"`

	// Control parameter of intelligent frame-specific tagging task.
	FrameTagConfigure *FrameTagConfigureInfoForUpdate `json:"FrameTagConfigure,omitnil,omitempty" name:"FrameTagConfigure"`

	// Control parameter of an intelligent highlight generating task.
	HighlightConfigure *HighlightsConfigureInfoForUpdate `json:"HighlightConfigure,omitnil,omitempty" name:"HighlightConfigure"`
}

func (r *ModifyAIAnalysisTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyAIAnalysisTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "ClassificationConfigure")
	delete(f, "TagConfigure")
	delete(f, "CoverConfigure")
	delete(f, "FrameTagConfigure")
	delete(f, "HighlightConfigure")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyAIAnalysisTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyAIAnalysisTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyAIAnalysisTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyAIAnalysisTemplateResponseParams `json:"Response"`
}

func (r *ModifyAIAnalysisTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyAIAnalysisTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyAIRecognitionTemplateRequestParams struct {
	// Unique ID of video content recognition template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Video content recognition template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description of video content recognition template. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter of video opening and ending credits recognition.
	HeadTailConfigure *HeadTailConfigureInfoForUpdate `json:"HeadTailConfigure,omitnil,omitempty" name:"HeadTailConfigure"`

	// Control parameter of video splitting recognition.
	SegmentConfigure *SegmentConfigureInfoForUpdate `json:"SegmentConfigure,omitnil,omitempty" name:"SegmentConfigure"`

	// Control parameter of face recognition.
	FaceConfigure *FaceConfigureInfoForUpdate `json:"FaceConfigure,omitnil,omitempty" name:"FaceConfigure"`

	// Control parameter of full text recognition.
	OcrFullTextConfigure *OcrFullTextConfigureInfoForUpdate `json:"OcrFullTextConfigure,omitnil,omitempty" name:"OcrFullTextConfigure"`

	// Control parameter of text keyword recognition.
	OcrWordsConfigure *OcrWordsConfigureInfoForUpdate `json:"OcrWordsConfigure,omitnil,omitempty" name:"OcrWordsConfigure"`

	// Control parameter of full speech recognition.
	AsrFullTextConfigure *AsrFullTextConfigureInfoForUpdate `json:"AsrFullTextConfigure,omitnil,omitempty" name:"AsrFullTextConfigure"`

	// Control parameter of speech keyword recognition.
	AsrWordsConfigure *AsrWordsConfigureInfoForUpdate `json:"AsrWordsConfigure,omitnil,omitempty" name:"AsrWordsConfigure"`

	// Control parameter of voice translation.
	AsrTranslateConfigure *AsrTranslateConfigureInfoForUpdate `json:"AsrTranslateConfigure,omitnil,omitempty" name:"AsrTranslateConfigure"`

	// Control parameter of object recognition.
	ObjectConfigure *ObjectConfigureInfoForUpdate `json:"ObjectConfigure,omitnil,omitempty" name:"ObjectConfigure"`

	// Frame capturing interval in seconds. Minimum value: 0.5 seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`
}

type ModifyAIRecognitionTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of video content recognition template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Video content recognition template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description of video content recognition template. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter of video opening and ending credits recognition.
	HeadTailConfigure *HeadTailConfigureInfoForUpdate `json:"HeadTailConfigure,omitnil,omitempty" name:"HeadTailConfigure"`

	// Control parameter of video splitting recognition.
	SegmentConfigure *SegmentConfigureInfoForUpdate `json:"SegmentConfigure,omitnil,omitempty" name:"SegmentConfigure"`

	// Control parameter of face recognition.
	FaceConfigure *FaceConfigureInfoForUpdate `json:"FaceConfigure,omitnil,omitempty" name:"FaceConfigure"`

	// Control parameter of full text recognition.
	OcrFullTextConfigure *OcrFullTextConfigureInfoForUpdate `json:"OcrFullTextConfigure,omitnil,omitempty" name:"OcrFullTextConfigure"`

	// Control parameter of text keyword recognition.
	OcrWordsConfigure *OcrWordsConfigureInfoForUpdate `json:"OcrWordsConfigure,omitnil,omitempty" name:"OcrWordsConfigure"`

	// Control parameter of full speech recognition.
	AsrFullTextConfigure *AsrFullTextConfigureInfoForUpdate `json:"AsrFullTextConfigure,omitnil,omitempty" name:"AsrFullTextConfigure"`

	// Control parameter of speech keyword recognition.
	AsrWordsConfigure *AsrWordsConfigureInfoForUpdate `json:"AsrWordsConfigure,omitnil,omitempty" name:"AsrWordsConfigure"`

	// Control parameter of voice translation.
	AsrTranslateConfigure *AsrTranslateConfigureInfoForUpdate `json:"AsrTranslateConfigure,omitnil,omitempty" name:"AsrTranslateConfigure"`

	// Control parameter of object recognition.
	ObjectConfigure *ObjectConfigureInfoForUpdate `json:"ObjectConfigure,omitnil,omitempty" name:"ObjectConfigure"`

	// Frame capturing interval in seconds. Minimum value: 0.5 seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`
}

func (r *ModifyAIRecognitionTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyAIRecognitionTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "HeadTailConfigure")
	delete(f, "SegmentConfigure")
	delete(f, "FaceConfigure")
	delete(f, "OcrFullTextConfigure")
	delete(f, "OcrWordsConfigure")
	delete(f, "AsrFullTextConfigure")
	delete(f, "AsrWordsConfigure")
	delete(f, "AsrTranslateConfigure")
	delete(f, "ObjectConfigure")
	delete(f, "ScreenshotInterval")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyAIRecognitionTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyAIRecognitionTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyAIRecognitionTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyAIRecognitionTemplateResponseParams `json:"Response"`
}

func (r *ModifyAIRecognitionTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyAIRecognitionTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyAdaptiveDynamicStreamingTemplateRequestParams struct {
	// Unique ID of adaptive bitrate streaming template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The adaptive bitrate streaming format. Valid values:
	// <li>HLS</li>
	// <li>MPEG-DASH</li>
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Whether to prohibit transcoding video from low bitrate to high bitrate. Valid values:
	// <li>0: no,</li>
	// <li>1: yes.</li>
	DisableHigherVideoBitrate *uint64 `json:"DisableHigherVideoBitrate,omitnil,omitempty" name:"DisableHigherVideoBitrate"`

	// Whether to prohibit transcoding from low resolution to high resolution. Valid values:
	// <li>0: no,</li>
	// <li>1: yes.</li>
	DisableHigherVideoResolution *uint64 `json:"DisableHigherVideoResolution,omitnil,omitempty" name:"DisableHigherVideoResolution"`

	// Parameter information of input stream for adaptive bitrate streaming. Up to 10 streams can be input.
	// Note: the frame rate of all streams must be the same; otherwise, the frame rate of the first stream will be used as the output frame rate.
	StreamInfos []*AdaptiveStreamTemplate `json:"StreamInfos,omitnil,omitempty" name:"StreamInfos"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The segment type. This parameter is valid only if `Format` is `HLS`. Valid values:
	// <li>ts: TS segment</li>
	// <li>fmp4: fMP4 segment</li>
	SegmentType *string `json:"SegmentType,omitnil,omitempty" name:"SegmentType"`
}

type ModifyAdaptiveDynamicStreamingTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of adaptive bitrate streaming template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The adaptive bitrate streaming format. Valid values:
	// <li>HLS</li>
	// <li>MPEG-DASH</li>
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Whether to prohibit transcoding video from low bitrate to high bitrate. Valid values:
	// <li>0: no,</li>
	// <li>1: yes.</li>
	DisableHigherVideoBitrate *uint64 `json:"DisableHigherVideoBitrate,omitnil,omitempty" name:"DisableHigherVideoBitrate"`

	// Whether to prohibit transcoding from low resolution to high resolution. Valid values:
	// <li>0: no,</li>
	// <li>1: yes.</li>
	DisableHigherVideoResolution *uint64 `json:"DisableHigherVideoResolution,omitnil,omitempty" name:"DisableHigherVideoResolution"`

	// Parameter information of input stream for adaptive bitrate streaming. Up to 10 streams can be input.
	// Note: the frame rate of all streams must be the same; otherwise, the frame rate of the first stream will be used as the output frame rate.
	StreamInfos []*AdaptiveStreamTemplate `json:"StreamInfos,omitnil,omitempty" name:"StreamInfos"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The segment type. This parameter is valid only if `Format` is `HLS`. Valid values:
	// <li>ts: TS segment</li>
	// <li>fmp4: fMP4 segment</li>
	SegmentType *string `json:"SegmentType,omitnil,omitempty" name:"SegmentType"`
}

func (r *ModifyAdaptiveDynamicStreamingTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyAdaptiveDynamicStreamingTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Format")
	delete(f, "DisableHigherVideoBitrate")
	delete(f, "DisableHigherVideoResolution")
	delete(f, "StreamInfos")
	delete(f, "Comment")
	delete(f, "SegmentType")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyAdaptiveDynamicStreamingTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyAdaptiveDynamicStreamingTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyAdaptiveDynamicStreamingTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyAdaptiveDynamicStreamingTemplateResponseParams `json:"Response"`
}

func (r *ModifyAdaptiveDynamicStreamingTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyAdaptiveDynamicStreamingTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyAnimatedGraphicsTemplateRequestParams struct {
	// Unique ID of an animated image generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of an animated image generating template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Maximum value of the width (or long side) of an animated image in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of an animated image in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Animated image format. Valid values: gif, webp.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Video frame rate in Hz. Value range: [1, 30].
	Fps *uint64 `json:"Fps,omitnil,omitempty" name:"Fps"`

	// Image quality. Value range: [1, 100]. Default value: 75.
	Quality *float64 `json:"Quality,omitnil,omitempty" name:"Quality"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

type ModifyAnimatedGraphicsTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of an animated image generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of an animated image generating template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Maximum value of the width (or long side) of an animated image in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of an animated image in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Animated image format. Valid values: gif, webp.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Video frame rate in Hz. Value range: [1, 30].
	Fps *uint64 `json:"Fps,omitnil,omitempty" name:"Fps"`

	// Image quality. Value range: [1, 100]. Default value: 75.
	Quality *float64 `json:"Quality,omitnil,omitempty" name:"Quality"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

func (r *ModifyAnimatedGraphicsTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyAnimatedGraphicsTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Width")
	delete(f, "Height")
	delete(f, "ResolutionAdaptive")
	delete(f, "Format")
	delete(f, "Fps")
	delete(f, "Quality")
	delete(f, "Comment")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyAnimatedGraphicsTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyAnimatedGraphicsTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyAnimatedGraphicsTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyAnimatedGraphicsTemplateResponseParams `json:"Response"`
}

func (r *ModifyAnimatedGraphicsTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyAnimatedGraphicsTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyCDNDomainConfigRequestParams struct {
	// Domain.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Domain Config.
	Config *CDNDomainConfigForUpdate `json:"Config,omitnil,omitempty" name:"Config"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type ModifyCDNDomainConfigRequest struct {
	*tchttp.BaseRequest
	
	// Domain.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Domain Config.
	Config *CDNDomainConfigForUpdate `json:"Config,omitnil,omitempty" name:"Config"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *ModifyCDNDomainConfigRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyCDNDomainConfigRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domain")
	delete(f, "Config")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyCDNDomainConfigRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyCDNDomainConfigResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyCDNDomainConfigResponse struct {
	*tchttp.BaseResponse
	Response *ModifyCDNDomainConfigResponseParams `json:"Response"`
}

func (r *ModifyCDNDomainConfigResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyCDNDomainConfigResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyClassRequestParams struct {
	// Category ID
	ClassId *uint64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// Category name, which can contain 1-64 characters.
	ClassName *string `json:"ClassName,omitnil,omitempty" name:"ClassName"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type ModifyClassRequest struct {
	*tchttp.BaseRequest
	
	// Category ID
	ClassId *uint64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// Category name, which can contain 1-64 characters.
	ClassName *string `json:"ClassName,omitnil,omitempty" name:"ClassName"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *ModifyClassRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyClassRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ClassId")
	delete(f, "ClassName")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyClassRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyClassResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyClassResponse struct {
	*tchttp.BaseResponse
	Response *ModifyClassResponseParams `json:"Response"`
}

func (r *ModifyClassResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyClassResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyContentReviewTemplateRequestParams struct {
	// Unique ID of an intelligent content recognition template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of an intelligent content recognition template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description of an intelligent content recognition template. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter for terrorism information.
	TerrorismConfigure *TerrorismConfigureInfoForUpdate `json:"TerrorismConfigure,omitnil,omitempty" name:"TerrorismConfigure"`

	// Control parameter for porn information.
	PornConfigure *PornConfigureInfoForUpdate `json:"PornConfigure,omitnil,omitempty" name:"PornConfigure"`

	// Control parameter for politically sensitive information.
	PoliticalConfigure *PoliticalConfigureInfoForUpdate `json:"PoliticalConfigure,omitnil,omitempty" name:"PoliticalConfigure"`

	// Control parameter of prohibited information detection. Prohibited information includes:
	// <li>Abusive;</li>
	// <li>Drug-related.</li>
	ProhibitedConfigure *ProhibitedConfigureInfoForUpdate `json:"ProhibitedConfigure,omitnil,omitempty" name:"ProhibitedConfigure"`

	// Control parameter for custom intelligent content recognition tasks.
	UserDefineConfigure *UserDefineConfigureInfoForUpdate `json:"UserDefineConfigure,omitnil,omitempty" name:"UserDefineConfigure"`

	// Frame capturing interval in seconds. Minimum value: 0.5 seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`

	// Whether to allow the recognition result to enter the intelligent recognition platform (for human recognition).
	// <li>ON: yes</li>
	// <li>OFF: no</li>
	ReviewWallSwitch *string `json:"ReviewWallSwitch,omitnil,omitempty" name:"ReviewWallSwitch"`
}

type ModifyContentReviewTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of an intelligent content recognition template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of an intelligent content recognition template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description of an intelligent content recognition template. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Control parameter for terrorism information.
	TerrorismConfigure *TerrorismConfigureInfoForUpdate `json:"TerrorismConfigure,omitnil,omitempty" name:"TerrorismConfigure"`

	// Control parameter for porn information.
	PornConfigure *PornConfigureInfoForUpdate `json:"PornConfigure,omitnil,omitempty" name:"PornConfigure"`

	// Control parameter for politically sensitive information.
	PoliticalConfigure *PoliticalConfigureInfoForUpdate `json:"PoliticalConfigure,omitnil,omitempty" name:"PoliticalConfigure"`

	// Control parameter of prohibited information detection. Prohibited information includes:
	// <li>Abusive;</li>
	// <li>Drug-related.</li>
	ProhibitedConfigure *ProhibitedConfigureInfoForUpdate `json:"ProhibitedConfigure,omitnil,omitempty" name:"ProhibitedConfigure"`

	// Control parameter for custom intelligent content recognition tasks.
	UserDefineConfigure *UserDefineConfigureInfoForUpdate `json:"UserDefineConfigure,omitnil,omitempty" name:"UserDefineConfigure"`

	// Frame capturing interval in seconds. Minimum value: 0.5 seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`

	// Whether to allow the recognition result to enter the intelligent recognition platform (for human recognition).
	// <li>ON: yes</li>
	// <li>OFF: no</li>
	ReviewWallSwitch *string `json:"ReviewWallSwitch,omitnil,omitempty" name:"ReviewWallSwitch"`
}

func (r *ModifyContentReviewTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyContentReviewTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "TerrorismConfigure")
	delete(f, "PornConfigure")
	delete(f, "PoliticalConfigure")
	delete(f, "ProhibitedConfigure")
	delete(f, "UserDefineConfigure")
	delete(f, "ScreenshotInterval")
	delete(f, "ReviewWallSwitch")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyContentReviewTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyContentReviewTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyContentReviewTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyContentReviewTemplateResponseParams `json:"Response"`
}

func (r *ModifyContentReviewTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyContentReviewTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyDefaultStorageRegionRequestParams struct {
	// The default storage region, which must be a region you have storage access to. You can use the `DescribeStorageRegions` API to query such regions.
	StorageRegion *string `json:"StorageRegion,omitnil,omitempty" name:"StorageRegion"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type ModifyDefaultStorageRegionRequest struct {
	*tchttp.BaseRequest
	
	// The default storage region, which must be a region you have storage access to. You can use the `DescribeStorageRegions` API to query such regions.
	StorageRegion *string `json:"StorageRegion,omitnil,omitempty" name:"StorageRegion"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *ModifyDefaultStorageRegionRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyDefaultStorageRegionRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "StorageRegion")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyDefaultStorageRegionRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyDefaultStorageRegionResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyDefaultStorageRegionResponse struct {
	*tchttp.BaseResponse
	Response *ModifyDefaultStorageRegionResponseParams `json:"Response"`
}

func (r *ModifyDefaultStorageRegionResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyDefaultStorageRegionResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyEnhanceMediaTemplateRequestParams struct {
	// Enhance Media Template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Audio and video quality rebirth template name, length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description information, length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Media quality Enhance video control control information.
	RebuildVideoInfo *RebuildVideoInfo `json:"RebuildVideoInfo,omitnil,omitempty" name:"RebuildVideoInfo"`

	// Media quality Enhance audio control control information.
	RebuildAudioInfo *RebuildAudioInfo `json:"RebuildAudioInfo,omitnil,omitempty" name:"RebuildAudioInfo"`

	// Output target video control information.
	TargetVideoInfo *RebuildMediaTargetVideoStream `json:"TargetVideoInfo,omitnil,omitempty" name:"TargetVideoInfo"`

	// Output target audio control information.
	TargetAudioInfo *RebuildMediaTargetAudioStream `json:"TargetAudioInfo,omitnil,omitempty" name:"TargetAudioInfo"`

	// Output file encapsulation format, optional values: mp4, flv, hls.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// Whether to remove video data, optional values:
	// <li>0: Keep</li>
	// <li>1: Remove</li>
	// Default value 0.
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data, optional values:
	// <li>0: Keep</li>
	// <li>1: Remove</li>
	// Default value 0.
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`
}

type ModifyEnhanceMediaTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Enhance Media Template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Audio and video quality rebirth template name, length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description information, length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Media quality Enhance video control control information.
	RebuildVideoInfo *RebuildVideoInfo `json:"RebuildVideoInfo,omitnil,omitempty" name:"RebuildVideoInfo"`

	// Media quality Enhance audio control control information.
	RebuildAudioInfo *RebuildAudioInfo `json:"RebuildAudioInfo,omitnil,omitempty" name:"RebuildAudioInfo"`

	// Output target video control information.
	TargetVideoInfo *RebuildMediaTargetVideoStream `json:"TargetVideoInfo,omitnil,omitempty" name:"TargetVideoInfo"`

	// Output target audio control information.
	TargetAudioInfo *RebuildMediaTargetAudioStream `json:"TargetAudioInfo,omitnil,omitempty" name:"TargetAudioInfo"`

	// Output file encapsulation format, optional values: mp4, flv, hls.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// Whether to remove video data, optional values:
	// <li>0: Keep</li>
	// <li>1: Remove</li>
	// Default value 0.
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data, optional values:
	// <li>0: Keep</li>
	// <li>1: Remove</li>
	// Default value 0.
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`
}

func (r *ModifyEnhanceMediaTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyEnhanceMediaTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "RebuildVideoInfo")
	delete(f, "RebuildAudioInfo")
	delete(f, "TargetVideoInfo")
	delete(f, "TargetAudioInfo")
	delete(f, "Container")
	delete(f, "RemoveVideo")
	delete(f, "RemoveAudio")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyEnhanceMediaTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyEnhanceMediaTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyEnhanceMediaTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyEnhanceMediaTemplateResponseParams `json:"Response"`
}

func (r *ModifyEnhanceMediaTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyEnhanceMediaTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyEventConfigRequestParams struct {
	// How to receive event notifications. 
	// <li>PUSH: [HTTP callback notification](https://www.tencentcloud.com/document/product/266/33948);</li>
	// <li>PULL: [Reliable notification based on message queue ](https://www.tencentcloud.com/document/product/266/33948). </li>
	Mode *string `json:"Mode,omitnil,omitempty" name:"Mode"`

	// The address used to receive 3.0 format callbacks when using the [HTTP callback notification](https://www.tencentcloud.com/document/product/266/33948) reception method. 
	// Note: If the NotificationUrl parameter is provided and the value is an empty string, the 3.0 format callback address will be cleared.
	NotificationUrl *string `json:"NotificationUrl,omitnil,omitempty" name:"NotificationUrl"`

	// Whether to receive the [Video Upload Completed](https://www.tencentcloud.com/document/product/266/33950) event notification. The default "OFF" is to ignore the event notification, and "ON" is to receive the event notification. 
	UploadMediaCompleteEventSwitch *string `json:"UploadMediaCompleteEventSwitch,omitnil,omitempty" name:"UploadMediaCompleteEventSwitch"`

	// Whether to receive [Video deletion completed](https://www.tencentcloud.com/document/product/266/33952) event notification, the default "OFF" means to ignore the event notification, "ON" means to receive the event notification .
	DeleteMediaCompleteEventSwitch *string `json:"DeleteMediaCompleteEventSwitch,omitnil,omitempty" name:"DeleteMediaCompleteEventSwitch"`

	// Whether to receive the Persistence completed event notification, the default "OFF" means to ignore the event notification, "ON" means to receive the event notification.
	PersistenceCompleteEventSwitch *string `json:"PersistenceCompleteEventSwitch,omitnil,omitempty" name:"PersistenceCompleteEventSwitch"`

	// <b>The VOD [application](https://www.tencentcloud.com/document/product/266/33987) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type ModifyEventConfigRequest struct {
	*tchttp.BaseRequest
	
	// How to receive event notifications. 
	// <li>PUSH: [HTTP callback notification](https://www.tencentcloud.com/document/product/266/33948);</li>
	// <li>PULL: [Reliable notification based on message queue ](https://www.tencentcloud.com/document/product/266/33948). </li>
	Mode *string `json:"Mode,omitnil,omitempty" name:"Mode"`

	// The address used to receive 3.0 format callbacks when using the [HTTP callback notification](https://www.tencentcloud.com/document/product/266/33948) reception method. 
	// Note: If the NotificationUrl parameter is provided and the value is an empty string, the 3.0 format callback address will be cleared.
	NotificationUrl *string `json:"NotificationUrl,omitnil,omitempty" name:"NotificationUrl"`

	// Whether to receive the [Video Upload Completed](https://www.tencentcloud.com/document/product/266/33950) event notification. The default "OFF" is to ignore the event notification, and "ON" is to receive the event notification. 
	UploadMediaCompleteEventSwitch *string `json:"UploadMediaCompleteEventSwitch,omitnil,omitempty" name:"UploadMediaCompleteEventSwitch"`

	// Whether to receive [Video deletion completed](https://www.tencentcloud.com/document/product/266/33952) event notification, the default "OFF" means to ignore the event notification, "ON" means to receive the event notification .
	DeleteMediaCompleteEventSwitch *string `json:"DeleteMediaCompleteEventSwitch,omitnil,omitempty" name:"DeleteMediaCompleteEventSwitch"`

	// Whether to receive the Persistence completed event notification, the default "OFF" means to ignore the event notification, "ON" means to receive the event notification.
	PersistenceCompleteEventSwitch *string `json:"PersistenceCompleteEventSwitch,omitnil,omitempty" name:"PersistenceCompleteEventSwitch"`

	// <b>The VOD [application](https://www.tencentcloud.com/document/product/266/33987) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *ModifyEventConfigRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyEventConfigRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Mode")
	delete(f, "NotificationUrl")
	delete(f, "UploadMediaCompleteEventSwitch")
	delete(f, "DeleteMediaCompleteEventSwitch")
	delete(f, "PersistenceCompleteEventSwitch")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyEventConfigRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyEventConfigResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyEventConfigResponse struct {
	*tchttp.BaseResponse
	Response *ModifyEventConfigResponseParams `json:"Response"`
}

func (r *ModifyEventConfigResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyEventConfigResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyHeadTailTemplateRequestParams struct {
	// HeadTail template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template name, length limit is 64 characters. Not passing means not modifying.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description, limited to 256 characters. Passing nothing means no modification, passing empty means clearing it.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Title candidate list, fill in the FileId of the video. When transcoding, the title closest to the aspect ratio of the feature film will be automatically selected (when the aspect ratio is the same, the front candidate will take precedence). Supports up to 5 candidate titles. Not passing it means no modification, passing an empty array means clearing it.
	HeadCandidateSet []*string `json:"HeadCandidateSet,omitnil,omitempty" name:"HeadCandidateSet"`

	// Ending candidate list, fill in the FileId of the video. When transcoding, the ending with the aspect ratio closest to the feature film will be automatically selected (when the aspect ratio is the same, the front candidate will take precedence). Supports up to 5 candidate titles. Not passing it means no modification, passing an empty array means clearing it.
	TailCandidateSet []*string `json:"TailCandidateSet,omitnil,omitempty" name:"TailCandidateSet"`

	// Padding method. When the video stream configuration width and height parameters are inconsistent with the aspect ratio of the original video, the transcoding processing method is "padding". Optional filling method:
	// <li> stretch: stretch, stretch each frame to fill the entire screen, which may cause the transcoded video to be "squashed" or "stretched";</li> 
	// <li> gauss: Gaussian blur, keep the video aspect ratio unchanged, use Gaussian blur for the remaining edges; </li>
	// <li> white: leave blank, keep the video aspect ratio unchanged, use the remaining edges for the edge Use white filling; </li>
	// <li> black: Leave black, keep the video aspect ratio unchanged, and fill the remaining edges with black. </li>
	// The default value is not to be modified.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

type ModifyHeadTailTemplateRequest struct {
	*tchttp.BaseRequest
	
	// HeadTail template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template name, length limit is 64 characters. Not passing means not modifying.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description, limited to 256 characters. Passing nothing means no modification, passing empty means clearing it.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Title candidate list, fill in the FileId of the video. When transcoding, the title closest to the aspect ratio of the feature film will be automatically selected (when the aspect ratio is the same, the front candidate will take precedence). Supports up to 5 candidate titles. Not passing it means no modification, passing an empty array means clearing it.
	HeadCandidateSet []*string `json:"HeadCandidateSet,omitnil,omitempty" name:"HeadCandidateSet"`

	// Ending candidate list, fill in the FileId of the video. When transcoding, the ending with the aspect ratio closest to the feature film will be automatically selected (when the aspect ratio is the same, the front candidate will take precedence). Supports up to 5 candidate titles. Not passing it means no modification, passing an empty array means clearing it.
	TailCandidateSet []*string `json:"TailCandidateSet,omitnil,omitempty" name:"TailCandidateSet"`

	// Padding method. When the video stream configuration width and height parameters are inconsistent with the aspect ratio of the original video, the transcoding processing method is "padding". Optional filling method:
	// <li> stretch: stretch, stretch each frame to fill the entire screen, which may cause the transcoded video to be "squashed" or "stretched";</li> 
	// <li> gauss: Gaussian blur, keep the video aspect ratio unchanged, use Gaussian blur for the remaining edges; </li>
	// <li> white: leave blank, keep the video aspect ratio unchanged, use the remaining edges for the edge Use white filling; </li>
	// <li> black: Leave black, keep the video aspect ratio unchanged, and fill the remaining edges with black. </li>
	// The default value is not to be modified.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

func (r *ModifyHeadTailTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyHeadTailTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "HeadCandidateSet")
	delete(f, "TailCandidateSet")
	delete(f, "FillType")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyHeadTailTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyHeadTailTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyHeadTailTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyHeadTailTemplateResponseParams `json:"Response"`
}

func (r *ModifyHeadTailTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyHeadTailTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyImageSpriteTemplateRequestParams struct {
	// Unique ID of an image sprite generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of an image sprite generating template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Subimage width of an image sprite in px. Value range: [128, 4,096].
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Subimage height of an image sprite in px. Value range: [128, 4,096].
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Sampling type. Valid values:
	// <li>Percent: by percent.</li>
	// <li>Time: by time interval.</li>
	SampleType *string `json:"SampleType,omitnil,omitempty" name:"SampleType"`

	// Sampling interval.
	// <li>If `SampleType` is `Percent`, sampling will be performed at an interval of the specified percentage.</li>
	// <li>If `SampleType` is `Time`, sampling will be performed at the specified time interval in seconds.</li>
	SampleInterval *uint64 `json:"SampleInterval,omitnil,omitempty" name:"SampleInterval"`

	// Subimage row count of an image sprite.
	RowCount *uint64 `json:"RowCount,omitnil,omitempty" name:"RowCount"`

	// Subimage column count of an image sprite.
	ColumnCount *uint64 `json:"ColumnCount,omitnil,omitempty" name:"ColumnCount"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The image format. Valid values:
	// <li> jpg</li>
	// <li> png</li>
	// <li> webp</li>
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`
}

type ModifyImageSpriteTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of an image sprite generating template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of an image sprite generating template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Subimage width of an image sprite in px. Value range: [128, 4,096].
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Subimage height of an image sprite in px. Value range: [128, 4,096].
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Sampling type. Valid values:
	// <li>Percent: by percent.</li>
	// <li>Time: by time interval.</li>
	SampleType *string `json:"SampleType,omitnil,omitempty" name:"SampleType"`

	// Sampling interval.
	// <li>If `SampleType` is `Percent`, sampling will be performed at an interval of the specified percentage.</li>
	// <li>If `SampleType` is `Time`, sampling will be performed at the specified time interval in seconds.</li>
	SampleInterval *uint64 `json:"SampleInterval,omitnil,omitempty" name:"SampleInterval"`

	// Subimage row count of an image sprite.
	RowCount *uint64 `json:"RowCount,omitnil,omitempty" name:"RowCount"`

	// Subimage column count of an image sprite.
	ColumnCount *uint64 `json:"ColumnCount,omitnil,omitempty" name:"ColumnCount"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The image format. Valid values:
	// <li> jpg</li>
	// <li> png</li>
	// <li> webp</li>
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`
}

func (r *ModifyImageSpriteTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyImageSpriteTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Width")
	delete(f, "Height")
	delete(f, "ResolutionAdaptive")
	delete(f, "SampleType")
	delete(f, "SampleInterval")
	delete(f, "RowCount")
	delete(f, "ColumnCount")
	delete(f, "FillType")
	delete(f, "Comment")
	delete(f, "Format")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyImageSpriteTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyImageSpriteTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyImageSpriteTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyImageSpriteTemplateResponseParams `json:"Response"`
}

func (r *ModifyImageSpriteTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyImageSpriteTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyJustInTimeTranscodeTemplateRequestParams struct {
	// Template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Video parameter configuration.
	VideoConfigure *VideoConfigureInfoForUpdate `json:"VideoConfigure,omitnil,omitempty" name:"VideoConfigure"`

	// Watermark parameter configuration.
	WatermarkConfigure *WatermarkConfigureInfoForUpdate `json:"WatermarkConfigure,omitnil,omitempty" name:"WatermarkConfigure"`

	// Template description, the length is limited to 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

type ModifyJustInTimeTranscodeTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *int64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Video parameter configuration.
	VideoConfigure *VideoConfigureInfoForUpdate `json:"VideoConfigure,omitnil,omitempty" name:"VideoConfigure"`

	// Watermark parameter configuration.
	WatermarkConfigure *WatermarkConfigureInfoForUpdate `json:"WatermarkConfigure,omitnil,omitempty" name:"WatermarkConfigure"`

	// Template description, the length is limited to 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

func (r *ModifyJustInTimeTranscodeTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyJustInTimeTranscodeTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "SubAppId")
	delete(f, "VideoConfigure")
	delete(f, "WatermarkConfigure")
	delete(f, "Comment")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyJustInTimeTranscodeTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyJustInTimeTranscodeTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyJustInTimeTranscodeTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyJustInTimeTranscodeTemplateResponseParams `json:"Response"`
}

func (r *ModifyJustInTimeTranscodeTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyJustInTimeTranscodeTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyMediaInfoRequestParams struct {
	// Unique media file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media filename, which can contain up to 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Media file description, which can contain up to 128 characters.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	// Media file category ID.
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// Media file expiration time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). The value `9999-12-31T23:59:59Z` indicates that the media file never expires. After the expiration, the media file and its related resources (such as transcoding results and image sprites) will be permanently deleted.
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// String generated by [Base64-encoding](https://tools.ietf.org/html/rfc4648) the video cover image file (such as .jpeg or .png file). Only .gif, .jpeg, and .png image formats are supported.
	CoverData *string `json:"CoverData,omitnil,omitempty" name:"CoverData"`

	// Set of video timestamps to be added. If a timestamp already exists at an offset time point, it will be overwritten. Up to 100 timestamps can be added to one media file. In the same request, the time offset parameters of `AddKeyFrameDescs` must be different from those of `DeleteKeyFrameDescs`.
	AddKeyFrameDescs []*MediaKeyFrameDescItem `json:"AddKeyFrameDescs,omitnil,omitempty" name:"AddKeyFrameDescs"`

	// Time offset of the set of video timestamps to be deleted in seconds. In the same request, the time offset parameters of `AddKeyFrameDescs` must be different from those of `DeleteKeyFrameDescs`.
	DeleteKeyFrameDescs []*float64 `json:"DeleteKeyFrameDescs,omitnil,omitempty" name:"DeleteKeyFrameDescs"`

	// The value `1` indicates to delete all timestamps in the video. Other values are meaningless.
	// In the same request, `ClearKeyFrameDescs` and `AddKeyFrameDescs` cannot be present at the same time.
	ClearKeyFrameDescs *int64 `json:"ClearKeyFrameDescs,omitnil,omitempty" name:"ClearKeyFrameDescs"`

	// The tags to add. Each file can have up to 16 tags. A tag can contain at most 32 characters. You cannot include the same tag in `AddTags` and `DeleteTags` at the same time.
	AddTags []*string `json:"AddTags,omitnil,omitempty" name:"AddTags"`

	// Set of tags to be deleted. In the same request, the parameters of `AddTags` must be different from those of `DeleteTags`.
	DeleteTags []*string `json:"DeleteTags,omitnil,omitempty" name:"DeleteTags"`

	// The value `1` indicates to delete all tags of the media file. Other values are meaningless.
	// In the same request, `ClearTags` and `AddTags` cannot be present at the same time.
	ClearTags *int64 `json:"ClearTags,omitnil,omitempty" name:"ClearTags"`

	// Information of multiple subtitles to be added. A single media file can have up to 16 subtitles. In the same request, the subtitle IDs specified in `AddSubtitles` must be different from those in `DeleteSubtitleIds`.
	AddSubtitles []*MediaSubtitleInput `json:"AddSubtitles,omitnil,omitempty" name:"AddSubtitles"`

	// Unique IDs of the subtitles to be deleted. In the same request, the subtitle IDs specified in `AddSubtitles` must be different from those in `DeleteSubtitleIds`.
	DeleteSubtitleIds []*string `json:"DeleteSubtitleIds,omitnil,omitempty" name:"DeleteSubtitleIds"`

	// The value `1` indicates to delete all subtitle information of the media file. Other values are meaningless.
	// `ClearSubtitles` and `AddSubtitles` cannot co-exist in the same request.
	ClearSubtitles *int64 `json:"ClearSubtitles,omitnil,omitempty" name:"ClearSubtitles"`
}

type ModifyMediaInfoRequest struct {
	*tchttp.BaseRequest
	
	// Unique media file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media filename, which can contain up to 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Media file description, which can contain up to 128 characters.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	// Media file category ID.
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// Media file expiration time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). The value `9999-12-31T23:59:59Z` indicates that the media file never expires. After the expiration, the media file and its related resources (such as transcoding results and image sprites) will be permanently deleted.
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// String generated by [Base64-encoding](https://tools.ietf.org/html/rfc4648) the video cover image file (such as .jpeg or .png file). Only .gif, .jpeg, and .png image formats are supported.
	CoverData *string `json:"CoverData,omitnil,omitempty" name:"CoverData"`

	// Set of video timestamps to be added. If a timestamp already exists at an offset time point, it will be overwritten. Up to 100 timestamps can be added to one media file. In the same request, the time offset parameters of `AddKeyFrameDescs` must be different from those of `DeleteKeyFrameDescs`.
	AddKeyFrameDescs []*MediaKeyFrameDescItem `json:"AddKeyFrameDescs,omitnil,omitempty" name:"AddKeyFrameDescs"`

	// Time offset of the set of video timestamps to be deleted in seconds. In the same request, the time offset parameters of `AddKeyFrameDescs` must be different from those of `DeleteKeyFrameDescs`.
	DeleteKeyFrameDescs []*float64 `json:"DeleteKeyFrameDescs,omitnil,omitempty" name:"DeleteKeyFrameDescs"`

	// The value `1` indicates to delete all timestamps in the video. Other values are meaningless.
	// In the same request, `ClearKeyFrameDescs` and `AddKeyFrameDescs` cannot be present at the same time.
	ClearKeyFrameDescs *int64 `json:"ClearKeyFrameDescs,omitnil,omitempty" name:"ClearKeyFrameDescs"`

	// The tags to add. Each file can have up to 16 tags. A tag can contain at most 32 characters. You cannot include the same tag in `AddTags` and `DeleteTags` at the same time.
	AddTags []*string `json:"AddTags,omitnil,omitempty" name:"AddTags"`

	// Set of tags to be deleted. In the same request, the parameters of `AddTags` must be different from those of `DeleteTags`.
	DeleteTags []*string `json:"DeleteTags,omitnil,omitempty" name:"DeleteTags"`

	// The value `1` indicates to delete all tags of the media file. Other values are meaningless.
	// In the same request, `ClearTags` and `AddTags` cannot be present at the same time.
	ClearTags *int64 `json:"ClearTags,omitnil,omitempty" name:"ClearTags"`

	// Information of multiple subtitles to be added. A single media file can have up to 16 subtitles. In the same request, the subtitle IDs specified in `AddSubtitles` must be different from those in `DeleteSubtitleIds`.
	AddSubtitles []*MediaSubtitleInput `json:"AddSubtitles,omitnil,omitempty" name:"AddSubtitles"`

	// Unique IDs of the subtitles to be deleted. In the same request, the subtitle IDs specified in `AddSubtitles` must be different from those in `DeleteSubtitleIds`.
	DeleteSubtitleIds []*string `json:"DeleteSubtitleIds,omitnil,omitempty" name:"DeleteSubtitleIds"`

	// The value `1` indicates to delete all subtitle information of the media file. Other values are meaningless.
	// `ClearSubtitles` and `AddSubtitles` cannot co-exist in the same request.
	ClearSubtitles *int64 `json:"ClearSubtitles,omitnil,omitempty" name:"ClearSubtitles"`
}

func (r *ModifyMediaInfoRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyMediaInfoRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Description")
	delete(f, "ClassId")
	delete(f, "ExpireTime")
	delete(f, "CoverData")
	delete(f, "AddKeyFrameDescs")
	delete(f, "DeleteKeyFrameDescs")
	delete(f, "ClearKeyFrameDescs")
	delete(f, "AddTags")
	delete(f, "DeleteTags")
	delete(f, "ClearTags")
	delete(f, "AddSubtitles")
	delete(f, "DeleteSubtitleIds")
	delete(f, "ClearSubtitles")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyMediaInfoRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyMediaInfoResponseParams struct {
	// URL of new video cover.
	// * Note: this returned value is valid only if the request carries `CoverData`.*
	CoverUrl *string `json:"CoverUrl,omitnil,omitempty" name:"CoverUrl"`

	// Added subtitle information
	AddedSubtitleSet []*MediaSubtitleItem `json:"AddedSubtitleSet,omitnil,omitempty" name:"AddedSubtitleSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyMediaInfoResponse struct {
	*tchttp.BaseResponse
	Response *ModifyMediaInfoResponseParams `json:"Response"`
}

func (r *ModifyMediaInfoResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyMediaInfoResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyMediaStorageClassRequestParams struct {
	// Media file unique identifier list, maximum length: 100.
	FileIds []*string `json:"FileIds,omitnil,omitempty" name:"FileIds"`

	// The target storage class. Valid values:
	// <li>STANDARD</li>
	// <li>STANDARD_IA</li>
	// <li>ARCHIVE</li>
	// <li>DEEP_ARCHIVE</li>
	StorageClass *string `json:"StorageClass,omitnil,omitempty" name:"StorageClass"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The retrieval mode. When switching files from DEEP ARCHIVE or ARCHIVE to STANDARD, you need to specify the retrieval mode. For details, see [Data retrieval and retrieval mode](https://intl.cloud.tencent.com/document/product/266/43051#data-retrieval-and-retrieval-mode.3Ca-id.3D.22retake.22.3E.3C.2Fa.3E).
	// If the current storage class is ARCHIVE, the valid values for this parameter are as follows:
	// <li>Expedited</li>
	// <li>Standard</li>
	// <li>Bulk</li>
	// If the current storage class is DEEP ARCHIVE, the valid values for this parameter are as follows:
	// <li>Standard</li>
	// <li>Bulk</li>
	RestoreTier *string `json:"RestoreTier,omitnil,omitempty" name:"RestoreTier"`
}

type ModifyMediaStorageClassRequest struct {
	*tchttp.BaseRequest
	
	// Media file unique identifier list, maximum length: 100.
	FileIds []*string `json:"FileIds,omitnil,omitempty" name:"FileIds"`

	// The target storage class. Valid values:
	// <li>STANDARD</li>
	// <li>STANDARD_IA</li>
	// <li>ARCHIVE</li>
	// <li>DEEP_ARCHIVE</li>
	StorageClass *string `json:"StorageClass,omitnil,omitempty" name:"StorageClass"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The retrieval mode. When switching files from DEEP ARCHIVE or ARCHIVE to STANDARD, you need to specify the retrieval mode. For details, see [Data retrieval and retrieval mode](https://intl.cloud.tencent.com/document/product/266/43051#data-retrieval-and-retrieval-mode.3Ca-id.3D.22retake.22.3E.3C.2Fa.3E).
	// If the current storage class is ARCHIVE, the valid values for this parameter are as follows:
	// <li>Expedited</li>
	// <li>Standard</li>
	// <li>Bulk</li>
	// If the current storage class is DEEP ARCHIVE, the valid values for this parameter are as follows:
	// <li>Standard</li>
	// <li>Bulk</li>
	RestoreTier *string `json:"RestoreTier,omitnil,omitempty" name:"RestoreTier"`
}

func (r *ModifyMediaStorageClassRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyMediaStorageClassRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileIds")
	delete(f, "StorageClass")
	delete(f, "SubAppId")
	delete(f, "RestoreTier")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyMediaStorageClassRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyMediaStorageClassResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyMediaStorageClassResponse struct {
	*tchttp.BaseResponse
	Response *ModifyMediaStorageClassResponseParams `json:"Response"`
}

func (r *ModifyMediaStorageClassResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyMediaStorageClassResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyPersonSampleRequestParams struct {
	// ID of a sample.
	PersonId *string `json:"PersonId,omitnil,omitempty" name:"PersonId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name. Length limit: 128 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description. Length limit: 1,024 characters.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	// Sample usage. Valid values:
	// 1. Recognition: used for content recognition; equivalent to `Recognition.Face`
	// 2. Review: used for inappropriate information recognition; equivalent to `Review.Face`
	// 3. All: used for content recognition and inappropriate information recognition; equivalent to 1+2
	Usages []*string `json:"Usages,omitnil,omitempty" name:"Usages"`

	// Information of operations on facial features.
	FaceOperationInfo *AiSampleFaceOperation `json:"FaceOperationInfo,omitnil,omitempty" name:"FaceOperationInfo"`

	// Tag operation information.
	TagOperationInfo *AiSampleTagOperation `json:"TagOperationInfo,omitnil,omitempty" name:"TagOperationInfo"`
}

type ModifyPersonSampleRequest struct {
	*tchttp.BaseRequest
	
	// ID of a sample.
	PersonId *string `json:"PersonId,omitnil,omitempty" name:"PersonId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name. Length limit: 128 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Description. Length limit: 1,024 characters.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	// Sample usage. Valid values:
	// 1. Recognition: used for content recognition; equivalent to `Recognition.Face`
	// 2. Review: used for inappropriate information recognition; equivalent to `Review.Face`
	// 3. All: used for content recognition and inappropriate information recognition; equivalent to 1+2
	Usages []*string `json:"Usages,omitnil,omitempty" name:"Usages"`

	// Information of operations on facial features.
	FaceOperationInfo *AiSampleFaceOperation `json:"FaceOperationInfo,omitnil,omitempty" name:"FaceOperationInfo"`

	// Tag operation information.
	TagOperationInfo *AiSampleTagOperation `json:"TagOperationInfo,omitnil,omitempty" name:"TagOperationInfo"`
}

func (r *ModifyPersonSampleRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyPersonSampleRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "PersonId")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Description")
	delete(f, "Usages")
	delete(f, "FaceOperationInfo")
	delete(f, "TagOperationInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyPersonSampleRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyPersonSampleResponseParams struct {
	// Information of a sample.
	Person *AiSamplePerson `json:"Person,omitnil,omitempty" name:"Person"`

	// Information of samples that failed the verification by facial feature positioning.
	// Note: this field may return `null`, indicating that no valid values can be obtained.
	FailFaceInfoSet []*AiSampleFailFaceInfo `json:"FailFaceInfoSet,omitnil,omitempty" name:"FailFaceInfoSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyPersonSampleResponse struct {
	*tchttp.BaseResponse
	Response *ModifyPersonSampleResponseParams `json:"Response"`
}

func (r *ModifyPersonSampleResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyPersonSampleResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyQualityInspectTemplateRequestParams struct {
	// Media quality inspection template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media quality inspection template name.Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Frame interval, unit in seconds, minimum value is 1. When not filled, the default frame interval is 1 second.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`

	// Control parameters for detecting video jitter and ghosting.
	JitterConfigure *JitterConfigureInfoForUpdate `json:"JitterConfigure,omitnil,omitempty" name:"JitterConfigure"`

	// Control parameters for detecting video blur.
	BlurConfigure *BlurConfigureInfoForUpdate `json:"BlurConfigure,omitnil,omitempty" name:"BlurConfigure"`

	// Control parameters for detecting low brightness and overexposure of video.
	AbnormalLightingConfigure *AbnormalLightingConfigureInfoForUpdate `json:"AbnormalLightingConfigure,omitnil,omitempty" name:"AbnormalLightingConfigure"`

	// Control parameters for detecting video crash.
	CrashScreenConfigure *CrashScreenConfigureInfoForUpdate `json:"CrashScreenConfigure,omitnil,omitempty" name:"CrashScreenConfigure"`

	// Control parameters for detecting video black edges, white edges, black screen, and white screen.
	BlackWhiteEdgeConfigure *BlackWhiteEdgeConfigureInfoForUpdate `json:"BlackWhiteEdgeConfigure,omitnil,omitempty" name:"BlackWhiteEdgeConfigure"`

	// Control parameters for detecting video noise.
	NoiseConfigure *NoiseConfigureInfoForUpdate `json:"NoiseConfigure,omitnil,omitempty" name:"NoiseConfigure"`

	// Control parameters for detecting video mosaic.
	MosaicConfigure *MosaicConfigureInfoForUpdate `json:"MosaicConfigure,omitnil,omitempty" name:"MosaicConfigure"`

	// Control parameters for QR code detection in video.
	QRCodeConfigure *QRCodeConfigureInfoForUpdate `json:"QRCodeConfigure,omitnil,omitempty" name:"QRCodeConfigure"`

	// Control parameters for audio (mutes, bass, blast sound).
	VoiceConfigure *VoiceConfigureInfoForUpdate `json:"VoiceConfigure,omitnil,omitempty" name:"VoiceConfigure"`

	// Control parameters for video quality evaluation.
	QualityEvaluationConfigure *QualityEvaluationConfigureInfoForUpdate `json:"QualityEvaluationConfigure,omitnil,omitempty" name:"QualityEvaluationConfigure"`
}

type ModifyQualityInspectTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Media quality inspection template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media quality inspection template name.Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Frame interval, unit in seconds, minimum value is 1. When not filled, the default frame interval is 1 second.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`

	// Control parameters for detecting video jitter and ghosting.
	JitterConfigure *JitterConfigureInfoForUpdate `json:"JitterConfigure,omitnil,omitempty" name:"JitterConfigure"`

	// Control parameters for detecting video blur.
	BlurConfigure *BlurConfigureInfoForUpdate `json:"BlurConfigure,omitnil,omitempty" name:"BlurConfigure"`

	// Control parameters for detecting low brightness and overexposure of video.
	AbnormalLightingConfigure *AbnormalLightingConfigureInfoForUpdate `json:"AbnormalLightingConfigure,omitnil,omitempty" name:"AbnormalLightingConfigure"`

	// Control parameters for detecting video crash.
	CrashScreenConfigure *CrashScreenConfigureInfoForUpdate `json:"CrashScreenConfigure,omitnil,omitempty" name:"CrashScreenConfigure"`

	// Control parameters for detecting video black edges, white edges, black screen, and white screen.
	BlackWhiteEdgeConfigure *BlackWhiteEdgeConfigureInfoForUpdate `json:"BlackWhiteEdgeConfigure,omitnil,omitempty" name:"BlackWhiteEdgeConfigure"`

	// Control parameters for detecting video noise.
	NoiseConfigure *NoiseConfigureInfoForUpdate `json:"NoiseConfigure,omitnil,omitempty" name:"NoiseConfigure"`

	// Control parameters for detecting video mosaic.
	MosaicConfigure *MosaicConfigureInfoForUpdate `json:"MosaicConfigure,omitnil,omitempty" name:"MosaicConfigure"`

	// Control parameters for QR code detection in video.
	QRCodeConfigure *QRCodeConfigureInfoForUpdate `json:"QRCodeConfigure,omitnil,omitempty" name:"QRCodeConfigure"`

	// Control parameters for audio (mutes, bass, blast sound).
	VoiceConfigure *VoiceConfigureInfoForUpdate `json:"VoiceConfigure,omitnil,omitempty" name:"VoiceConfigure"`

	// Control parameters for video quality evaluation.
	QualityEvaluationConfigure *QualityEvaluationConfigureInfoForUpdate `json:"QualityEvaluationConfigure,omitnil,omitempty" name:"QualityEvaluationConfigure"`
}

func (r *ModifyQualityInspectTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyQualityInspectTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "ScreenshotInterval")
	delete(f, "JitterConfigure")
	delete(f, "BlurConfigure")
	delete(f, "AbnormalLightingConfigure")
	delete(f, "CrashScreenConfigure")
	delete(f, "BlackWhiteEdgeConfigure")
	delete(f, "NoiseConfigure")
	delete(f, "MosaicConfigure")
	delete(f, "QRCodeConfigure")
	delete(f, "VoiceConfigure")
	delete(f, "QualityEvaluationConfigure")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyQualityInspectTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyQualityInspectTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyQualityInspectTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyQualityInspectTemplateResponseParams `json:"Response"`
}

func (r *ModifyQualityInspectTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyQualityInspectTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyRebuildMediaTemplateRequestParams struct {
	// Rebuild Media Template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *string `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Rebuild Media Template Name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Rebuild media template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Rebuild media video control information.
	RebuildVideoInfo *RebuildVideoInfo `json:"RebuildVideoInfo,omitnil,omitempty" name:"RebuildVideoInfo"`

	// Rebuild media audio control information.
	RebuildAudioInfo *RebuildAudioInfo `json:"RebuildAudioInfo,omitnil,omitempty" name:"RebuildAudioInfo"`

	// The output video parameters.
	TargetVideoInfo *RebuildMediaTargetVideoStream `json:"TargetVideoInfo,omitnil,omitempty" name:"TargetVideoInfo"`

	// The output audio parameters.
	TargetAudioInfo *RebuildMediaTargetAudioStream `json:"TargetAudioInfo,omitnil,omitempty" name:"TargetAudioInfo"`

	// The output container format. Valid values: `mp4`, `flv`, `hls`.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// Whether to remove video data. Valid values:
	// <li>`0`: No</li>
	// <li>`1`: Yes</li>
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data. Valid values:
	// <li>`0`: No</li>
	// <li>`1`: Yes</li>
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`
}

type ModifyRebuildMediaTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Rebuild Media Template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *string `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Rebuild Media Template Name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Rebuild media template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Rebuild media video control information.
	RebuildVideoInfo *RebuildVideoInfo `json:"RebuildVideoInfo,omitnil,omitempty" name:"RebuildVideoInfo"`

	// Rebuild media audio control information.
	RebuildAudioInfo *RebuildAudioInfo `json:"RebuildAudioInfo,omitnil,omitempty" name:"RebuildAudioInfo"`

	// The output video parameters.
	TargetVideoInfo *RebuildMediaTargetVideoStream `json:"TargetVideoInfo,omitnil,omitempty" name:"TargetVideoInfo"`

	// The output audio parameters.
	TargetAudioInfo *RebuildMediaTargetAudioStream `json:"TargetAudioInfo,omitnil,omitempty" name:"TargetAudioInfo"`

	// The output container format. Valid values: `mp4`, `flv`, `hls`.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// Whether to remove video data. Valid values:
	// <li>`0`: No</li>
	// <li>`1`: Yes</li>
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data. Valid values:
	// <li>`0`: No</li>
	// <li>`1`: Yes</li>
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`
}

func (r *ModifyRebuildMediaTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyRebuildMediaTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "RebuildVideoInfo")
	delete(f, "RebuildAudioInfo")
	delete(f, "TargetVideoInfo")
	delete(f, "TargetAudioInfo")
	delete(f, "Container")
	delete(f, "RemoveVideo")
	delete(f, "RemoveAudio")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyRebuildMediaTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyRebuildMediaTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyRebuildMediaTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyRebuildMediaTemplateResponseParams `json:"Response"`
}

func (r *ModifyRebuildMediaTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyRebuildMediaTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyReviewTemplateRequestParams struct {

	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`


	Name *string `json:"Name,omitnil,omitempty" name:"Name"`


	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The violation labels to use. Valid values: <li>`Porn`: Pornographic content</li> <li>`Terror`: Terrorist content</li> <li>`Moan`: Moaning</li>
	Labels []*string `json:"Labels,omitnil,omitempty" name:"Labels"`
}

type ModifyReviewTemplateRequest struct {
	*tchttp.BaseRequest
	
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The violation labels to use. Valid values: <li>`Porn`: Pornographic content</li> <li>`Terror`: Terrorist content</li> <li>`Moan`: Moaning</li>
	Labels []*string `json:"Labels,omitnil,omitempty" name:"Labels"`
}

func (r *ModifyReviewTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyReviewTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "Labels")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyReviewTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyReviewTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyReviewTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyReviewTemplateResponseParams `json:"Response"`
}

func (r *ModifyReviewTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyReviewTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyRoundPlayRequestParams struct {
	// The unique identifier of the playlist.
	RoundPlayId *string `json:"RoundPlayId,omitnil,omitempty" name:"RoundPlayId"`

	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) id. starting from december 25, 2023, for customers who enable vod, if you want to access resources in the vod application (whether it is the default application or a newly created application), you must enter the application id in this field.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The playback start time, in [iso 8601 date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The program list.
	// <Li>Array length limit: 100.</li>.
	RoundPlaylist []*RoundPlayListItemInfo `json:"RoundPlaylist,omitnil,omitempty" name:"RoundPlaylist"`

	// The playlist name (not longer than 64 characters).
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The playlist description (not longer than 256 characters).
	Desc *string `json:"Desc,omitnil,omitempty" name:"Desc"`

	// Playback status, optional values:<li>disabled: stop playback.</li><li>enabled: start playback after the duration has elapsed.</li>.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Play mode, optional values:.
	// <Li>Loop: loop the playlist;</li>.
	// <Li>Linear: single play, stop playback after the playlist finishes.</li>.
	PlayBackMode *string `json:"PlayBackMode,omitnil,omitempty" name:"PlayBackMode"`

	// Expiration time, in iso 8601 format. for details, see [iso date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format). the playback will stop after expiration. "9999-12-31t23:59:59+08:00" means no expiration.
	ExpiredTime *string `json:"ExpiredTime,omitnil,omitempty" name:"ExpiredTime"`
}

type ModifyRoundPlayRequest struct {
	*tchttp.BaseRequest
	
	// The unique identifier of the playlist.
	RoundPlayId *string `json:"RoundPlayId,omitnil,omitempty" name:"RoundPlayId"`

	// <B>VOD [subapplication](https://intl.cloud.tencent.com/document/product/266/14574?from_cn_redirect=1) id. starting from december 25, 2023, for customers who enable vod, if you want to access resources in the vod application (whether it is the default application or a newly created application), you must enter the application id in this field.</b>.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The playback start time, in [iso 8601 date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The program list.
	// <Li>Array length limit: 100.</li>.
	RoundPlaylist []*RoundPlayListItemInfo `json:"RoundPlaylist,omitnil,omitempty" name:"RoundPlaylist"`

	// The playlist name (not longer than 64 characters).
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The playlist description (not longer than 256 characters).
	Desc *string `json:"Desc,omitnil,omitempty" name:"Desc"`

	// Playback status, optional values:<li>disabled: stop playback.</li><li>enabled: start playback after the duration has elapsed.</li>.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Play mode, optional values:.
	// <Li>Loop: loop the playlist;</li>.
	// <Li>Linear: single play, stop playback after the playlist finishes.</li>.
	PlayBackMode *string `json:"PlayBackMode,omitnil,omitempty" name:"PlayBackMode"`

	// Expiration time, in iso 8601 format. for details, see [iso date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format). the playback will stop after expiration. "9999-12-31t23:59:59+08:00" means no expiration.
	ExpiredTime *string `json:"ExpiredTime,omitnil,omitempty" name:"ExpiredTime"`
}

func (r *ModifyRoundPlayRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyRoundPlayRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "RoundPlayId")
	delete(f, "SubAppId")
	delete(f, "StartTime")
	delete(f, "RoundPlaylist")
	delete(f, "Name")
	delete(f, "Desc")
	delete(f, "Status")
	delete(f, "PlayBackMode")
	delete(f, "ExpiredTime")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyRoundPlayRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyRoundPlayResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyRoundPlayResponse struct {
	*tchttp.BaseResponse
	Response *ModifyRoundPlayResponseParams `json:"Response"`
}

func (r *ModifyRoundPlayResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyRoundPlayResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifySampleSnapshotTemplateRequestParams struct {
	// Unique ID of a sampled screencapturing template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of a sampled screencapturing template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Sampled screencapturing type. Valid values:
	// <li>Percent: by percent.</li>
	// <li>Time: by time interval.</li>
	SampleType *string `json:"SampleType,omitnil,omitempty" name:"SampleType"`

	// Sampling interval.
	// <li>If `SampleType` is `Percent`, sampling will be performed at an interval of the specified percentage.</li>
	// <li>If `SampleType` is `Time`, sampling will be performed at the specified time interval in seconds.</li>
	SampleInterval *uint64 `json:"SampleInterval,omitnil,omitempty" name:"SampleInterval"`

	// Image format. Valid values: jpg, png.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// <li>white: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with white color blocks.</li>
	// <li>gauss: fill with Gaussian blur. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with Gaussian blur.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

type ModifySampleSnapshotTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of a sampled screencapturing template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of a sampled screencapturing template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Sampled screencapturing type. Valid values:
	// <li>Percent: by percent.</li>
	// <li>Time: by time interval.</li>
	SampleType *string `json:"SampleType,omitnil,omitempty" name:"SampleType"`

	// Sampling interval.
	// <li>If `SampleType` is `Percent`, sampling will be performed at an interval of the specified percentage.</li>
	// <li>If `SampleType` is `Time`, sampling will be performed at the specified time interval in seconds.</li>
	SampleInterval *uint64 `json:"SampleInterval,omitnil,omitempty" name:"SampleInterval"`

	// Image format. Valid values: jpg, png.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// <li>white: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with white color blocks.</li>
	// <li>gauss: fill with Gaussian blur. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with Gaussian blur.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

func (r *ModifySampleSnapshotTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifySampleSnapshotTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Width")
	delete(f, "Height")
	delete(f, "ResolutionAdaptive")
	delete(f, "SampleType")
	delete(f, "SampleInterval")
	delete(f, "Format")
	delete(f, "Comment")
	delete(f, "FillType")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifySampleSnapshotTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifySampleSnapshotTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifySampleSnapshotTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifySampleSnapshotTemplateResponseParams `json:"Response"`
}

func (r *ModifySampleSnapshotTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifySampleSnapshotTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifySnapshotByTimeOffsetTemplateRequestParams struct {
	// Unique ID of a specified time point screencapturing template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of a time point screencapturing template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Image format. Valid values: jpg, png.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// <li>white: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with white color blocks.</li>
	// <li>gauss: fill with Gaussian blur. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with Gaussian blur.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

type ModifySnapshotByTimeOffsetTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of a specified time point screencapturing template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Name of a time point screencapturing template. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Image format. Valid values: jpg, png.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The following fill types are supported:
	// <li> stretch: stretch. The screenshot will be stretched frame by frame to match the aspect ratio of the source video, which may make the screenshot "shorter" or "longer";</li>
	// <li>black: fill with black. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color blocks.</li>
	// <li>white: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with white color blocks.</li>
	// <li>gauss: fill with Gaussian blur. This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with Gaussian blur.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

func (r *ModifySnapshotByTimeOffsetTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifySnapshotByTimeOffsetTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Width")
	delete(f, "Height")
	delete(f, "ResolutionAdaptive")
	delete(f, "Format")
	delete(f, "Comment")
	delete(f, "FillType")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifySnapshotByTimeOffsetTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifySnapshotByTimeOffsetTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifySnapshotByTimeOffsetTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifySnapshotByTimeOffsetTemplateResponseParams `json:"Response"`
}

func (r *ModifySnapshotByTimeOffsetTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifySnapshotByTimeOffsetTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifySubAppIdInfoRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Subapplication name. Length limit: 40 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Subapplication overview. Length limit: 300 characters.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`
}

type ModifySubAppIdInfoRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Subapplication name. Length limit: 40 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Subapplication overview. Length limit: 300 characters.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`
}

func (r *ModifySubAppIdInfoRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifySubAppIdInfoRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Description")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifySubAppIdInfoRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifySubAppIdInfoResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifySubAppIdInfoResponse struct {
	*tchttp.BaseResponse
	Response *ModifySubAppIdInfoResponseParams `json:"Response"`
}

func (r *ModifySubAppIdInfoResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifySubAppIdInfoResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifySubAppIdStatusRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Subapplication status. Valid values:
	// <li>On: enabled</li>
	// <li>Off: disabled</li>
	// <li>Destroyed: terminated</li>
	// You cannot enable a subapplication whose status is "Destroying". You can enable it after it was terminated.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`
}

type ModifySubAppIdStatusRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Subapplication status. Valid values:
	// <li>On: enabled</li>
	// <li>Off: disabled</li>
	// <li>Destroyed: terminated</li>
	// You cannot enable a subapplication whose status is "Destroying". You can enable it after it was terminated.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`
}

func (r *ModifySubAppIdStatusRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifySubAppIdStatusRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "Status")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifySubAppIdStatusRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifySubAppIdStatusResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifySubAppIdStatusResponse struct {
	*tchttp.BaseResponse
	Response *ModifySubAppIdStatusResponseParams `json:"Response"`
}

func (r *ModifySubAppIdStatusResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifySubAppIdStatusResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifySuperPlayerConfigRequestParams struct {
	// Player configuration name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Type of audio/video played. Valid values:
	// <li>AdaptiveDynamicStreaming</li>
	// <li>Transcode</li>
	// <li>Original</li>
	AudioVideoType *string `json:"AudioVideoType,omitnil,omitempty" name:"AudioVideoType"`

	// Switch of DRM-protected adaptive bitstream playback:
	// <li>ON: enabled, indicating to play back only output adaptive bitstreams protected by DRM;</li>
	// <li>OFF: disabled, indicating to play back unencrypted output adaptive bitstreams.</li>
	DrmSwitch *string `json:"DrmSwitch,omitnil,omitempty" name:"DrmSwitch"`

	// ID of the unencrypted adaptive bitrate streaming template that allows output.
	AdaptiveDynamicStreamingDefinition *uint64 `json:"AdaptiveDynamicStreamingDefinition,omitnil,omitempty" name:"AdaptiveDynamicStreamingDefinition"`

	// Content of the DRM-protected adaptive bitrate streaming template that allows output.
	DrmStreamingsInfo *DrmStreamingsInfoForUpdate `json:"DrmStreamingsInfo,omitnil,omitempty" name:"DrmStreamingsInfo"`

	// ID of the transcoding template allowed for playback
	TranscodeDefinition *uint64 `json:"TranscodeDefinition,omitnil,omitempty" name:"TranscodeDefinition"`

	// ID of the image sprite generating template that allows output.
	ImageSpriteDefinition *uint64 `json:"ImageSpriteDefinition,omitnil,omitempty" name:"ImageSpriteDefinition"`

	// The player displays names for substreams of different resolutions.
	ResolutionNames []*ResolutionNameInfo `json:"ResolutionNames,omitnil,omitempty" name:"ResolutionNames"`

	// Domain name used for playback. If its value is `Default`, the domain name configured in [Default Distribution Configuration](https://intl.cloud.tencent.com/document/product/266/33373?from_cn_redirect=1) will be used.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Scheme used for playback. Valid values:
	// <li>Default: the scheme configured in [Default Distribution Configuration](https://intl.cloud.tencent.com/document/product/266/33373?from_cn_redirect=1) will be used;</li>
	// <li>HTTP;</li>
	// <li>HTTPS.</li>
	Scheme *string `json:"Scheme,omitnil,omitempty" name:"Scheme"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

type ModifySuperPlayerConfigRequest struct {
	*tchttp.BaseRequest
	
	// Player configuration name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Type of audio/video played. Valid values:
	// <li>AdaptiveDynamicStreaming</li>
	// <li>Transcode</li>
	// <li>Original</li>
	AudioVideoType *string `json:"AudioVideoType,omitnil,omitempty" name:"AudioVideoType"`

	// Switch of DRM-protected adaptive bitstream playback:
	// <li>ON: enabled, indicating to play back only output adaptive bitstreams protected by DRM;</li>
	// <li>OFF: disabled, indicating to play back unencrypted output adaptive bitstreams.</li>
	DrmSwitch *string `json:"DrmSwitch,omitnil,omitempty" name:"DrmSwitch"`

	// ID of the unencrypted adaptive bitrate streaming template that allows output.
	AdaptiveDynamicStreamingDefinition *uint64 `json:"AdaptiveDynamicStreamingDefinition,omitnil,omitempty" name:"AdaptiveDynamicStreamingDefinition"`

	// Content of the DRM-protected adaptive bitrate streaming template that allows output.
	DrmStreamingsInfo *DrmStreamingsInfoForUpdate `json:"DrmStreamingsInfo,omitnil,omitempty" name:"DrmStreamingsInfo"`

	// ID of the transcoding template allowed for playback
	TranscodeDefinition *uint64 `json:"TranscodeDefinition,omitnil,omitempty" name:"TranscodeDefinition"`

	// ID of the image sprite generating template that allows output.
	ImageSpriteDefinition *uint64 `json:"ImageSpriteDefinition,omitnil,omitempty" name:"ImageSpriteDefinition"`

	// The player displays names for substreams of different resolutions.
	ResolutionNames []*ResolutionNameInfo `json:"ResolutionNames,omitnil,omitempty" name:"ResolutionNames"`

	// Domain name used for playback. If its value is `Default`, the domain name configured in [Default Distribution Configuration](https://intl.cloud.tencent.com/document/product/266/33373?from_cn_redirect=1) will be used.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Scheme used for playback. Valid values:
	// <li>Default: the scheme configured in [Default Distribution Configuration](https://intl.cloud.tencent.com/document/product/266/33373?from_cn_redirect=1) will be used;</li>
	// <li>HTTP;</li>
	// <li>HTTPS.</li>
	Scheme *string `json:"Scheme,omitnil,omitempty" name:"Scheme"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

func (r *ModifySuperPlayerConfigRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifySuperPlayerConfigRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "SubAppId")
	delete(f, "AudioVideoType")
	delete(f, "DrmSwitch")
	delete(f, "AdaptiveDynamicStreamingDefinition")
	delete(f, "DrmStreamingsInfo")
	delete(f, "TranscodeDefinition")
	delete(f, "ImageSpriteDefinition")
	delete(f, "ResolutionNames")
	delete(f, "Domain")
	delete(f, "Scheme")
	delete(f, "Comment")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifySuperPlayerConfigRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifySuperPlayerConfigResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifySuperPlayerConfigResponse struct {
	*tchttp.BaseResponse
	Response *ModifySuperPlayerConfigResponseParams `json:"Response"`
}

func (r *ModifySuperPlayerConfigResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifySuperPlayerConfigResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyTranscodeTemplateRequestParams struct {
	// Unique ID of transcoding template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The container format. Valid values: `mp4`, `flv`, `hls`, `mp3`, `flac`, `ogg`, `m4a`, `wav` ( `mp3`, `flac`, `ogg`, `m4a`, and `wav` are audio file formats).
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// Transcoding template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Whether to remove video data. Valid values:
	// <li>0: retain</li>
	// <li>1: remove</li>
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data. Valid values:
	// <li>0: retain</li>
	// <li>1: remove</li>
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`

	// Video stream configuration parameter.
	VideoTemplate *VideoTemplateInfoForUpdate `json:"VideoTemplate,omitnil,omitempty" name:"VideoTemplate"`

	// Audio stream configuration parameter.
	AudioTemplate *AudioTemplateInfoForUpdate `json:"AudioTemplate,omitnil,omitempty" name:"AudioTemplate"`

	// TESHD transcoding parameter.
	TEHDConfig *TEHDConfigForUpdate `json:"TEHDConfig,omitnil,omitempty" name:"TEHDConfig"`

	// The segment type. This parameter is valid only if `Container` is `hls`. Valid values:
	// <li>ts: TS segment</li>
	// <li>fmp4: fMP4 segment</li>
	SegmentType *string `json:"SegmentType,omitnil,omitempty" name:"SegmentType"`
}

type ModifyTranscodeTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of transcoding template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The container format. Valid values: `mp4`, `flv`, `hls`, `mp3`, `flac`, `ogg`, `m4a`, `wav` ( `mp3`, `flac`, `ogg`, `m4a`, and `wav` are audio file formats).
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// Transcoding template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Whether to remove video data. Valid values:
	// <li>0: retain</li>
	// <li>1: remove</li>
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data. Valid values:
	// <li>0: retain</li>
	// <li>1: remove</li>
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`

	// Video stream configuration parameter.
	VideoTemplate *VideoTemplateInfoForUpdate `json:"VideoTemplate,omitnil,omitempty" name:"VideoTemplate"`

	// Audio stream configuration parameter.
	AudioTemplate *AudioTemplateInfoForUpdate `json:"AudioTemplate,omitnil,omitempty" name:"AudioTemplate"`

	// TESHD transcoding parameter.
	TEHDConfig *TEHDConfigForUpdate `json:"TEHDConfig,omitnil,omitempty" name:"TEHDConfig"`

	// The segment type. This parameter is valid only if `Container` is `hls`. Valid values:
	// <li>ts: TS segment</li>
	// <li>fmp4: fMP4 segment</li>
	SegmentType *string `json:"SegmentType,omitnil,omitempty" name:"SegmentType"`
}

func (r *ModifyTranscodeTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyTranscodeTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Container")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "RemoveVideo")
	delete(f, "RemoveAudio")
	delete(f, "VideoTemplate")
	delete(f, "AudioTemplate")
	delete(f, "TEHDConfig")
	delete(f, "SegmentType")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyTranscodeTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyTranscodeTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyTranscodeTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyTranscodeTemplateResponseParams `json:"Response"`
}

func (r *ModifyTranscodeTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyTranscodeTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyVodDomainAccelerateConfigRequestParams struct {
	// Domain name for acceleration setting
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Region. Valid values:
	// <li>`Chinese Mainland`</li>
	// <li>`Outside Chinese Mainland`</li>
	// <li>`Global`</li>
	Area *string `json:"Area,omitnil,omitempty" name:"Area"`

	// Whether to enable or disable domain name acceleration for the selected region. Valid values:
	// <li>`Enabled`: enable</li>
	// <li>`Disabled`: disable</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type ModifyVodDomainAccelerateConfigRequest struct {
	*tchttp.BaseRequest
	
	// Domain name for acceleration setting
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Region. Valid values:
	// <li>`Chinese Mainland`</li>
	// <li>`Outside Chinese Mainland`</li>
	// <li>`Global`</li>
	Area *string `json:"Area,omitnil,omitempty" name:"Area"`

	// Whether to enable or disable domain name acceleration for the selected region. Valid values:
	// <li>`Enabled`: enable</li>
	// <li>`Disabled`: disable</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *ModifyVodDomainAccelerateConfigRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyVodDomainAccelerateConfigRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domain")
	delete(f, "Area")
	delete(f, "Status")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyVodDomainAccelerateConfigRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyVodDomainAccelerateConfigResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyVodDomainAccelerateConfigResponse struct {
	*tchttp.BaseResponse
	Response *ModifyVodDomainAccelerateConfigResponseParams `json:"Response"`
}

func (r *ModifyVodDomainAccelerateConfigResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyVodDomainAccelerateConfigResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyVodDomainConfigRequestParams struct {
	// Domain name
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// [Referer hotlink protection](https://intl.cloud.tencent.com/document/product/266/14046?from_cn_redirect=1) policy
	RefererAuthPolicy *RefererAuthPolicy `json:"RefererAuthPolicy,omitnil,omitempty" name:"RefererAuthPolicy"`

	// [Key hotlink protection](https://intl.cloud.tencent.com/document/product/266/14047?from_cn_redirect=1) policy
	UrlSignatureAuthPolicy *UrlSignatureAuthPolicy `json:"UrlSignatureAuthPolicy,omitnil,omitempty" name:"UrlSignatureAuthPolicy"`

	// The QUIC configuration.
	QUICConfig *DomainQUICConfig `json:"QUICConfig,omitnil,omitempty" name:"QUICConfig"`
}

type ModifyVodDomainConfigRequest struct {
	*tchttp.BaseRequest
	
	// Domain name
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// [Referer hotlink protection](https://intl.cloud.tencent.com/document/product/266/14046?from_cn_redirect=1) policy
	RefererAuthPolicy *RefererAuthPolicy `json:"RefererAuthPolicy,omitnil,omitempty" name:"RefererAuthPolicy"`

	// [Key hotlink protection](https://intl.cloud.tencent.com/document/product/266/14047?from_cn_redirect=1) policy
	UrlSignatureAuthPolicy *UrlSignatureAuthPolicy `json:"UrlSignatureAuthPolicy,omitnil,omitempty" name:"UrlSignatureAuthPolicy"`

	// The QUIC configuration.
	QUICConfig *DomainQUICConfig `json:"QUICConfig,omitnil,omitempty" name:"QUICConfig"`
}

func (r *ModifyVodDomainConfigRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyVodDomainConfigRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domain")
	delete(f, "SubAppId")
	delete(f, "RefererAuthPolicy")
	delete(f, "UrlSignatureAuthPolicy")
	delete(f, "QUICConfig")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyVodDomainConfigRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyVodDomainConfigResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyVodDomainConfigResponse struct {
	*tchttp.BaseResponse
	Response *ModifyVodDomainConfigResponseParams `json:"Response"`
}

func (r *ModifyVodDomainConfigResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyVodDomainConfigResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyWatermarkTemplateRequestParams struct {
	// Unique ID of watermarking template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Watermarking template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Origin position. Valid values:
	// <li>TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text;</li>
	// <li>TopRight: the origin of coordinates is in the top-right corner of the video, and the origin of the watermark is in the top-right corner of the image or text;</li>
	// <li>BottomLeft: the origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left corner of the image or text;</li>
	// <li>BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the origin of the watermark is in the bottom-right corner of the image or text.</li>
	CoordinateOrigin *string `json:"CoordinateOrigin,omitnil,omitempty" name:"CoordinateOrigin"`

	// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:
	// <li>If the string ends in %, the `XPos` of the watermark will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width;</li>
	// <li>If the string ends in px, the `XPos` of the watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.</li>
	XPos *string `json:"XPos,omitnil,omitempty" name:"XPos"`

	// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:
	// <li>If the string ends in %, the `YPos` of the watermark will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height;</li>
	// <li>If the string ends in px, the `YPos` of the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.</li>
	YPos *string `json:"YPos,omitnil,omitempty" name:"YPos"`

	// Image watermarking template. This field is valid only for image watermarking templates.
	ImageTemplate *ImageWatermarkInputForUpdate `json:"ImageTemplate,omitnil,omitempty" name:"ImageTemplate"`

	// Text watermarking template. This field is valid only for text watermarking templates.
	TextTemplate *TextWatermarkTemplateInputForUpdate `json:"TextTemplate,omitnil,omitempty" name:"TextTemplate"`

	// SVG watermarking template. This field is only valid for SVG watermarking templates.
	SvgTemplate *SvgWatermarkInputForUpdate `json:"SvgTemplate,omitnil,omitempty" name:"SvgTemplate"`
}

type ModifyWatermarkTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Unique ID of watermarking template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Watermarking template name. Length limit: 64 characters.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Origin position. Valid values:
	// <li>TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text;</li>
	// <li>TopRight: the origin of coordinates is in the top-right corner of the video, and the origin of the watermark is in the top-right corner of the image or text;</li>
	// <li>BottomLeft: the origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left corner of the image or text;</li>
	// <li>BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the origin of the watermark is in the bottom-right corner of the image or text.</li>
	CoordinateOrigin *string `json:"CoordinateOrigin,omitnil,omitempty" name:"CoordinateOrigin"`

	// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:
	// <li>If the string ends in %, the `XPos` of the watermark will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width;</li>
	// <li>If the string ends in px, the `XPos` of the watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.</li>
	XPos *string `json:"XPos,omitnil,omitempty" name:"XPos"`

	// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px formats are supported:
	// <li>If the string ends in %, the `YPos` of the watermark will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height;</li>
	// <li>If the string ends in px, the `YPos` of the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.</li>
	YPos *string `json:"YPos,omitnil,omitempty" name:"YPos"`

	// Image watermarking template. This field is valid only for image watermarking templates.
	ImageTemplate *ImageWatermarkInputForUpdate `json:"ImageTemplate,omitnil,omitempty" name:"ImageTemplate"`

	// Text watermarking template. This field is valid only for text watermarking templates.
	TextTemplate *TextWatermarkTemplateInputForUpdate `json:"TextTemplate,omitnil,omitempty" name:"TextTemplate"`

	// SVG watermarking template. This field is only valid for SVG watermarking templates.
	SvgTemplate *SvgWatermarkInputForUpdate `json:"SvgTemplate,omitnil,omitempty" name:"SvgTemplate"`
}

func (r *ModifyWatermarkTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyWatermarkTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "Name")
	delete(f, "Comment")
	delete(f, "CoordinateOrigin")
	delete(f, "XPos")
	delete(f, "YPos")
	delete(f, "ImageTemplate")
	delete(f, "TextTemplate")
	delete(f, "SvgTemplate")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyWatermarkTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyWatermarkTemplateResponseParams struct {
	// Image watermark address. This field has a value only when `ImageTemplate.ImageContent` is not empty.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ImageUrl *string `json:"ImageUrl,omitnil,omitempty" name:"ImageUrl"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyWatermarkTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ModifyWatermarkTemplateResponseParams `json:"Response"`
}

func (r *ModifyWatermarkTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyWatermarkTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyWordSampleRequestParams struct {
	// Keyword. Length limit: 128 characters.
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// <b>Keyword usage. Valid values:</b>
	// 1. Recognition.Ocr: OCR-based content recognition
	// 2. Recognition.Asr: ASR-based content recognition
	// 3. Review.Ocr: OCR-based inappropriate information recognition
	// 4. Review.Asr: ASR-based inappropriate information recognition
	// <b>Valid values can also be:</b>
	// 5. Recognition: ASR- and OCR-based content recognition; equivalent to 1+2
	// 6. Review: ASR- and OCR-based inappropriate information recognition; equivalent to 3+4
	// 7. All: equivalent to 1+2+3+4
	Usages []*string `json:"Usages,omitnil,omitempty" name:"Usages"`

	// Tag operation information.
	TagOperationInfo *AiSampleTagOperation `json:"TagOperationInfo,omitnil,omitempty" name:"TagOperationInfo"`
}

type ModifyWordSampleRequest struct {
	*tchttp.BaseRequest
	
	// Keyword. Length limit: 128 characters.
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// <b>Keyword usage. Valid values:</b>
	// 1. Recognition.Ocr: OCR-based content recognition
	// 2. Recognition.Asr: ASR-based content recognition
	// 3. Review.Ocr: OCR-based inappropriate information recognition
	// 4. Review.Asr: ASR-based inappropriate information recognition
	// <b>Valid values can also be:</b>
	// 5. Recognition: ASR- and OCR-based content recognition; equivalent to 1+2
	// 6. Review: ASR- and OCR-based inappropriate information recognition; equivalent to 3+4
	// 7. All: equivalent to 1+2+3+4
	Usages []*string `json:"Usages,omitnil,omitempty" name:"Usages"`

	// Tag operation information.
	TagOperationInfo *AiSampleTagOperation `json:"TagOperationInfo,omitnil,omitempty" name:"TagOperationInfo"`
}

func (r *ModifyWordSampleRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyWordSampleRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Keyword")
	delete(f, "SubAppId")
	delete(f, "Usages")
	delete(f, "TagOperationInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyWordSampleRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyWordSampleResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyWordSampleResponse struct {
	*tchttp.BaseResponse
	Response *ModifyWordSampleResponseParams `json:"Response"`
}

func (r *ModifyWordSampleResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyWordSampleResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type MosaicConfigureInfo struct {
	// Video mosaic inspection switch, optional values:
	// <li>ON: enabled;</li>
	// <li>OFF: disabled.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type MosaicConfigureInfoForUpdate struct {
	// Video mosaic inspection switch, optional values:
	// <li>ON: enabled;</li>
	// <li>OFF: disabled.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type MosaicInput struct {
	// Origin position, which currently can only be:
	// <li>TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the blur is in the top-left corner of the image or text.</li>
	// Default value: TopLeft.
	CoordinateOrigin *string `json:"CoordinateOrigin,omitnil,omitempty" name:"CoordinateOrigin"`

	// The horizontal position of the origin of the blur relative to the origin of coordinates of the video. % and px formats are supported:
	// <li>If the string ends in %, the `XPos` of the blur will be the specified percentage of the video width; for example, `10%` means that `XPos` is 10% of the video width;</li>
	// <li>If the string ends in px, the `XPos` of the blur will be the specified px; for example, `100px` means that `XPos` is 100 px.</li>
	// Default value: 0 px.
	XPos *string `json:"XPos,omitnil,omitempty" name:"XPos"`

	// Vertical position of the origin of blur relative to the origin of coordinates of video. % and px formats are supported:
	// <li>If the string ends in %, the `YPos` of the blur will be the specified percentage of the video height; for example, `10%` means that `YPos` is 10% of the video height;</li>
	// <li>If the string ends in px, the `YPos` of the blur will be the specified px; for example, `100px` means that `YPos` is 100 px.</li>
	// Default value: 0 px.
	YPos *string `json:"YPos,omitnil,omitempty" name:"YPos"`

	// Blur width. % and px formats are supported:
	// <li>If the string ends in %, the `Width` of the blur will be the specified percentage of the video width; for example, `10%` means that `Width` is 10% of the video width;</li>
	// <li>If the string ends in px, the `Width` of the blur will be in px; for example, `100px` means that `Width` is 100 px.</li>
	// Default value: 10%.
	Width *string `json:"Width,omitnil,omitempty" name:"Width"`

	// Blur height. % and px formats are supported:
	// <li>If the string ends in %, the `Height` of the blur will be the specified percentage of the video height; for example, `10%` means that `Height` is 10% of the video height;</li>
	// <li>If the string ends in px, the `Height` of the blur will be in px; for example, `100px` means that `Height` is 100 px.</li>
	// Default value: 10%.
	Height *string `json:"Height,omitnil,omitempty" name:"Height"`

	// Start time offset of blur in seconds. If this parameter is left empty or 0 is entered, the blur will appear upon the first video frame.
	// <li>If this parameter is left empty or 0 is entered, the blur will appear upon the first video frame;</li>
	// <li>If this value is greater than 0 (e.g., n), the blur will appear at second n after the first video frame;</li>
	// <li>If this value is smaller than 0 (e.g., -n), the blur will appear at second n before the last video frame.</li>
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of blur in seconds.
	// <li>If this parameter is left empty or 0 is entered, the blur will exist till the last video frame;</li>
	// <li>If this value is greater than 0 (e.g., n), the blur will exist till second n;</li>
	// <li>If this value is smaller than 0 (e.g., -n), the blur will exist till second n before the last video frame.</li>
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`
}

type NoiseConfigureInfo struct {
	// Video noise inspection switch, optional values:
	// <li>ON: enabled;</li>
	// <li>OFF: disabled.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type NoiseConfigureInfoForUpdate struct {
	// Video noise inspection switch, optional values:
	// <li>ON: enabled;</li>
	// <li>OFF: disabled.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type ObjectConfigureInfo struct {
	// Switch of object recognition task. Valid values:
	// <li>ON: enables intelligent object recognition task;</li>
	// <li>OFF: disables intelligent object recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Object library. Valid values:
	// <li>Default: default object library;</li>
	// <li>UserDefine: custom object library.</li>
	// <li>All: both default and custom object libraries will be used.</li>
	// Default value: All, i.e., both default and custom object libraries will be used.
	ObjectLibrary *string `json:"ObjectLibrary,omitnil,omitempty" name:"ObjectLibrary"`
}

type ObjectConfigureInfoForUpdate struct {
	// Switch of object recognition task. Valid values:
	// <li>ON: enables intelligent object recognition task;</li>
	// <li>OFF: disables intelligent object recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Object library. Valid values:
	// <li>Default: default object library;</li>
	// <li>UserDefine: custom object library.</li>
	// <li>All: both default and custom object libraries will be used.</li>
	ObjectLibrary *string `json:"ObjectLibrary,omitnil,omitempty" name:"ObjectLibrary"`
}

type OcrFullTextConfigureInfo struct {
	// Switch of full text recognition task. Valid values:
	// <li>ON: enables intelligent full text recognition task;</li>
	// <li>OFF: disables intelligent full text recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type OcrFullTextConfigureInfoForUpdate struct {
	// Switch of full text recognition task. Valid values:
	// <li>ON: enables intelligent full text recognition task;</li>
	// <li>OFF: disables intelligent full text recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type OcrWordsConfigureInfo struct {
	// Switch of text keyword recognition task. Valid values:
	// <li>ON: enables text keyword recognition task;</li>
	// <li>OFF: disables text keyword recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Keyword filter tag, which specifies the keyword tag that needs to be returned. If this parameter is left empty, all results will be returned.
	// There can be up to 10 tags, each with a length limit of 16 characters.
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`
}

type OcrWordsConfigureInfoForUpdate struct {
	// Switch of text keyword recognition task. Valid values:
	// <li>ON: enables text keyword recognition task;</li>
	// <li>OFF: disables text keyword recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Keyword filter tag, which specifies the keyword tag that needs to be returned. If this parameter is left empty or a blank value is entered, all results will be returned.
	// There can be up to 10 tags, each with a length limit of 16 characters.
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`
}

type Origin struct {
	// List of main origin sites. When modifying the main origin site, the corresponding OriginType needs to be filled in at the same time.
	Origins []*string `json:"Origins,omitnil,omitempty" name:"Origins"`

	// Main origin site type, input parameters support the following types: <li>domain: domain name type;</li> <li>ip: IP list as the origin site;</li> <li>third_party: third-party storage origin site . </li>
	OriginType *string `json:"OriginType,omitnil,omitempty" name:"OriginType"`

	// When returning to the main origin server, the Host header will default to the accelerated domain name if it is not filled in. When the origin server type is object storage, the ServerName field is required.
	ServerName *string `json:"ServerName,omitnil,omitempty" name:"ServerName"`

	// Back-to-origin protocol configuration: <li>http: Forces HTTP back-to-origin;</li> <li>follow: The protocol follows back-to-origin;</li> <li>https: Forces https back-to-origin, and https back-to-origin only supports origin. Station port 443. </li>
	OriginPullProtocol *string `json:"OriginPullProtocol,omitnil,omitempty" name:"OriginPullProtocol"`

	// Backup source site list. When modifying the backup origin site, the corresponding OriginType needs to be filled in at the same time.
	BackupOrigins []*string `json:"BackupOrigins,omitnil,omitempty" name:"BackupOrigins"`

	// Backup origin site type, input parameters support the following types: <li>domain: domain name type;</li> <li>ip: IP list as the origin site;</li> <li>third_party: third-party storage origin site . </li>
	BackupOriginType *string `json:"BackupOriginType,omitnil,omitempty" name:"BackupOriginType"`

	// Host header used when accessing the backup origin server. If it is left empty, the ServerName of primary origin server will be used by default. Note: This field may return null, indicating that no valid value can be obtained.
	BackupServerName *string `json:"BackupServerName,omitnil,omitempty" name:"BackupServerName"`

	// Object storage back to the origin vendor. Required when the origin site type is a third-party storage origin site (third_party). Optional values u200bu200binclude the following: <li>aws_s3: AWS S3;</li> <li>ali_oss: Alibaba Cloud OSS; </li> <li>hw_obs: Huawei OBS;</li> <li>others: object storage from other manufacturers, only supports object storage compatible with AWS signature algorithm, such as Tencent Cloud COS. </li>
	OriginCompany *string `json:"OriginCompany,omitnil,omitempty" name:"OriginCompany"`
}

type OssPrivateAccess struct {
	// Alibaba Cloud OSS return-to-origin authentication configuration switch, the values u200bu200bare: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Access ID.
	AccessKey *string `json:"AccessKey,omitnil,omitempty" name:"AccessKey"`

	// Key.
	SecretKey *string `json:"SecretKey,omitnil,omitempty" name:"SecretKey"`

	// Region.
	Region *string `json:"Region,omitnil,omitempty" name:"Region"`

	// BucketName.
	Bucket *string `json:"Bucket,omitnil,omitempty" name:"Bucket"`
}

type OthersPrivateAccess struct {
	// Other manufacturers' object storage back-to-origin authentication configuration switch, the values u200bu200bare: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Access ID.
	AccessKey *string `json:"AccessKey,omitnil,omitempty" name:"AccessKey"`

	// Key.
	SecretKey *string `json:"SecretKey,omitnil,omitempty" name:"SecretKey"`

	// Region.
	Region *string `json:"Region,omitnil,omitempty" name:"Region"`

	// Bucket name
	Bucket *string `json:"Bucket,omitnil,omitempty" name:"Bucket"`
}

type OutputAudioStream struct {
	// Audio stream encoder. Valid values:
	// <li>libfdk_aac: suitable for mp4 files.</li>
	// Default value: libfdk_aac.
	Codec *string `json:"Codec,omitnil,omitempty" name:"Codec"`

	// Audio stream sample rate. Valid values:
	// <li>16,000</li>
	// <li>32,000</li>
	// <li>44,100</li>
	// <li>48,000</li>
	// In Hz.
	// Default value: 16,000.
	SampleRate *int64 `json:"SampleRate,omitnil,omitempty" name:"SampleRate"`

	// Number of sound channels. Valid values:
	// <li>1: mono.</li>
	// <li>2: dual</li>
	// Default value: 2.
	AudioChannel *int64 `json:"AudioChannel,omitnil,omitempty" name:"AudioChannel"`

	// The bit rate of the audio stream, value range: 0 and [26, 256], unit: kbps. 
	// When the value is 0, the audio bitrate will be automatically set.
	Bitrate *int64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`
}

type OutputVideoStream struct {
	// Video stream encoder. Valid values:
	// <li>libx264: H.264</li>
	// Default value: libx264.
	Codec *string `json:"Codec,omitnil,omitempty" name:"Codec"`

	// Video frame rate in Hz. Value range: [0, 60].
	// Default value: 0, which means that the value is the same as the video frame rate of the first video segment in the first video track.
	Fps *int64 `json:"Fps,omitnil,omitempty" name:"Fps"`
}

// Predefined struct for user
type ParseStreamingManifestRequestParams struct {
	// Index file content to be parsed.
	MediaManifestContent *string `json:"MediaManifestContent,omitnil,omitempty" name:"MediaManifestContent"`

	// Video index file format, which is `m3u8` by default.
	// <li>m3u8</li>
	// <li>mpd</li>
	ManifestType *string `json:"ManifestType,omitnil,omitempty" name:"ManifestType"`
}

type ParseStreamingManifestRequest struct {
	*tchttp.BaseRequest
	
	// Index file content to be parsed.
	MediaManifestContent *string `json:"MediaManifestContent,omitnil,omitempty" name:"MediaManifestContent"`

	// Video index file format, which is `m3u8` by default.
	// <li>m3u8</li>
	// <li>mpd</li>
	ManifestType *string `json:"ManifestType,omitnil,omitempty" name:"ManifestType"`
}

func (r *ParseStreamingManifestRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ParseStreamingManifestRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MediaManifestContent")
	delete(f, "ManifestType")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ParseStreamingManifestRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ParseStreamingManifestResponseParams struct {
	// Segment file list.
	MediaSegmentSet []*string `json:"MediaSegmentSet,omitnil,omitempty" name:"MediaSegmentSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ParseStreamingManifestResponse struct {
	*tchttp.BaseResponse
	Response *ParseStreamingManifestResponseParams `json:"Response"`
}

func (r *ParseStreamingManifestResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ParseStreamingManifestResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type PersistenceCompleteTask struct {
	// File ID of new media generated by persistence.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The source of persistence.
	// <li>SimpleHlsClip: from SimpleHlsClip API;</li>
	// <li>FastEditMedia: from FastEditMedia API;</li>
	// <li>LiveRealTimeClip: from LiveRealTimeClip API.</li>
	PersistenceSource *string `json:"PersistenceSource,omitnil,omitempty" name:"PersistenceSource"`
}

type PlayStatFileInfo struct {
	// Date of playback statistics in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	Date *string `json:"Date,omitnil,omitempty" name:"Date"`

	// URL of a playback statistics file, including the following contents:
	// <li> date: playback date</li>
	// <li> file_id: video file ID</li>
	// <li> ip_count: number of client IPs after deduplication</li>
	// <li> flux: playback traffic in bytes</li>
	// <li> play_times: total playback times</li>
	// <li> pc_play_times: playback times on PC clients</li>
	// <li> mobile_play_times: playback times on mobile clients</li>
	// <li> iphone_play_times: playback times on iPhone</li>
	// <li> android_play_times: playback times on Android</li>
	// <li> host_name: domain name</li>
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`
}

type PlayStatInfo struct {
	// The start time (in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I)) of the data returned. For example, if the granularity is a day, `2018-12-01T00:00:00+08:00` indicates that the data is for the period between December 1, 2018 (inclusive) and December 2, 2018 (exclusive).
	// <li>If the granularity is an hour, `2019-08-22T00:00:00+08:00` indicates the data is for the period between 00:00 and 01:00 AM on August 22, 2019.</li>
	// <li>If the granularity is a day, `2019-08-22T00:00:00+08:00` indicates the data is for August 22, 2019.</li>
	Time *string `json:"Time,omitnil,omitempty" name:"Time"`

	// The ID of the media file.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The playback times.
	PlayTimes *uint64 `json:"PlayTimes,omitnil,omitempty" name:"PlayTimes"`

	// The traffic (in bytes) consumed for playback.
	Traffic *uint64 `json:"Traffic,omitnil,omitempty" name:"Traffic"`
}

type PlayerConfig struct {
	// Player configuration name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Player configuration type. Valid values:
	// <li>Preset: preset configuration;</li>
	// <li>Custom: custom configuration.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The type of audio/video played. Valid values:
	// <li>AdaptiveDynamicStreaming: Adaptive bitrate stream</li>
	// <li>Transcode: Transcoded stream</li>
	// <li>Original: The original stream</li>
	AudioVideoType *string `json:"AudioVideoType,omitnil,omitempty" name:"AudioVideoType"`

	// Switch of DRM-protected adaptive bitstream playback:
	// <li>ON: enabled, indicating to play back only output adaptive bitstreams protected by DRM;</li>
	// <li>OFF: disabled, indicating to play back unencrypted output adaptive bitstreams.</li>
	DrmSwitch *string `json:"DrmSwitch,omitnil,omitempty" name:"DrmSwitch"`

	// ID of the unencrypted adaptive bitrate streaming template that allows output.
	AdaptiveDynamicStreamingDefinition *uint64 `json:"AdaptiveDynamicStreamingDefinition,omitnil,omitempty" name:"AdaptiveDynamicStreamingDefinition"`

	// Content of the DRM-protected adaptive bitrate streaming template that allows output.
	DrmStreamingsInfo *DrmStreamingsInfo `json:"DrmStreamingsInfo,omitnil,omitempty" name:"DrmStreamingsInfo"`

	// The ID of the transcoding template allowed.
	TranscodeDefinition *uint64 `json:"TranscodeDefinition,omitnil,omitempty" name:"TranscodeDefinition"`

	// ID of the image sprite generating template that allows output.
	ImageSpriteDefinition *uint64 `json:"ImageSpriteDefinition,omitnil,omitempty" name:"ImageSpriteDefinition"`

	// Display name of player for substreams with different resolutions.
	ResolutionNameSet []*ResolutionNameInfo `json:"ResolutionNameSet,omitnil,omitempty" name:"ResolutionNameSet"`

	// Creation time of player configuration in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time of player configuration in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// Domain name used for playback. If its value is `Default`, the domain name configured in [Default Distribution Configuration](https://intl.cloud.tencent.com/document/product/266/33373?from_cn_redirect=1) will be used.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Scheme used for playback. Valid values:
	// <li>Default: the scheme configured in [Default Distribution Configuration](https://intl.cloud.tencent.com/document/product/266/33373?from_cn_redirect=1) will be used;</li>
	// <li>HTTP;</li>
	// <li>HTTPS.</li>
	Scheme *string `json:"Scheme,omitnil,omitempty" name:"Scheme"`

	// Template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`
}

type PoliticalAsrReviewTemplateInfo struct {
	// Whether to enable ASR-based recognition of politically sensitive content. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `75` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `100` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`
}

type PoliticalAsrReviewTemplateInfoForUpdate struct {
	// Whether to enable ASR-based recognition of politically sensitive content. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type PoliticalConfigureInfo struct {
	// Parameters for recognition of politically sensitive content in images
	// Note: This field may return `null`, indicating that no valid value can be found.
	ImgReviewInfo *PoliticalImgReviewTemplateInfo `json:"ImgReviewInfo,omitnil,omitempty" name:"ImgReviewInfo"`

	// Parameters for ASR-based recognition of politically sensitive content
	// Note: This field may return `null`, indicating that no valid value can be found.
	AsrReviewInfo *PoliticalAsrReviewTemplateInfo `json:"AsrReviewInfo,omitnil,omitempty" name:"AsrReviewInfo"`

	// Parameters for OCR-based recognition of politically sensitive content
	// Note: This field may return `null`, indicating that no valid value can be found.
	OcrReviewInfo *PoliticalOcrReviewTemplateInfo `json:"OcrReviewInfo,omitnil,omitempty" name:"OcrReviewInfo"`
}

type PoliticalConfigureInfoForUpdate struct {
	// Parameters for recognition of politically sensitive content in images
	ImgReviewInfo *PoliticalImgReviewTemplateInfoForUpdate `json:"ImgReviewInfo,omitnil,omitempty" name:"ImgReviewInfo"`

	// Parameters for ASR-based recognition of politically sensitive content
	AsrReviewInfo *PoliticalAsrReviewTemplateInfoForUpdate `json:"AsrReviewInfo,omitnil,omitempty" name:"AsrReviewInfo"`

	// Parameters for OCR-based recognition of politically sensitive content
	OcrReviewInfo *PoliticalOcrReviewTemplateInfoForUpdate `json:"OcrReviewInfo,omitnil,omitempty" name:"OcrReviewInfo"`
}

type PoliticalImageResult struct {
	// The confidence score for the moderation result. Value range: 0-100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// The suggestion for handling the detected politically sensitive content. Valid values:
	// <li>pass/li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// The name of the politically sensitive content or banned icon detected.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The coordinates (pixel) of the top-left and bottom-right corners of the frame where the politically sensitive content or banned icon appears. Format: [x1, y1, x2, y2].
	AreaCoordSet []*int64 `json:"AreaCoordSet,omitnil,omitempty" name:"AreaCoordSet"`
}

type PoliticalImgReviewTemplateInfo struct {
	// Whether to enable recognition of politically sensitive content in images. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Filter labels for recognition of politically sensitive content in images. Results containing the specified labels are returned. If no labels are specified, all results are returned. Valid values:
	// <li>`violation_photo`: banned images</li>
	// <li>`politician`: politically sensitive people</li>
	// <li>`entertainment`: people in the entertainment industry</li>
	// <li>`sport`: sportspeople</li>
	// <li>`entrepreneur`: businesspeople</li>
	// <li>`scholar`: scholars</li>
	// <li>`celebrity`: celebrities</li>
	// <li>`military`: people in military</li>
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `97` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `95` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type PoliticalImgReviewTemplateInfoForUpdate struct {
	// Whether to enable recognition of politically sensitive content in images. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Filter labels for recognition of politically sensitive content in images. Results containing the specified labels are returned. If no labels are specified, all results are returned. Valid values:
	// <li>`violation_photo`: banned images</li>
	// <li>`politician`: politically sensitive people</li>
	// <li>`entertainment`: people in the entertainment industry</li>
	// <li>`sport`: sportspeople</li>
	// <li>`entrepreneur`: businesspeople</li>
	// <li>`scholar`: scholars</li>
	// <li>`celebrity`: celebrities</li>
	// <li>`military`: people in military</li>
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type PoliticalOcrReviewTemplateInfo struct {
	// Whether to enable OCR-based recognition of politically sensitive content. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `100` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `75` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type PoliticalOcrReviewTemplateInfoForUpdate struct {
	// Whether to enable OCR-based recognition of politically sensitive content. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type PornAsrReviewTemplateInfo struct {
	// Whether to enable ASR-based recognition of pornographic content. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `100` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `75` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type PornAsrReviewTemplateInfoForUpdate struct {
	// Whether to enable ASR-based recognition of pornographic content. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type PornConfigureInfo struct {
	// Parameters for recognition of pornographic content in images
	// Note: This field may return `null`, indicating that no valid value can be found.
	ImgReviewInfo *PornImgReviewTemplateInfo `json:"ImgReviewInfo,omitnil,omitempty" name:"ImgReviewInfo"`

	// Parameters for ASR-based recognition of pornographic content
	// Note: This field may return `null`, indicating that no valid value can be found.
	AsrReviewInfo *PornAsrReviewTemplateInfo `json:"AsrReviewInfo,omitnil,omitempty" name:"AsrReviewInfo"`

	// Parameters for OCR-based recognition of pornographic content
	// Note: This field may return `null`, indicating that no valid value can be found.
	OcrReviewInfo *PornOcrReviewTemplateInfo `json:"OcrReviewInfo,omitnil,omitempty" name:"OcrReviewInfo"`
}

type PornConfigureInfoForUpdate struct {
	// Parameters for recognition of pornographic content in images
	ImgReviewInfo *PornImgReviewTemplateInfoForUpdate `json:"ImgReviewInfo,omitnil,omitempty" name:"ImgReviewInfo"`

	// Parameters for ASR-based recognition of pornographic content
	AsrReviewInfo *PornAsrReviewTemplateInfoForUpdate `json:"AsrReviewInfo,omitnil,omitempty" name:"AsrReviewInfo"`

	// Parameters for OCR-based recognition of pornographic content
	OcrReviewInfo *PornOcrReviewTemplateInfoForUpdate `json:"OcrReviewInfo,omitnil,omitempty" name:"OcrReviewInfo"`
}

type PornImageResult struct {
	// The confidence score for the moderation result. Value range: 0-100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// The suggestion for handling the detected pornographic content. Valid values:
	// <li>pass/li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// The label for the detected pornographic content. Valid values:
	// <li>porn</li>
	// <li>sexy</li>
	// <li>vulgar</li>
	// <li>intimacy</li>
	Label *string `json:"Label,omitnil,omitempty" name:"Label"`
}

type PornImgReviewTemplateInfo struct {
	// Whether to enable recognition of pornographic content in images. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Filter labels for recognition of pornographic content in images. Results containing the specified labels are returned. If no labels are specified, all results are returned. Valid values:
	// <li>porn</li>
	// <li>vulgar</li>
	// <li>intimacy</li>
	// <li>sexy</li>
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `90` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `0` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type PornImgReviewTemplateInfoForUpdate struct {
	// Whether to enable recognition of pornographic content in images. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Filter labels for recognition of pornographic content in images. Results containing the specified labels are returned. If no labels are specified, all results are returned. Valid values:
	// <li>porn</li>
	// <li>vulgar</li>
	// <li>intimacy</li>
	// <li>sexy</li>
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type PornOcrReviewTemplateInfo struct {
	// Whether to enable OCR-based recognition of pornographic content. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `100` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `75` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type PornOcrReviewTemplateInfoForUpdate struct {
	// Whether to enable OCR-based recognition of pornographic content. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Threshold score for violation. If this score is reached or exceeded during intelligent audit, it will be deemed that a suspected violation has occurred. Value range: 0–100.
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Threshold score for human audit. If this score is reached or exceeded during intelligent audit, human audit will be considered necessary. Value range: 0–100.
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type ProcedureReviewAudioVideoTaskInput struct {
	// The moderation template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The type of moderated content. Valid values:
	// <li>`Media`: The original audio/video.</li>
	// <li>`Cover`: Thumbnails.</li>
	// If this parameter is not specified or an empty array is passed in, `Media` will be used.
	ReviewContents []*string `json:"ReviewContents,omitnil,omitempty" name:"ReviewContents"`
}

type ProcedureTask struct {
	// Video processing task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Task flow status. Valid values:
	// <li>PROCESSING: processing;</li>
	// <li>FINISH: completed.</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Disused. Please use `ErrCode` of each specific task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Disused. Please use `Message` of each specific task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Media file ID.
	// <li>If the task flow is initiated by [ProcessMedia](https://cloud.tencent.com/document/product/266/33427), this field means the `FileId` in [MediaInfo](https://cloud.tencent.com/document/product/266/31773#MediaInfo);</li>
	// <li>If the task flow is initiated by [ProcessMediaByUrl](https://cloud.tencent.com/document/product/266/33426), this field means the `Id` in [MediaInputInfo](https://cloud.tencent.com/document/product/266/31773#MediaInputInfo).</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Media filename
	// <li>If the task flow is initiated by [ProcessMedia](https://cloud.tencent.com/document/product/266/33427), this field means the `BasicInfo.Name` in [MediaInfo](https://cloud.tencent.com/document/product/266/31773#MediaInfo);</li>
	// <li>If the task flow is initiated by [ProcessMediaByUrl](https://cloud.tencent.com/document/product/266/33426), this field means the `Name` in [MediaInputInfo](https://cloud.tencent.com/document/product/266/31773#MediaInputInfo).</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileName *string `json:"FileName,omitnil,omitempty" name:"FileName"`

	// Media file address
	// <li>If the task flow is initiated by [ProcessMedia](https://cloud.tencent.com/document/product/266/33427), this field means the `BasicInfo.MediaUrl` in [MediaInfo](https://cloud.tencent.com/document/product/266/31773#MediaInfo);</li>
	// <li>If the task flow is initiated by [ProcessMediaByUrl](https://cloud.tencent.com/document/product/266/33426), this field means the `Url` in [MediaInputInfo](https://cloud.tencent.com/document/product/266/31773#MediaInputInfo).</li>
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// Source video metadata.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`

	// Execution status and result of video processing task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	MediaProcessResultSet []*MediaProcessTaskResult `json:"MediaProcessResultSet,omitnil,omitempty" name:"MediaProcessResultSet"`

	// Status and result of an intelligent recognition task
	AiContentReviewResultSet []*AiContentReviewResult `json:"AiContentReviewResultSet,omitnil,omitempty" name:"AiContentReviewResultSet"`

	// Execution status and result of video content analysis task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AiAnalysisResultSet []*AiAnalysisResult `json:"AiAnalysisResultSet,omitnil,omitempty" name:"AiAnalysisResultSet"`

	// Execution status and result of video content recognition task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AiRecognitionResultSet []*AiRecognitionResult `json:"AiRecognitionResultSet,omitnil,omitempty" name:"AiRecognitionResultSet"`

	// Task flow priority. Value range: [-10, 10].
	// Note: this field may return null, indicating that no valid values can be obtained.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// Notification mode for change in task flow status.
	// <li>Finish: an event notification will be initiated only after the task flow is completely executed;</li>
	// <li>Change: an event notification will be initiated as soon as the status of a subtask in the task flow changes; </li>
	// <li>None: no callback for the task flow will be accepted.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	TasksNotifyMode *string `json:"TasksNotifyMode,omitnil,omitempty" name:"TasksNotifyMode"`

	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The ID used for deduplication. If there was a request with the same ID in the last seven days, the current request will return an error. The ID can contain up to 50 characters. If this parameter is left empty or a blank string is entered, no deduplication will be performed.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The operator. Valid values:
	// <li>`SYSTEM`: The task is triggered by the system.</li>
	Operator *string `json:"Operator,omitnil,omitempty" name:"Operator"`

	// The operation type. Valid values:
	// <li>`TSC`: TSC-based smart bitrate reduction</li>
	OperationType *string `json:"OperationType,omitnil,omitempty" name:"OperationType"`
}

type ProcedureTemplate struct {
	// Task flow name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Type of a task flow template. Valid values:
	// <li>Preset: preset task flow template;</li>
	// <li>Custom: custom task flow template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Parameter of video processing task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	MediaProcessTask *MediaProcessTaskInput `json:"MediaProcessTask,omitnil,omitempty" name:"MediaProcessTask"`

	// The information of the intelligent moderation task\*.
	// <font color=red>\*: This parameter is used by our old moderation templates and is not recommended. Please use `ReviewAudioVideoTask` instead.</font> 
	// Note: This field may return null, indicating that no valid values can be obtained.
	AiContentReviewTask *AiContentReviewTaskInput `json:"AiContentReviewTask,omitnil,omitempty" name:"AiContentReviewTask"`

	// Parameter of AI-based content analysis task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AiAnalysisTask *AiAnalysisTaskInput `json:"AiAnalysisTask,omitnil,omitempty" name:"AiAnalysisTask"`

	// Type parameter of AI-based content recognition task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AiRecognitionTask *AiRecognitionTaskInput `json:"AiRecognitionTask,omitnil,omitempty" name:"AiRecognitionTask"`

	// Parameter of a release on WeChat Mini Program task.
	// Note: this field may return null, indicating that no valid values can be obtained.
	MiniProgramPublishTask *WechatMiniProgramPublishTaskInput `json:"MiniProgramPublishTask,omitnil,omitempty" name:"MiniProgramPublishTask"`

	// The information of the moderation task.
	// Note: This field may return null, indicating that no valid values can be obtained.
	ReviewAudioVideoTask *ProcedureReviewAudioVideoTaskInput `json:"ReviewAudioVideoTask,omitnil,omitempty" name:"ReviewAudioVideoTask"`

	// Creation time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

// Predefined struct for user
type ProcessMediaByProcedureRequestParams struct {
	// Media file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// [Task flow template](https://intl.cloud.tencent.com/document/product/266/11700?from_cn_redirect=1#.E4.BB.BB.E5.8A.A1.E6.B5.81.E6.A8.A1.E6.9D.BF) name.
	ProcedureName *string `json:"ProcedureName,omitnil,omitempty" name:"ProcedureName"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Task flow priority. The higher the value, the higher the priority. Value range: -10-10. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// Notification mode for task flow status change. Valid values: Finish, Change, None. If this parameter is left empty, `Finish` will be used.
	TasksNotifyMode *string `json:"TasksNotifyMode,omitnil,omitempty" name:"TasksNotifyMode"`

	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Identification code used for deduplication. If there is a request with the same identification code within 7 days, this request will return an error. The maximum length is 50 characters, without or with an empty string to indicate no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Reserved field for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type ProcessMediaByProcedureRequest struct {
	*tchttp.BaseRequest
	
	// Media file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// [Task flow template](https://intl.cloud.tencent.com/document/product/266/11700?from_cn_redirect=1#.E4.BB.BB.E5.8A.A1.E6.B5.81.E6.A8.A1.E6.9D.BF) name.
	ProcedureName *string `json:"ProcedureName,omitnil,omitempty" name:"ProcedureName"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Task flow priority. The higher the value, the higher the priority. Value range: -10-10. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// Notification mode for task flow status change. Valid values: Finish, Change, None. If this parameter is left empty, `Finish` will be used.
	TasksNotifyMode *string `json:"TasksNotifyMode,omitnil,omitempty" name:"TasksNotifyMode"`

	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Identification code used for deduplication. If there is a request with the same identification code within 7 days, this request will return an error. The maximum length is 50 characters, without or with an empty string to indicate no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Reserved field for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *ProcessMediaByProcedureRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ProcessMediaByProcedureRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "ProcedureName")
	delete(f, "SubAppId")
	delete(f, "TasksPriority")
	delete(f, "TasksNotifyMode")
	delete(f, "SessionContext")
	delete(f, "SessionId")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ProcessMediaByProcedureRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ProcessMediaByProcedureResponseParams struct {
	// The task ID for the task type `Procedure`, if the task flow specified by `ProcedureName` includes one or more of `MediaProcessTask`, `AiAnalysisTask`, `AiRecognitionTask`, the task specified by this parameter will be executed.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The task ID for the task type `ReviewAudioVideo`, if the task flow specified by `ProcedureName` includes `ReviewAudioVideoTask`, the task specified by this parameter will be executed.
	ReviewAudioVideoTaskId *string `json:"ReviewAudioVideoTaskId,omitnil,omitempty" name:"ReviewAudioVideoTaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ProcessMediaByProcedureResponse struct {
	*tchttp.BaseResponse
	Response *ProcessMediaByProcedureResponseParams `json:"Response"`
}

func (r *ProcessMediaByProcedureResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ProcessMediaByProcedureResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ProcessMediaByUrlRequestParams struct {
	// This API is<font color='red'>disused</font>. You are advised to use an alternative API. For more information, see API overview.
	InputInfo *MediaInputInfo `json:"InputInfo,omitnil,omitempty" name:"InputInfo"`

	// Information of COS path to output file.
	OutputInfo *MediaOutputInfo `json:"OutputInfo,omitnil,omitempty" name:"OutputInfo"`

	// Type parameter of video content audit task.
	AiContentReviewTask *AiContentReviewTaskInput `json:"AiContentReviewTask,omitnil,omitempty" name:"AiContentReviewTask"`

	// Video content analysis task parameter.
	AiAnalysisTask *AiAnalysisTaskInput `json:"AiAnalysisTask,omitnil,omitempty" name:"AiAnalysisTask"`

	// Type parameter of video content recognition task.
	AiRecognitionTask *AiRecognitionTaskInput `json:"AiRecognitionTask,omitnil,omitempty" name:"AiRecognitionTask"`

	// Task flow priority. The higher the value, the higher the priority. Value range: -10-10. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// Notification mode for task flow status change. Valid values: Finish, Change, None. If this parameter is left empty, `Finish` will be used.
	TasksNotifyMode *string `json:"TasksNotifyMode,omitnil,omitempty" name:"TasksNotifyMode"`

	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Used to identify duplicate requests. After you send a request, if any request with the same `SessionId` has already been sent in the last three days (72 hours), an error message will be returned. `SessionId` contains up to 50 characters. If this parameter is not carried or is an empty string, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type ProcessMediaByUrlRequest struct {
	*tchttp.BaseRequest
	
	// This API is<font color='red'>disused</font>. You are advised to use an alternative API. For more information, see API overview.
	InputInfo *MediaInputInfo `json:"InputInfo,omitnil,omitempty" name:"InputInfo"`

	// Information of COS path to output file.
	OutputInfo *MediaOutputInfo `json:"OutputInfo,omitnil,omitempty" name:"OutputInfo"`

	// Type parameter of video content audit task.
	AiContentReviewTask *AiContentReviewTaskInput `json:"AiContentReviewTask,omitnil,omitempty" name:"AiContentReviewTask"`

	// Video content analysis task parameter.
	AiAnalysisTask *AiAnalysisTaskInput `json:"AiAnalysisTask,omitnil,omitempty" name:"AiAnalysisTask"`

	// Type parameter of video content recognition task.
	AiRecognitionTask *AiRecognitionTaskInput `json:"AiRecognitionTask,omitnil,omitempty" name:"AiRecognitionTask"`

	// Task flow priority. The higher the value, the higher the priority. Value range: -10-10. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// Notification mode for task flow status change. Valid values: Finish, Change, None. If this parameter is left empty, `Finish` will be used.
	TasksNotifyMode *string `json:"TasksNotifyMode,omitnil,omitempty" name:"TasksNotifyMode"`

	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Used to identify duplicate requests. After you send a request, if any request with the same `SessionId` has already been sent in the last three days (72 hours), an error message will be returned. `SessionId` contains up to 50 characters. If this parameter is not carried or is an empty string, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *ProcessMediaByUrlRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ProcessMediaByUrlRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "InputInfo")
	delete(f, "OutputInfo")
	delete(f, "AiContentReviewTask")
	delete(f, "AiAnalysisTask")
	delete(f, "AiRecognitionTask")
	delete(f, "TasksPriority")
	delete(f, "TasksNotifyMode")
	delete(f, "SessionContext")
	delete(f, "SessionId")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ProcessMediaByUrlRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ProcessMediaByUrlResponseParams struct {
	// Task ID
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ProcessMediaByUrlResponse struct {
	*tchttp.BaseResponse
	Response *ProcessMediaByUrlResponseParams `json:"Response"`
}

func (r *ProcessMediaByUrlResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ProcessMediaByUrlResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ProcessMediaRequestParams struct {
	// Media file ID, i.e., the globally unique ID of a file in VOD assigned by the VOD backend after successful upload. This field can be obtained through the [video upload completion event notification](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) or [VOD Console](https://console.cloud.tencent.com/vod/media).
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Parameter of video processing task.
	MediaProcessTask *MediaProcessTaskInput `json:"MediaProcessTask,omitnil,omitempty" name:"MediaProcessTask"`

	// The information of the audio/video moderation task\*.
	// This parameter is <font color=red>\*no longer recommended</font>. Please use [ReviewAudioVideo](https://intl.cloud.tencent.com/document/api/266/80283?from_cn_redirect=1) or [ReviewImage](https://intl.cloud.tencent.com/document/api/266/73217?from_cn_redirect=1) instead.
	AiContentReviewTask *AiContentReviewTaskInput `json:"AiContentReviewTask,omitnil,omitempty" name:"AiContentReviewTask"`

	// Video content analysis task parameter.
	AiAnalysisTask *AiAnalysisTaskInput `json:"AiAnalysisTask,omitnil,omitempty" name:"AiAnalysisTask"`

	// Type parameter of video content recognition task.
	AiRecognitionTask *AiRecognitionTaskInput `json:"AiRecognitionTask,omitnil,omitempty" name:"AiRecognitionTask"`

	// Task flow priority. The higher the value, the higher the priority. Value range: -10-10. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// Notification mode for task flow status change. Valid values: Finish, Change, None. If this parameter is left empty, `Finish` will be used.
	TasksNotifyMode *string `json:"TasksNotifyMode,omitnil,omitempty" name:"TasksNotifyMode"`

	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Used to identify duplicate requests. After you send a request, if any request with the same `SessionId` has already been sent in the last three days (72 hours), an error message will be returned. `SessionId` contains up to 50 characters. If this parameter is not carried or is an empty string, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Reserved field for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type ProcessMediaRequest struct {
	*tchttp.BaseRequest
	
	// Media file ID, i.e., the globally unique ID of a file in VOD assigned by the VOD backend after successful upload. This field can be obtained through the [video upload completion event notification](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) or [VOD Console](https://console.cloud.tencent.com/vod/media).
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Parameter of video processing task.
	MediaProcessTask *MediaProcessTaskInput `json:"MediaProcessTask,omitnil,omitempty" name:"MediaProcessTask"`

	// The information of the audio/video moderation task\*.
	// This parameter is <font color=red>\*no longer recommended</font>. Please use [ReviewAudioVideo](https://intl.cloud.tencent.com/document/api/266/80283?from_cn_redirect=1) or [ReviewImage](https://intl.cloud.tencent.com/document/api/266/73217?from_cn_redirect=1) instead.
	AiContentReviewTask *AiContentReviewTaskInput `json:"AiContentReviewTask,omitnil,omitempty" name:"AiContentReviewTask"`

	// Video content analysis task parameter.
	AiAnalysisTask *AiAnalysisTaskInput `json:"AiAnalysisTask,omitnil,omitempty" name:"AiAnalysisTask"`

	// Type parameter of video content recognition task.
	AiRecognitionTask *AiRecognitionTaskInput `json:"AiRecognitionTask,omitnil,omitempty" name:"AiRecognitionTask"`

	// Task flow priority. The higher the value, the higher the priority. Value range: -10-10. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// Notification mode for task flow status change. Valid values: Finish, Change, None. If this parameter is left empty, `Finish` will be used.
	TasksNotifyMode *string `json:"TasksNotifyMode,omitnil,omitempty" name:"TasksNotifyMode"`

	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Used to identify duplicate requests. After you send a request, if any request with the same `SessionId` has already been sent in the last three days (72 hours), an error message will be returned. `SessionId` contains up to 50 characters. If this parameter is not carried or is an empty string, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Reserved field for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *ProcessMediaRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ProcessMediaRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "SubAppId")
	delete(f, "MediaProcessTask")
	delete(f, "AiContentReviewTask")
	delete(f, "AiAnalysisTask")
	delete(f, "AiRecognitionTask")
	delete(f, "TasksPriority")
	delete(f, "TasksNotifyMode")
	delete(f, "SessionContext")
	delete(f, "SessionId")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ProcessMediaRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ProcessMediaResponseParams struct {
	// Task ID
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ProcessMediaResponse struct {
	*tchttp.BaseResponse
	Response *ProcessMediaResponseParams `json:"Response"`
}

func (r *ProcessMediaResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ProcessMediaResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ProhibitedAsrReviewTemplateInfo struct {
	// Switch of prohibited information detection in speech task. Valid values:
	// <li>ON: enables prohibited information detection in speech task;</li>
	// <li>OFF: disables prohibited information detection in speech task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `100` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `75` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type ProhibitedAsrReviewTemplateInfoForUpdate struct {
	// Switch of prohibited information detection in speech task. Valid values:
	// <li>ON: enables prohibited information detection in speech task;</li>
	// <li>OFF: disables prohibited information detection in speech task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `100` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `75` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type ProhibitedConfigureInfo struct {
	// Control parameter of prohibited information detection in speech.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AsrReviewInfo *ProhibitedAsrReviewTemplateInfo `json:"AsrReviewInfo,omitnil,omitempty" name:"AsrReviewInfo"`

	// Control parameter of prohibited information detection in text.
	// Note: this field may return null, indicating that no valid values can be obtained.
	OcrReviewInfo *ProhibitedOcrReviewTemplateInfo `json:"OcrReviewInfo,omitnil,omitempty" name:"OcrReviewInfo"`
}

type ProhibitedConfigureInfoForUpdate struct {
	// Control parameter of prohibited information detection in speech.
	AsrReviewInfo *ProhibitedAsrReviewTemplateInfoForUpdate `json:"AsrReviewInfo,omitnil,omitempty" name:"AsrReviewInfo"`

	// Control parameter of prohibited information detection in text.
	OcrReviewInfo *ProhibitedOcrReviewTemplateInfoForUpdate `json:"OcrReviewInfo,omitnil,omitempty" name:"OcrReviewInfo"`
}

type ProhibitedOcrReviewTemplateInfo struct {
	// Switch of prohibited information detection in text task. Valid values:
	// <li>ON: enables prohibited information detection in text task;</li>
	// <li>OFF: disables prohibited information detection in text task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `100` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `75` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type ProhibitedOcrReviewTemplateInfoForUpdate struct {
	// Switch of prohibited information detection in text task. Valid values:
	// <li>ON: enables prohibited information detection in text task;</li>
	// <li>OFF: disables prohibited information detection in text task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `100` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `75` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

// Predefined struct for user
type PullEventsRequestParams struct {
	// Reserved field for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type PullEventsRequest struct {
	*tchttp.BaseRequest
	
	// Reserved field for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *PullEventsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *PullEventsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ExtInfo")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "PullEventsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type PullEventsResponseParams struct {
	// List of events.
	// Note: this field may return null, indicating that no valid values can be obtained.
	EventSet []*EventContent `json:"EventSet,omitnil,omitempty" name:"EventSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type PullEventsResponse struct {
	*tchttp.BaseResponse
	Response *PullEventsResponseParams `json:"Response"`
}

func (r *PullEventsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *PullEventsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type PullUploadRequestParams struct {
	// The URL of the media to pull, which can be in HLS format, but not DASH format.
	// For more information about supported extensions, see [Media types](https://intl.cloud.tencent.com/document/product/266/9760#media-types). Please make sure the URL is accessible.
	MediaUrl *string `json:"MediaUrl,omitnil,omitempty" name:"MediaUrl"`

	// The file format (extension). For information about supported extensions, see [Media Types](https://intl.cloud.tencent.com/document/product/266/9760?from_cn_redirect=1#.E5.AA.92.E4.BD.93.E7.B1.BB.E5.9E.8B).
	// If you do not specify this parameter or pass in an empty string, the file obtained will have the same extension as `MediaUrl`.
	MediaType *string `json:"MediaType,omitnil,omitempty" name:"MediaType"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media name.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// The URL of the video to pull. Supported formats include GIF, JPEG (JPG), and PNG.
	CoverUrl *string `json:"CoverUrl,omitnil,omitempty" name:"CoverUrl"`

	// Subsequent task for media. For more information, please see [Specifying Task Flow After Upload](https://intl.cloud.tencent.com/document/product/266/9759?from_cn_redirect=1).
	Procedure *string `json:"Procedure,omitnil,omitempty" name:"Procedure"`

	// Expiration time of media file in ISO 8601 format. For more information, please see [Notes on ISO Date Format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// Specifies upload region. This is only applicable to users that have special requirements for the upload region:
	// <li>If it is left empty, the upload region is your [default region](https://intl.cloud.tencent.com/document/product/266/14059?from=11329?from_cn_redirect=1#.E5.AD.98.E5.82.A8.E5.9C.B0.E5.9F.9F.E6.AD.A5.E9.AA.A4);</li>
	// <li>If it is specified, please make sure that the upload region has been [enabled for storage](https://intl.cloud.tencent.com/document/product/266/14059?from=11329?from_cn_redirect=1#.E5.AD.98.E5.82.A8.E5.9C.B0.E5.9F.9F.E6.AD.A5.E9.AA.A4).</li>
	StorageRegion *string `json:"StorageRegion,omitnil,omitempty" name:"StorageRegion"`

	// Category ID, which is used to categorize the media for management. A category can be created and its ID can be obtained by using the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API.
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The source context which is used to pass through the user request information. After `Procedure` is specified, the task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Used to identify duplicate requests. After you send a request, if any request with the same `SessionId` has already been sent in the last three days (72 hours), an error message will be returned. `SessionId` contains up to 50 characters. If this parameter is not carried or is an empty string, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Reserved field for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`

	// Source context, which is used to pass through the user request information. The [upload callback](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) API will return the value of this field. It can contain up to 250 characters.
	SourceContext *string `json:"SourceContext,omitnil,omitempty" name:"SourceContext"`
}

type PullUploadRequest struct {
	*tchttp.BaseRequest
	
	// The URL of the media to pull, which can be in HLS format, but not DASH format.
	// For more information about supported extensions, see [Media types](https://intl.cloud.tencent.com/document/product/266/9760#media-types). Please make sure the URL is accessible.
	MediaUrl *string `json:"MediaUrl,omitnil,omitempty" name:"MediaUrl"`

	// The file format (extension). For information about supported extensions, see [Media Types](https://intl.cloud.tencent.com/document/product/266/9760?from_cn_redirect=1#.E5.AA.92.E4.BD.93.E7.B1.BB.E5.9E.8B).
	// If you do not specify this parameter or pass in an empty string, the file obtained will have the same extension as `MediaUrl`.
	MediaType *string `json:"MediaType,omitnil,omitempty" name:"MediaType"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Media name.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// The URL of the video to pull. Supported formats include GIF, JPEG (JPG), and PNG.
	CoverUrl *string `json:"CoverUrl,omitnil,omitempty" name:"CoverUrl"`

	// Subsequent task for media. For more information, please see [Specifying Task Flow After Upload](https://intl.cloud.tencent.com/document/product/266/9759?from_cn_redirect=1).
	Procedure *string `json:"Procedure,omitnil,omitempty" name:"Procedure"`

	// Expiration time of media file in ISO 8601 format. For more information, please see [Notes on ISO Date Format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// Specifies upload region. This is only applicable to users that have special requirements for the upload region:
	// <li>If it is left empty, the upload region is your [default region](https://intl.cloud.tencent.com/document/product/266/14059?from=11329?from_cn_redirect=1#.E5.AD.98.E5.82.A8.E5.9C.B0.E5.9F.9F.E6.AD.A5.E9.AA.A4);</li>
	// <li>If it is specified, please make sure that the upload region has been [enabled for storage](https://intl.cloud.tencent.com/document/product/266/14059?from=11329?from_cn_redirect=1#.E5.AD.98.E5.82.A8.E5.9C.B0.E5.9F.9F.E6.AD.A5.E9.AA.A4).</li>
	StorageRegion *string `json:"StorageRegion,omitnil,omitempty" name:"StorageRegion"`

	// Category ID, which is used to categorize the media for management. A category can be created and its ID can be obtained by using the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API.
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The source context which is used to pass through the user request information. After `Procedure` is specified, the task flow status change callback will return the value of this field. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// Used to identify duplicate requests. After you send a request, if any request with the same `SessionId` has already been sent in the last three days (72 hours), an error message will be returned. `SessionId` contains up to 50 characters. If this parameter is not carried or is an empty string, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Reserved field for special purposes.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`

	// Source context, which is used to pass through the user request information. The [upload callback](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) API will return the value of this field. It can contain up to 250 characters.
	SourceContext *string `json:"SourceContext,omitnil,omitempty" name:"SourceContext"`
}

func (r *PullUploadRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *PullUploadRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MediaUrl")
	delete(f, "MediaType")
	delete(f, "SubAppId")
	delete(f, "MediaName")
	delete(f, "CoverUrl")
	delete(f, "Procedure")
	delete(f, "ExpireTime")
	delete(f, "StorageRegion")
	delete(f, "ClassId")
	delete(f, "SessionContext")
	delete(f, "SessionId")
	delete(f, "ExtInfo")
	delete(f, "SourceContext")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "PullUploadRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type PullUploadResponseParams struct {
	// Video pull for upload task ID, which can be used to query the status of pull for upload task.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type PullUploadResponse struct {
	*tchttp.BaseResponse
	Response *PullUploadResponseParams `json:"Response"`
}

func (r *PullUploadResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *PullUploadResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type PullUploadTask struct {
	// The task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Task flow status. Valid values:
	// <li>PROCESSING: processing;</li>
	// <li>FINISH: completed.</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. 0: success; other values: failure.
	// <li>40000: invalid input parameter. Please check it;</li>
	// <li>60000: invalid source file (e.g., video data is corrupted). Please check whether the source file is normal;</li>
	// <li>70000: internal service error. Please try again.</li>
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// The ID of the uploaded file.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The basic information of the uploaded file.
	// Note: This field may return null, indicating that no valid values can be obtained.
	MediaBasicInfo *MediaBasicInfo `json:"MediaBasicInfo,omitnil,omitempty" name:"MediaBasicInfo"`

	// The metadata of the output video.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`

	// The playback address of the uploaded file.
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// The task ID for the task type `Procedure`. If a task flow is specified by [PullUpload](https://intl.cloud.tencent.com/document/api/266/35575?from_cn_redirect=1), and the task flow includes one or more of `MediaProcessTask`, `AiAnalysisTask`, and `AiRecognitionTask`, the task specified by this parameter will be executed.
	ProcedureTaskId *string `json:"ProcedureTaskId,omitnil,omitempty" name:"ProcedureTaskId"`

	// The task ID for the task type `ReviewAudioVideo`. If a task flow is specified by [PullUpload](https://intl.cloud.tencent.com/document/api/266/35575?from_cn_redirect=1), and the task flow includes `ReviewAudioVideoTask`, the task specified by this parameter will be executed.
	ReviewAudioVideoTaskId *string `json:"ReviewAudioVideoTaskId,omitnil,omitempty" name:"ReviewAudioVideoTaskId"`

	// The source context, which is used to pass through user request information. The [PullComplete](https://intl.cloud.tencent.com/document/product/266/7831?from_cn_redirect=1) callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The ID used for deduplication. If there was a request with the same ID in the last seven days, the current request will return an error. The ID can contain up to 50 characters. If this parameter is left empty or a blank string is entered, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The progress of the pull and upload task. Value range: 1-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

// Predefined struct for user
type PushUrlCacheRequestParams struct {
	// List of prefetched URLs. Up to 20 ones can be specified at a time.
	Urls []*string `json:"Urls,omitnil,omitempty" name:"Urls"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type PushUrlCacheRequest struct {
	*tchttp.BaseRequest
	
	// List of prefetched URLs. Up to 20 ones can be specified at a time.
	Urls []*string `json:"Urls,omitnil,omitempty" name:"Urls"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *PushUrlCacheRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *PushUrlCacheRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Urls")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "PushUrlCacheRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type PushUrlCacheResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type PushUrlCacheResponse struct {
	*tchttp.BaseResponse
	Response *PushUrlCacheResponseParams `json:"Response"`
}

func (r *PushUrlCacheResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *PushUrlCacheResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type QRCodeConfigureInfo struct {
	// QR code inspection switch, optional values:
	// <li>ON: enabled;</li>
	// <li>OFF: disabled.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type QRCodeConfigureInfoForUpdate struct {
	// QR code inspection switch, optional values:
	// <li>ON: enabled;</li>
	// <li>OFF: disabled.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type QualityEnhanceTask struct {
	// Task Id.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Task flow status, values:
	// <li>PROCESSING: Processing;</li>
	// <li>FINISH: Completed. </li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code, 0 means success, other values u200bu200bmean failure:
	// <li>40000: The input parameters are illegal, please check the input parameters;</li>
	// <li>60000: Source file error (such as video data damage), Please confirm whether the source file is normal;</li>
	// <li>70000: Internal service error, it is recommended to try again. </li>
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Error code. An empty string indicates success. Other values u200bu200bindicate failure. For values, please refer to [Video Processing Error Code](https://www.tencentcloud.com/document/product/266/39145) list.
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Media quality enhance task progress, value range [0-100].
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// Input for media quality enhance task.
	// Note: This field may return null, indicating that no valid value can be obtained.
	Input *QualityEnhanceTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output of the media quality enhance task.
	// Note: This field may return null, indicating that no valid value can be obtained.
	Output *QualityEnhanceTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// Media quality enhance outputs meta-information of the video.
	// Note: This field may return null, indicating that no valid value can be obtained.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`

	// Identification code used for deduplication. If there is a request for the same identification code within seven days, this request will return an error. The maximum length is 50 characters, without or with an empty string to indicate no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Source context, used to transparently transmit user request information. The task flow status change callback will return the value of this field, which can be up to 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`
}

type QualityEnhanceTaskInput struct {
	// Media file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Media quality enhance template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type QualityEnhanceTaskOutput struct {
	// File types such as mp4, flv, etc.
	FileType *string `json:"FileType,omitnil,omitempty" name:"FileType"`

	// Media file playback address.
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// Media file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Output file name, up to 64 characters. By default, the generated file name is specified by the system.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// Classification ID is used to classify media. You can create a classification through the [Create Classification](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) interface to obtain the classification ID. 
	// <li>Default value: 0, indicating other categories. </li>
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The expiration time of the output file. The file will be deleted after this time. The default is permanent and not expired. The format is expressed in accordance with the ISO 8601 standard. For details, see [ISO Date Format Description](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`
}

type QualityEvaluationConfigureInfo struct {
	// Video quality evaluation switch, optional values:
	// <li>ON: enabled;</li>
	// <li>OFF: disabled.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Video quality evaluation filter threshold, the result only returns the time periods lower than this value, the default value is 60.
	Score *int64 `json:"Score,omitnil,omitempty" name:"Score"`
}

type QualityEvaluationConfigureInfoForUpdate struct {
	// Video quality evaluation switch, optional values:
	// <li>ON: enabled;</li>
	// <li>OFF: disabled.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Video quality evaluation filter threshold, the result only returns the time periods lower than this value, the default value is 60.
	Score *int64 `json:"Score,omitnil,omitempty" name:"Score"`
}

type QualityInspectItem struct {
	// Abnormal segment start offset time, unit: seconds.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// Abnormal segment termination's offset time, unit: seconds.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Detect abnormality in the area coordinates. The array contains 4 elements [x1, y1, x2, y2], which indicate the horizontal and vertical coordinates of the upper left and lower right points of the area in sequence. <font color=red>Pay attention to:</font> The value of this field is valid only when Type is one of the following: <li>BlackWhiteEdge: black and white edge;</li> <li>Mosaic: mosaic;</li> <li>QRCode: QR code;</li> <li>AppletCode: Mini Program code;</li> <li>BarCode: bar code.</li>
	AreaCoordSet []*int64 `json:"AreaCoordSet,omitnil,omitempty" name:"AreaCoordSet"`

	// Confidence threshold, range: [0, 100]. <font color=red>Pay attention to:</font> This field is valid only when Type has one of the following values: <li>Mosaic: Mosaic;</li> <li>QRCode: QR code;</li> <li>AppletCode: Mini Program code;</li> <li>BarCode: Bar code.</li>
	Confidence *uint64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`
}

type QualityInspectResultItem struct {
	// Abnormal type, range: <li>Jitter: Jitter;</li> <li>Blur: Blur;</li> <li>LowLighting: Low lighting;</li> <li>HighLighting: Overexposure;</li> <li>CrashScreen: Crash screen;</li> <li>BlackWhiteEdge: Black and white edges;</li> <li>SolidColorScreen: Solid color screen;</li> <li>Noise: Noise;</li> <li>Mosaic: Mosaic;</li> <li>QRCode: QR code;</li> <li>AppletCode: Applet code;</li> <li>BarCode: Bar code;</li> <li>LowVoice: Low voice;</li> <li>HighVoice: High voice;</li> <li>NoVoice: mutes;</li> <li>LowEvaluation: No reference scoring below the threshold.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Abnormal segment List. <font color=red>Pay attention to:</font> This list will only show the first 100 elements at most. If you wish to get the complete result, please get it from the file corresponding to SegmentSetFileUrl.
	SegmentSet []*QualityInspectItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// Abnormal segment List file URL. The file content is JSON, and the data structure is consistent with the SegmentSet Field. (The file will not be permanently stored, and will be deleted after reaching the SegmentSetFileUrlExpireTime Time point).
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// Abnormal segment List file URL expiration time, using [ISO date supported](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type QualityInspectTask struct {
	// Media quality inspection task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Task status, value: <li>PROCESSING: processing;</li> <li>FINISH: Completed.</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code, an empty string indicates success, other values indicate failure. Please refer to the [Video Processing Error Code](https://www.tencentcloud.com/document/product/266/39145) list for values.
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error information.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// Media quality inspection input metadata of audio and video.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`

	// Media quality inspection task input.
	Input *QualityInspectTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Media quality inspection task generates.
	Output *QualityInspectTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// Used for deduplication, if there has been a request with the same recognition code within seven days, this request will return an error. Maximum length of 50 characters, without or with an empty string indicates no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Source context, used for transparent transmission of user request information. Upon completion of media quality inspection, the callback will return the value of this field, with a maximum length of 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`
}

type QualityInspectTaskInput struct {
	// Media file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Media quality inspect template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type QualityInspectTaskOutput struct {
	// Whether the media files have no audio track, range: <li>0: No, that is, there is an audio track;</li> <li>1: Yes, that is, there is no audio track.</li>
	NoAudio *int64 `json:"NoAudio,omitnil,omitempty" name:"NoAudio"`

	// Whether the media files have no video track, range: <li>0: No, that is, there is a video track;</li> <li>1: Yes, that is, there is no video track.</li>
	NoVideo *int64 `json:"NoVideo,omitnil,omitempty" name:"NoVideo"`

	// Quality score, value range: [0, 100].
	QualityEvaluationScore *uint64 `json:"QualityEvaluationScore,omitnil,omitempty" name:"QualityEvaluationScore"`

	// Abnormal items list detected of media quality inspection task
	QualityInspectResultSet []*QualityInspectResultItem `json:"QualityInspectResultSet,omitnil,omitempty" name:"QualityInspectResultSet"`
}

type QualityInspectTemplateItem struct {
	// Media quality inspection template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Template Type, available options: <li>Preset: Preset Template;</li> <li>Custom: User Custom Template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Media quality inspection template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description. 
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Frame interval, unit in seconds.
	ScreenshotInterval *float64 `json:"ScreenshotInterval,omitnil,omitempty" name:"ScreenshotInterval"`

	// Control parameters for detecting video jitter and ghosting.
	JitterConfigure *JitterConfigureInfo `json:"JitterConfigure,omitnil,omitempty" name:"JitterConfigure"`

	// Control parameters for detecting video blur.
	BlurConfigure *BlurConfigureInfo `json:"BlurConfigure,omitnil,omitempty" name:"BlurConfigure"`

	// Control parameters for detecting low brightness and overexposure of video.
	AbnormalLightingConfigure *AbnormalLightingConfigureInfo `json:"AbnormalLightingConfigure,omitnil,omitempty" name:"AbnormalLightingConfigure"`

	// Control parameters for detecting video crash.
	CrashScreenConfigure *CrashScreenConfigureInfo `json:"CrashScreenConfigure,omitnil,omitempty" name:"CrashScreenConfigure"`

	// Control parameters for detecting video black edges, white edges, black screen, and white screen.
	BlackWhiteEdgeConfigure *BlackWhiteEdgeConfigureInfo `json:"BlackWhiteEdgeConfigure,omitnil,omitempty" name:"BlackWhiteEdgeConfigure"`

	// Control parameters for detecting video noise.
	NoiseConfigure *NoiseConfigureInfo `json:"NoiseConfigure,omitnil,omitempty" name:"NoiseConfigure"`

	// Control parameters for detecting video mosaic.
	MosaicConfigure *MosaicConfigureInfo `json:"MosaicConfigure,omitnil,omitempty" name:"MosaicConfigure"`

	// Control parameters for QR code detection in video.
	QRCodeConfigure *QRCodeConfigureInfo `json:"QRCodeConfigure,omitnil,omitempty" name:"QRCodeConfigure"`

	// Control parameters for video quality evaluation.
	QualityEvaluationConfigure *QualityEvaluationConfigureInfo `json:"QualityEvaluationConfigure,omitnil,omitempty" name:"QualityEvaluationConfigure"`

	// Control parameters for audio (mutes, bass, blast sound).
	VoiceConfigure *VoiceConfigureInfo `json:"VoiceConfigure,omitnil,omitempty" name:"VoiceConfigure"`

	// Template Creation Time, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Template Modification time, using [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

type Quic struct {
	// Quic function configuration switch, the values u200bu200bare: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type RebuildAudioInfo struct {
	// The noise removal parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	AudioDenoiseInfo *AudioDenoiseInfo `json:"AudioDenoiseInfo,omitnil,omitempty" name:"AudioDenoiseInfo"`
}

// Predefined struct for user
type RebuildMediaByTemplateRequestParams struct {
	// The file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Rebuild Media Template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *string `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The start offset (seconds). If you do not specify this, the segment will start from the beginning of the video.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// The end offset (seconds). If you do not specify this, the segment will end at the end of the video.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// New file configuration after rebuild.
	OutputConfig *RebuildMediaOutputConfig `json:"OutputConfig,omitnil,omitempty" name:"OutputConfig"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last three days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The task priority, which can be a value from -10 to 10. The higher the value, the higher the priority. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// A reserved parameter.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type RebuildMediaByTemplateRequest struct {
	*tchttp.BaseRequest
	
	// The file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Rebuild Media Template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *string `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The start offset (seconds). If you do not specify this, the segment will start from the beginning of the video.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// The end offset (seconds). If you do not specify this, the segment will end at the end of the video.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// New file configuration after rebuild.
	OutputConfig *RebuildMediaOutputConfig `json:"OutputConfig,omitnil,omitempty" name:"OutputConfig"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last three days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The task priority, which can be a value from -10 to 10. The higher the value, the higher the priority. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// A reserved parameter.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *RebuildMediaByTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RebuildMediaByTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "Definition")
	delete(f, "SubAppId")
	delete(f, "StartTimeOffset")
	delete(f, "EndTimeOffset")
	delete(f, "OutputConfig")
	delete(f, "SessionId")
	delete(f, "SessionContext")
	delete(f, "TasksPriority")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "RebuildMediaByTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type RebuildMediaByTemplateResponseParams struct {
	// The task ID of the rebuild, through which the status of the rebuild task can be queried.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type RebuildMediaByTemplateResponse struct {
	*tchttp.BaseResponse
	Response *RebuildMediaByTemplateResponseParams `json:"Response"`
}

func (r *RebuildMediaByTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RebuildMediaByTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type RebuildMediaOutputConfig struct {
	// The filename. This parameter can contain up to 64 characters, and will be generated by the system if it is left empty.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// The ID of the file's category. You can use the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API to create a category and get the category ID.
	// <li>The default value is `0`, which means the "Other" category.</li>
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The expiration time of the output file, in [ISO date format](https://www.tencentcloud.com/document/product/266/11732?lang=en&pg=). The file will be deleted after the specified expiration time. By default, the file will never expire.
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`
}

// Predefined struct for user
type RebuildMediaRequestParams struct {
	// The file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The start offset (seconds). If you do not specify this, the segment will start from the beginning of the video.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// The end offset (seconds). If you do not specify this, the segment will end at the end of the video.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// The video quality remastering parameters.
	RepairInfo *RepairInfo `json:"RepairInfo,omitnil,omitempty" name:"RepairInfo"`

	// The smart frame interpolation parameters.
	VideoFrameInterpolationInfo *VideoFrameInterpolationInfo `json:"VideoFrameInterpolationInfo,omitnil,omitempty" name:"VideoFrameInterpolationInfo"`

	// The super resolution parameters.
	SuperResolutionInfo *SuperResolutionInfo `json:"SuperResolutionInfo,omitnil,omitempty" name:"SuperResolutionInfo"`

	// The high dynamic range (HDR) parameters.
	HDRInfo *HDRInfo `json:"HDRInfo,omitnil,omitempty" name:"HDRInfo"`

	// The image noise removal parameters.
	VideoDenoiseInfo *VideoDenoiseInfo `json:"VideoDenoiseInfo,omitnil,omitempty" name:"VideoDenoiseInfo"`

	// The noise removal parameters.
	AudioDenoiseInfo *AudioDenoiseInfo `json:"AudioDenoiseInfo,omitnil,omitempty" name:"AudioDenoiseInfo"`

	// The color enhancement parameters.
	ColorInfo *ColorEnhanceInfo `json:"ColorInfo,omitnil,omitempty" name:"ColorInfo"`

	// The detail enhancement parameters.
	SharpInfo *SharpEnhanceInfo `json:"SharpInfo,omitnil,omitempty" name:"SharpInfo"`

	// The face enhancement parameters.
	FaceInfo *FaceEnhanceInfo `json:"FaceInfo,omitnil,omitempty" name:"FaceInfo"`

	// The low-light enhancement parameters.
	LowLightInfo *LowLightEnhanceInfo `json:"LowLightInfo,omitnil,omitempty" name:"LowLightInfo"`

	// The banding removal parameters.
	ScratchRepairInfo *ScratchRepairInfo `json:"ScratchRepairInfo,omitnil,omitempty" name:"ScratchRepairInfo"`

	// The artifact removal (smoothing) parameters.
	ArtifactRepairInfo *ArtifactRepairInfo `json:"ArtifactRepairInfo,omitnil,omitempty" name:"ArtifactRepairInfo"`

	// The output parameters of the file.
	TargetInfo *RebuildMediaTargetInfo `json:"TargetInfo,omitnil,omitempty" name:"TargetInfo"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last three days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The task priority, which can be a value from -10 to 10. The higher the value, the higher the priority. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// A reserved parameter.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type RebuildMediaRequest struct {
	*tchttp.BaseRequest
	
	// The file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The start offset (seconds). If you do not specify this, the segment will start from the beginning of the video.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// The end offset (seconds). If you do not specify this, the segment will end at the end of the video.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// The video quality remastering parameters.
	RepairInfo *RepairInfo `json:"RepairInfo,omitnil,omitempty" name:"RepairInfo"`

	// The smart frame interpolation parameters.
	VideoFrameInterpolationInfo *VideoFrameInterpolationInfo `json:"VideoFrameInterpolationInfo,omitnil,omitempty" name:"VideoFrameInterpolationInfo"`

	// The super resolution parameters.
	SuperResolutionInfo *SuperResolutionInfo `json:"SuperResolutionInfo,omitnil,omitempty" name:"SuperResolutionInfo"`

	// The high dynamic range (HDR) parameters.
	HDRInfo *HDRInfo `json:"HDRInfo,omitnil,omitempty" name:"HDRInfo"`

	// The image noise removal parameters.
	VideoDenoiseInfo *VideoDenoiseInfo `json:"VideoDenoiseInfo,omitnil,omitempty" name:"VideoDenoiseInfo"`

	// The noise removal parameters.
	AudioDenoiseInfo *AudioDenoiseInfo `json:"AudioDenoiseInfo,omitnil,omitempty" name:"AudioDenoiseInfo"`

	// The color enhancement parameters.
	ColorInfo *ColorEnhanceInfo `json:"ColorInfo,omitnil,omitempty" name:"ColorInfo"`

	// The detail enhancement parameters.
	SharpInfo *SharpEnhanceInfo `json:"SharpInfo,omitnil,omitempty" name:"SharpInfo"`

	// The face enhancement parameters.
	FaceInfo *FaceEnhanceInfo `json:"FaceInfo,omitnil,omitempty" name:"FaceInfo"`

	// The low-light enhancement parameters.
	LowLightInfo *LowLightEnhanceInfo `json:"LowLightInfo,omitnil,omitempty" name:"LowLightInfo"`

	// The banding removal parameters.
	ScratchRepairInfo *ScratchRepairInfo `json:"ScratchRepairInfo,omitnil,omitempty" name:"ScratchRepairInfo"`

	// The artifact removal (smoothing) parameters.
	ArtifactRepairInfo *ArtifactRepairInfo `json:"ArtifactRepairInfo,omitnil,omitempty" name:"ArtifactRepairInfo"`

	// The output parameters of the file.
	TargetInfo *RebuildMediaTargetInfo `json:"TargetInfo,omitnil,omitempty" name:"TargetInfo"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last three days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The task priority, which can be a value from -10 to 10. The higher the value, the higher the priority. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// A reserved parameter.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *RebuildMediaRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RebuildMediaRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "SubAppId")
	delete(f, "StartTimeOffset")
	delete(f, "EndTimeOffset")
	delete(f, "RepairInfo")
	delete(f, "VideoFrameInterpolationInfo")
	delete(f, "SuperResolutionInfo")
	delete(f, "HDRInfo")
	delete(f, "VideoDenoiseInfo")
	delete(f, "AudioDenoiseInfo")
	delete(f, "ColorInfo")
	delete(f, "SharpInfo")
	delete(f, "FaceInfo")
	delete(f, "LowLightInfo")
	delete(f, "ScratchRepairInfo")
	delete(f, "ArtifactRepairInfo")
	delete(f, "TargetInfo")
	delete(f, "SessionId")
	delete(f, "SessionContext")
	delete(f, "TasksPriority")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "RebuildMediaRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type RebuildMediaResponseParams struct {
	// The task ID of the Enhance Media. You can use this ID to query the status of the EnhanceMedia task.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type RebuildMediaResponse struct {
	*tchttp.BaseResponse
	Response *RebuildMediaResponseParams `json:"Response"`
}

func (r *RebuildMediaResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RebuildMediaResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type RebuildMediaTargetAudioStream struct {
	// The audio codec.
	// If `Container` is `mp3`, the valid value is:
	// <li>`libmp3lame`</li>
	// If `Container` is `ogg` or `flac`, the valid value is:
	// <li>`flac`</li>
	// If `Container` is `m4a`, the valid values are:
	// <li>`libfdk_aac`</li>
	// <li>`libmp3lame`</li>
	// <li>`ac3`</li>
	// If `Container` is `mp4` or `flv`, the valid values are:
	// <li>`libfdk_aac` (Recommended for MP4)</li>
	// <li>`libmp3lame` (Recommended for FLV)</li>
	// <li>`mp2`</li>
	// If `Container` is `hls`, the valid value is:
	// <li>`libfdk_aac`</li>
	Codec *string `json:"Codec,omitnil,omitempty" name:"Codec"`

	// The audio bitrate, in Kbps. Value range: 0 and 26-256.
	// If the value is `0`, the original audio bitrate will be used.
	Bitrate *int64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// The audio sample rate. Valid values:
	// <li>`32000`</li>
	// <li>`44100`</li>
	// <li>`48000`</li>
	// 
	// Unit: Hz.
	SampleRate *int64 `json:"SampleRate,omitnil,omitempty" name:"SampleRate"`

	// The audio channels. Valid values:
	// <li>`1`: Mono-channel</li>
	// <li>`2`: Dual-channel</li>
	// <li>`6`: Stereo</li>
	// 
	// You cannot set this parameter to `6` if the container format is an audio format (FLAC, OGG, MP3, M4A).
	// Default value: `2`.
	AudioChannel *int64 `json:"AudioChannel,omitnil,omitempty" name:"AudioChannel"`
}

type RebuildMediaTargetInfo struct {
	// The filename. This parameter can contain up to 64 characters, and will be generated by the system if it is left empty.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// The description (up to 128 characters). If you do not specify this, the description will be empty.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	// The ID of the file’s category. You can use the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API to create a category and get the category ID.
	// <li>The default value is `0`, which means the “Other” category.</li>
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The expiration time of the output file, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=). The file will be deleted after the specified expiration time. By default, the file will never expire.
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// The output container format. Valid values: `mp4` (default), `flv`, `hls`.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// The output video parameters.
	VideoStream *RebuildMediaTargetVideoStream `json:"VideoStream,omitnil,omitempty" name:"VideoStream"`

	// The output audio parameters.
	AudioStream *RebuildMediaTargetAudioStream `json:"AudioStream,omitnil,omitempty" name:"AudioStream"`

	// Whether to remove video data. Valid values:
	// <li>`0`: No</li>
	// <li>`1`: Yes</li>
	// 
	// Default value: `0`.
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data. Valid values:
	// <li>`0`: No</li>
	// <li>`1`: Yes</li>
	// 
	// Default value: `0`.
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`
}

type RebuildMediaTargetVideoStream struct {
	// The video codec. Valid values:
	// <li>`libx264`: H.264</li>
	// <li>`libx265`: H.265</li>
	// <li>`av1`: AOMedia Video 1</li>
	// The default codec is H.264.
	Codec *string `json:"Codec,omitnil,omitempty" name:"Codec"`

	// The video bitrate (Kbps). Value range: 0 and 128-35000.
	// If the value is `0`, the original video bitrate will be used.
	Bitrate *int64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// The video frame rate (Hz). Value range: 0-100. If the value is `0`, the original video frame rate will be used.
	Fps *int64 `json:"Fps,omitnil,omitempty" name:"Fps"`

	// Resolution adaption. Valid values:
	// <li>`open`: Enable. When resolution adaption is enabled, `Width` indicates the long side of a video, while `Height` indicates the short side.</li>
	// <li>`close`: Disable. When resolution adaption is disabled, `Width` indicates the width of a video, while `Height` indicates the height.</li>
	// 
	// Default value: `open`.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// The maximum video width (or long side) in pixels. Value range: 0 and 128-4096.
	// <li>If both `Width` and `Height` are `0`, the original resolution will be used.</li>
	// <li>If `Width` is 0 and `Height` is not, the video width will be proportionally scaled.</li>
	// <li>If `Width` is not 0 and `Height` is, the video height will be proportionally scaled.</li>
	// <li>If neither `Width` nor `Height` is 0, the specified width and height will be used.</li>
	// 
	// Default value: `0`.
	Width *int64 `json:"Width,omitnil,omitempty" name:"Width"`

	// The maximum video width (or short side) in pixels. Value range: 0 and [128, 4096].
	// <li>If both `Width` and `Height` are `0`, the original resolution will be used.</li>
	// <li>If `Width` is 0 and `Height` is not, the video width will be proportionally scaled.</li>
	// <li>If `Width` is not 0 and `Height` is, the video height will be proportionally scaled.</li>
	// <li>If neither `Width` nor `Height` is 0, the specified width and height will be used.</li>
	// 
	// Default value: `0`.
	Height *int64 `json:"Height,omitnil,omitempty" name:"Height"`

	// The fill mode, which indicates how a video is resized when the video’s original aspect ratio is different from the target aspect ratio. Valid values:
	// <li>`stretch`: Stretch the image frame by frame to fill the entire screen. The video image may become "squashed" or "stretched" after transcoding.</li>
	// <li>`black`: Keep the image's original aspect ratio and fill the blank space with black bars.</li>
	// 
	// Default value: `stretch`.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`

	// The number of frames between two I-frames. Valid values: 0 and 1-100000.
	// If this parameter is `0` or left empty, the interval will be determined by the system.
	Gop *int64 `json:"Gop,omitnil,omitempty" name:"Gop"`
}

type RebuildMediaTask struct {
	// The task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The task flow status. Valid values:
	// <li>`PROCESSING`</li>
	// <li>`FINISH`</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// The error code. `0` indicates the task is successful. Other values indicate that the task failed.
	// <li>`40000`: Invalid input parameter.</li>
	// <li>`60000`: Source file error (e.g., video data is corrupted).</li>
	// <li>`70000`: Internal server error. Please try again.</li>
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// The error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// The error code. An empty string indicates the task is successful; other values indicate that the task failed. For details, see [Video processing error codes](https://intl.cloud.tencent.com/document/product/266/39145?lang=en&pg=#video-processing).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// The task progress. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The input parameters of the audio/video remastering task.
	// Note: This field may return null, indicating that no valid values can be obtained.
	Input *RebuildMediaTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// The output parameters of the audio/video remastering task.
	// Note: This field may return null, indicating that no valid values can be obtained.
	Output *RebuildMediaTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The metadata of the output file.
	// Note: This field may return null, indicating that no valid values can be obtained.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last seven days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`
}

type RebuildMediaTaskInput struct {
	// The file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The start offset (seconds). If you do not specify this, the segment will start from the beginning of the video.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// The end offset (seconds). If you do not specify this, the segment will end at the end of the video.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// The ID of the remaster template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The video quality remastering parameters.
	RepairInfo *RepairInfo `json:"RepairInfo,omitnil,omitempty" name:"RepairInfo"`

	// The smart frame interpolation parameters.
	VideoFrameInterpolationInfo *VideoFrameInterpolationInfo `json:"VideoFrameInterpolationInfo,omitnil,omitempty" name:"VideoFrameInterpolationInfo"`

	// The super resolution parameters.
	SuperResolutionInfo *SuperResolutionInfo `json:"SuperResolutionInfo,omitnil,omitempty" name:"SuperResolutionInfo"`

	// The high dynamic range (HDR) parameters.
	HDRInfo *HDRInfo `json:"HDRInfo,omitnil,omitempty" name:"HDRInfo"`

	// The image noise removal parameters.
	VideoDenoiseInfo *VideoDenoiseInfo `json:"VideoDenoiseInfo,omitnil,omitempty" name:"VideoDenoiseInfo"`

	// The noise removal parameters.
	AudioDenoiseInfo *AudioDenoiseInfo `json:"AudioDenoiseInfo,omitnil,omitempty" name:"AudioDenoiseInfo"`

	// The color enhancement parameters.
	ColorInfo *ColorEnhanceInfo `json:"ColorInfo,omitnil,omitempty" name:"ColorInfo"`

	// The detail enhancement parameters.
	SharpInfo *SharpEnhanceInfo `json:"SharpInfo,omitnil,omitempty" name:"SharpInfo"`

	// The face enhancement parameters.
	FaceInfo *FaceEnhanceInfo `json:"FaceInfo,omitnil,omitempty" name:"FaceInfo"`

	// The low-light enhancement parameters.
	LowLightInfo *LowLightEnhanceInfo `json:"LowLightInfo,omitnil,omitempty" name:"LowLightInfo"`

	// The banding removal parameters.
	ScratchRepairInfo *ScratchRepairInfo `json:"ScratchRepairInfo,omitnil,omitempty" name:"ScratchRepairInfo"`

	// The artifact removal (smoothing) parameters.
	ArtifactRepairInfo *ArtifactRepairInfo `json:"ArtifactRepairInfo,omitnil,omitempty" name:"ArtifactRepairInfo"`

	// The output parameters of the file.
	TargetInfo *RebuildMediaTargetInfo `json:"TargetInfo,omitnil,omitempty" name:"TargetInfo"`
}

type RebuildMediaTaskOutput struct {
	// The file type, such as MP4 and FLV.
	FileType *string `json:"FileType,omitnil,omitempty" name:"FileType"`

	// The playback URL of the output file.
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// The file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The filename. This parameter can contain up to 64 characters, and will be generated by the system if it is left empty.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// The ID of the file’s category. You can use the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API to create a category and get the category ID.
	// <li>The default value is `0`, which means the “Other” category.</li>
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The expiration time of the output file, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=). The file will be deleted after the specified expiration time. By default, the file will never expire.
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`
}

type RebuildMediaTemplate struct {
	// The remaster template ID.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The template type. Valid values:
	// <li>`Preset`</li>
	// <li>`Custom`</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The remaster template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The video remaster parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	RebuildVideoInfo *RebuildVideoInfo `json:"RebuildVideoInfo,omitnil,omitempty" name:"RebuildVideoInfo"`

	// The audio remaster parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	RebuildAudioInfo *RebuildAudioInfo `json:"RebuildAudioInfo,omitnil,omitempty" name:"RebuildAudioInfo"`

	// The output video parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	TargetVideoInfo *RebuildMediaTargetVideoStream `json:"TargetVideoInfo,omitnil,omitempty" name:"TargetVideoInfo"`

	// The output audio parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	TargetAudioInfo *RebuildMediaTargetAudioStream `json:"TargetAudioInfo,omitnil,omitempty" name:"TargetAudioInfo"`

	// The output file format. Valid values: `mp4` (default), `hls`.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// Whether to remove video data. Valid values:
	// <li>`0`: No</li>
	// <li>`1`: Yes</li>
	// Default value: 0.
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data. Valid values:
	// <li>`0`: No</li>
	// <li>`1`: Yes</li>
	// Default value: 0.
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`

	// The template creation time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// The last updated time of the template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

type RebuildVideoInfo struct {
	// The image restoration parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	RepairInfo *RepairInfo `json:"RepairInfo,omitnil,omitempty" name:"RepairInfo"`

	// The smart frame interpolation parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	VideoFrameInterpolationInfo *VideoFrameInterpolationInfo `json:"VideoFrameInterpolationInfo,omitnil,omitempty" name:"VideoFrameInterpolationInfo"`

	// The super resolution parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	SuperResolutionInfo *SuperResolutionInfo `json:"SuperResolutionInfo,omitnil,omitempty" name:"SuperResolutionInfo"`

	// The high dynamic range (HDR) configuration.
	// Note: This field may return null, indicating that no valid values can be obtained.
	HDRInfo *HDRInfo `json:"HDRInfo,omitnil,omitempty" name:"HDRInfo"`

	// The image noise removal parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	VideoDenoiseInfo *VideoDenoiseInfo `json:"VideoDenoiseInfo,omitnil,omitempty" name:"VideoDenoiseInfo"`

	// The color enhancement parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	ColorInfo *ColorEnhanceInfo `json:"ColorInfo,omitnil,omitempty" name:"ColorInfo"`

	// The detail enhancement parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	SharpInfo *SharpEnhanceInfo `json:"SharpInfo,omitnil,omitempty" name:"SharpInfo"`

	// The face enhancement parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	FaceInfo *FaceEnhanceInfo `json:"FaceInfo,omitnil,omitempty" name:"FaceInfo"`

	// The low-light enhancement parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	LowLightInfo *LowLightEnhanceInfo `json:"LowLightInfo,omitnil,omitempty" name:"LowLightInfo"`

	// The banding removal parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	ScratchRepairInfo *ScratchRepairInfo `json:"ScratchRepairInfo,omitnil,omitempty" name:"ScratchRepairInfo"`

	// The artifact removal parameters.
	// Note: This field may return null, indicating that no valid values can be obtained.
	ArtifactRepairInfo *ArtifactRepairInfo `json:"ArtifactRepairInfo,omitnil,omitempty" name:"ArtifactRepairInfo"`
}

type ReduceMediaBitrateAdaptiveDynamicStreamingResult struct {
	// The task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// The error code. An empty string indicates the task is successful; other values indicate that the task failed. For details, see [Video processing error codes](https://intl.cloud.tencent.com/document/product/266/39145?lang=en&pg=#video-processing).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// The error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// The input of an adaptive bitrate task.
	Input *AdaptiveDynamicStreamingTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// The output of an adaptive bitrate task.
	Output *AdaptiveDynamicStreamingInfoItem `json:"Output,omitnil,omitempty" name:"Output"`
}

type ReduceMediaBitrateMediaProcessTaskResult struct {
	// The task type. Valid values:
	// <li>Transcode</li>
	// <li>AdaptiveDynamicStreaming</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The result of a transcoding task. This parameter is valid if `Type` is `Transcode`.
	// Note: This field may return null, indicating that no valid values can be obtained.
	TranscodeTask *ReduceMediaBitrateTranscodeResult `json:"TranscodeTask,omitnil,omitempty" name:"TranscodeTask"`

	// The result of an adaptive bitrate task. This parameter is valid if `Type` is `AdaptiveDynamicStreaming`.
	// Note: This field may return null, indicating that no valid values can be obtained.
	AdaptiveDynamicStreamingTask *ReduceMediaBitrateAdaptiveDynamicStreamingResult `json:"AdaptiveDynamicStreamingTask,omitnil,omitempty" name:"AdaptiveDynamicStreamingTask"`
}

type ReduceMediaBitrateTask struct {
	// The task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The task flow status. Valid values:
	// <li>PROCESSING</li>
	// <li>FINISH</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// The ID of the media file.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The name of the media file.
	FileName *string `json:"FileName,omitnil,omitempty" name:"FileName"`

	// The address of the media file.
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// The metadata of the source video.
	// Note: This field may return null, indicating that no valid values can be obtained.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`

	// The execution status and result of the bitrate reduction task.
	MediaProcessResultSet []*ReduceMediaBitrateMediaProcessTaskResult `json:"MediaProcessResultSet,omitnil,omitempty" name:"MediaProcessResultSet"`

	// The task priority, which can be a value from -10 to 10.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// The notification mode for the change of task status. Valid values:
	// <li>Finish: Send a notification after the task is completed.</li>
	// <li>None: Do not send status change notifications for this task.</li>
	TasksNotifyMode *string `json:"TasksNotifyMode,omitnil,omitempty" name:"TasksNotifyMode"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last seven days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`
}

type ReduceMediaBitrateTranscodeResult struct {
	// The task status. Valid values: PROCESSING, SUCCESS, FAIL.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// The error code. An empty string indicates the task is successful; other values indicate that the task failed. For details, see [Video processing error codes](https://intl.cloud.tencent.com/document/product/266/39145?lang=en&pg=#video-processing).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// The error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// The input of a transcoding task.
	Input *TranscodeTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// The output of a transcoding task.
	// Note: This field may return null, indicating that no valid values can be obtained.
	Output *MediaTranscodeItem `json:"Output,omitnil,omitempty" name:"Output"`

	// The transcoding progress. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`

	// The start time of the transcoding task, in [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// The end time of the transcoding task, in [ISO date format](https://www.tencentcloud.com/document/product/266/11732#iso-date-format).
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`
}

type Referer struct {
	// referer Blacklist and whitelist configuration switch, value: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Referer blacklist/whitelist configuration rule
	RefererRules []*RefererRule `json:"RefererRules,omitnil,omitempty" name:"RefererRules"`
}

type RefererAuthPolicy struct {
	// [Referer hotlink protection](https://intl.cloud.tencent.com/document/product/266/33985) status. Valid values:
	// <li>Enabled</li>
	// <li>Disabled</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Referer authentication method. Valid values:
	// <li>`Black`: blocklist. Any HTTP request carrying a referer in the `Referers` list will be rejected. </li>
	// <li>`White`: allowlist. Only HTTP requests carrying referers in the `Referers` list will be accepted.</li>
	// When `Status` is set to `Enabled`, `AuthType` must be specified.
	AuthType *string `json:"AuthType,omitnil,omitempty" name:"AuthType"`

	// The list of referers (up to 20). When `Status` is set to `Enabled`, `Referers` cannot be empty. Enter domain names as referers.
	Referers []*string `json:"Referers,omitnil,omitempty" name:"Referers"`

	// Whether to allow requests with empty referer to access this domain name. Valid values:
	// <li>`Yes`</li>
	// <li>`No`</li>
	// When `Status` is set to `Enabled`, `BlankRefererAllowed` must be specified.
	BlankRefererAllowed *string `json:"BlankRefererAllowed,omitnil,omitempty" name:"BlankRefererAllowed"`
}

type RefererRule struct {
	// Rule type: <li>all: valid for all files;</li> <li>file: valid for specified file suffix;</li> <li>directory: valid for specified path;</li> <li>path: specified absolute The path takes effect. </li>
	RuleType *string `json:"RuleType,omitnil,omitempty" name:"RuleType"`

	// Matching content under the corresponding type of RuleType: <li>Fill in * when all is used;</li> <li>Fill in suffix name when file is used, such as jpg, txt;</li> <li>Fill in path when directory is used, such as /xxx/ test/;</li> <li>Fill in the absolute path when path is specified, such as /xxx/test.html. </li>
	RulePaths []*string `json:"RulePaths,omitnil,omitempty" name:"RulePaths"`

	// rferer configuration type, value: <li>whitelist: whitelist;</li> <li>blacklist: blacklist. </li>
	RefererType *string `json:"RefererType,omitnil,omitempty" name:"RefererType"`

	// Referer content list
	Referers []*string `json:"Referers,omitnil,omitempty" name:"Referers"`

	// Whether to allow empty referers: When the anti-hotlinking type is whitelist, true means that empty referers are allowed, false means that empty referers are not allowed; when the anti-hotlinking type is blacklist, true means that empty referers are rejected, and false means that empty referers are not rejected.
	AllowEmpty *bool `json:"AllowEmpty,omitnil,omitempty" name:"AllowEmpty"`
}

// Predefined struct for user
type RefreshUrlCacheRequestParams struct {
	// The URLs to purge. You can specify up to 20 URLs per request.
	Urls []*string `json:"Urls,omitnil,omitempty" name:"Urls"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type RefreshUrlCacheRequest struct {
	*tchttp.BaseRequest
	
	// The URLs to purge. You can specify up to 20 URLs per request.
	Urls []*string `json:"Urls,omitnil,omitempty" name:"Urls"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *RefreshUrlCacheRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RefreshUrlCacheRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Urls")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "RefreshUrlCacheRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type RefreshUrlCacheResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type RefreshUrlCacheResponse struct {
	*tchttp.BaseResponse
	Response *RefreshUrlCacheResponseParams `json:"Response"`
}

func (r *RefreshUrlCacheResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RefreshUrlCacheResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type RemoveWaterMarkTaskInput struct {
	// The ID of the media file.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`
}

type RemoveWaterMarkTaskOutput struct {
	// The file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The file type, such as MP4 or MP3.
	FileType *string `json:"FileType,omitnil,omitempty" name:"FileType"`

	// The playback URL of the output file.
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// The filename, which can be up to 64 characters long.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// The metadata of the video, including size, duration, video stream information, and audio stream information.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`
}

// Predefined struct for user
type RemoveWatermarkRequestParams struct {
	// The ID of the media file.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last seven days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The priority of a task flow. The higher the value, the higher the priority. Value range: [-10, 10]. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// This parameter is invalid now.
	TasksNotifyMode *string `json:"TasksNotifyMode,omitnil,omitempty" name:"TasksNotifyMode"`
}

type RemoveWatermarkRequest struct {
	*tchttp.BaseRequest
	
	// The ID of the media file.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last seven days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The priority of a task flow. The higher the value, the higher the priority. Value range: [-10, 10]. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// This parameter is invalid now.
	TasksNotifyMode *string `json:"TasksNotifyMode,omitnil,omitempty" name:"TasksNotifyMode"`
}

func (r *RemoveWatermarkRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RemoveWatermarkRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "SubAppId")
	delete(f, "SessionId")
	delete(f, "SessionContext")
	delete(f, "TasksPriority")
	delete(f, "TasksNotifyMode")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "RemoveWatermarkRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type RemoveWatermarkResponseParams struct {
	// The task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type RemoveWatermarkResponse struct {
	*tchttp.BaseResponse
	Response *RemoveWatermarkResponseParams `json:"Response"`
}

func (r *RemoveWatermarkResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RemoveWatermarkResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type RemoveWatermarkTask struct {
	// The task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The task flow status. Valid values:
	// <li>PROCESSING</li>
	// <li>FINISH</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video processing error codes](https://intl.cloud.tencent.com/document/product/266/39145?lang=en&pg=#video-processing).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0: Successful; other values: Failed.
	// <li>40000: Invalid input parameter.</li>
	// <li>60000: Source file error (e.g., video data is corrupted).</li>
	// <li>70000: Internal server error. Please try again.</li>
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// The error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// The input of a watermark removal task.
	// Note: This field may return null, indicating that no valid values can be obtained.
	Input *RemoveWaterMarkTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// The output of a watermark removal task.
	// Note: This field may return null, indicating that no valid values can be obtained.
	Output *RemoveWaterMarkTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last seven days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ProcedureStateChanged` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`
}

type RepairInfo struct {
	// Whether to enable video quality remastering. Valid values:
	// <li>`ON`</li>
	// <li>`OFF`</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The video quality remastering type. This parameter is valid only if `Switch` is `ON`.
	// <li>`weak`</li>
	// <li>`normal`</li>
	// <li>`strong`</li>
	// Default value: `weak`.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type RequestHeader struct {
	// Custom request header configuration switch, the values u200bu200bare: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Custom request header configuration rules
	HeaderRules []*HttpHeaderPathRule `json:"HeaderRules,omitnil,omitempty" name:"HeaderRules"`
}

// Predefined struct for user
type ResetProcedureTemplateRequestParams struct {
	// Task flow name
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Parameter of video processing task.
	MediaProcessTask *MediaProcessTaskInput `json:"MediaProcessTask,omitnil,omitempty" name:"MediaProcessTask"`

	// The information of an intelligent moderation task\*.
	// <font color=red>\*: This parameter is used by our old moderation templates and is not recommended. Please use `ReviewAudioVideoTask` instead.</font> 
	AiContentReviewTask *AiContentReviewTaskInput `json:"AiContentReviewTask,omitnil,omitempty" name:"AiContentReviewTask"`

	// Parameter of AI-based content analysis task.
	AiAnalysisTask *AiAnalysisTaskInput `json:"AiAnalysisTask,omitnil,omitempty" name:"AiAnalysisTask"`

	// Type parameter of AI-based content recognition task.
	AiRecognitionTask *AiRecognitionTaskInput `json:"AiRecognitionTask,omitnil,omitempty" name:"AiRecognitionTask"`

	// The information of the moderation task.
	ReviewAudioVideoTask *ProcedureReviewAudioVideoTaskInput `json:"ReviewAudioVideoTask,omitnil,omitempty" name:"ReviewAudioVideoTask"`
}

type ResetProcedureTemplateRequest struct {
	*tchttp.BaseRequest
	
	// Task flow name
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Template description. Length limit: 256 characters.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Parameter of video processing task.
	MediaProcessTask *MediaProcessTaskInput `json:"MediaProcessTask,omitnil,omitempty" name:"MediaProcessTask"`

	// The information of an intelligent moderation task\*.
	// <font color=red>\*: This parameter is used by our old moderation templates and is not recommended. Please use `ReviewAudioVideoTask` instead.</font> 
	AiContentReviewTask *AiContentReviewTaskInput `json:"AiContentReviewTask,omitnil,omitempty" name:"AiContentReviewTask"`

	// Parameter of AI-based content analysis task.
	AiAnalysisTask *AiAnalysisTaskInput `json:"AiAnalysisTask,omitnil,omitempty" name:"AiAnalysisTask"`

	// Type parameter of AI-based content recognition task.
	AiRecognitionTask *AiRecognitionTaskInput `json:"AiRecognitionTask,omitnil,omitempty" name:"AiRecognitionTask"`

	// The information of the moderation task.
	ReviewAudioVideoTask *ProcedureReviewAudioVideoTaskInput `json:"ReviewAudioVideoTask,omitnil,omitempty" name:"ReviewAudioVideoTask"`
}

func (r *ResetProcedureTemplateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ResetProcedureTemplateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Name")
	delete(f, "SubAppId")
	delete(f, "Comment")
	delete(f, "MediaProcessTask")
	delete(f, "AiContentReviewTask")
	delete(f, "AiAnalysisTask")
	delete(f, "AiRecognitionTask")
	delete(f, "ReviewAudioVideoTask")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ResetProcedureTemplateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ResetProcedureTemplateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ResetProcedureTemplateResponse struct {
	*tchttp.BaseResponse
	Response *ResetProcedureTemplateResponseParams `json:"Response"`
}

func (r *ResetProcedureTemplateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ResetProcedureTemplateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ResolutionNameInfo struct {
	// Length of video short side in px.
	MinEdgeLength *uint64 `json:"MinEdgeLength,omitnil,omitempty" name:"MinEdgeLength"`

	// Display name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`
}

type ResourceTag struct {
	// Tag key.
	TagKey *string `json:"TagKey,omitnil,omitempty" name:"TagKey"`

	// Tag value.
	TagValue *string `json:"TagValue,omitnil,omitempty" name:"TagValue"`
}

type ResponseHeader struct {
	// Custom response header configuration switch, the values u200bu200bare: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Custom response header rules
	HeaderRules []*HttpHeaderPathRule `json:"HeaderRules,omitnil,omitempty" name:"HeaderRules"`
}

// Predefined struct for user
type RestoreMediaRequestParams struct {
	// Media file unique identifier list, maximum length: 100.
	FileIds []*string `json:"FileIds,omitnil,omitempty" name:"FileIds"`

	// The accessible duration of the unfrozen temporary media files must be greater than 0, and the unit is "days".
	RestoreDay *uint64 `json:"RestoreDay,omitnil,omitempty" name:"RestoreDay"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The retrieval mode. If the current storage class is ARCHIVE, the valid values for this parameter are as follows:
	// <li>Expedited: The files are made available in five minutes.</li>
	// <li>Standard: The files are made available in five hours.</li>
	// <li>Bulk: The files are made available in 12 hours.</li>
	// If the current storage class is DEEP ARCHIVE, the valid values for this parameter are as follows:
	// <li>Standard: The files are made available in 24 hours.</li>
	// <li>Bulk: The files are made available in 48 hours.</li>
	RestoreTier *string `json:"RestoreTier,omitnil,omitempty" name:"RestoreTier"`
}

type RestoreMediaRequest struct {
	*tchttp.BaseRequest
	
	// Media file unique identifier list, maximum length: 100.
	FileIds []*string `json:"FileIds,omitnil,omitempty" name:"FileIds"`

	// The accessible duration of the unfrozen temporary media files must be greater than 0, and the unit is "days".
	RestoreDay *uint64 `json:"RestoreDay,omitnil,omitempty" name:"RestoreDay"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The retrieval mode. If the current storage class is ARCHIVE, the valid values for this parameter are as follows:
	// <li>Expedited: The files are made available in five minutes.</li>
	// <li>Standard: The files are made available in five hours.</li>
	// <li>Bulk: The files are made available in 12 hours.</li>
	// If the current storage class is DEEP ARCHIVE, the valid values for this parameter are as follows:
	// <li>Standard: The files are made available in 24 hours.</li>
	// <li>Bulk: The files are made available in 48 hours.</li>
	RestoreTier *string `json:"RestoreTier,omitnil,omitempty" name:"RestoreTier"`
}

func (r *RestoreMediaRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RestoreMediaRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileIds")
	delete(f, "RestoreDay")
	delete(f, "SubAppId")
	delete(f, "RestoreTier")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "RestoreMediaRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type RestoreMediaResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type RestoreMediaResponse struct {
	*tchttp.BaseResponse
	Response *RestoreMediaResponseParams `json:"Response"`
}

func (r *RestoreMediaResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RestoreMediaResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type RestoreMediaTask struct {
	// File ID
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Original storage class
	OriginalStorageClass *string `json:"OriginalStorageClass,omitnil,omitempty" name:"OriginalStorageClass"`

	// Target storage class. For temporary retrieval, the target storage class is the same as the original.
	TargetStorageClass *string `json:"TargetStorageClass,omitnil,omitempty" name:"TargetStorageClass"`

	// Retrieval mode. Valid values:
	// <li>Expedited</li>
	// <li>Standard</li>
	// <li>Bulk</li>
	RestoreTier *string `json:"RestoreTier,omitnil,omitempty" name:"RestoreTier"`

	// Validity period (days) for a temporary copy. `0` indicates permanent retrieval.
	RestoreDay *int64 `json:"RestoreDay,omitnil,omitempty" name:"RestoreDay"`

	// This field has been disused.
	Status *int64 `json:"Status,omitnil,omitempty" name:"Status"`

	// This field has been disused.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`
}

// Predefined struct for user
type ReviewAudioVideoRequestParams struct {
	// The media file ID, which is assigned after upload and uniquely identifies a file in VOD. You can view the ID of a file in the [NewFileUpload](https://www.tencentcloud.com/document/product/266/33950) callback or in the [VOD console](https://console.tencentcloud.com/vod/media).
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The type of moderated content. Valid values:
	// <li>`Media`: The original audio/video.</li>
	// <li>`Cover`: Thumbnails.</li>
	// If this parameter is not specified or an empty array is passed in, `Media` will be used.
	ReviewContents []*string `json:"ReviewContents,omitnil,omitempty" name:"ReviewContents"`

	// The moderation template ID. Valid values: <li>10 (default): The preset template, whose violation labels are `Porn` and `Terror`.</li>
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The priority of a task flow. The higher the value, the higher the priority. Value range: [-10, 10]. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// The source context, which is used to pass through user request information. The `ReviewAudioVideoComplete` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The session ID, which is used to identify duplicate requests. If there was a request with the same session ID in the last three days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// A reserved parameter.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type ReviewAudioVideoRequest struct {
	*tchttp.BaseRequest
	
	// The media file ID, which is assigned after upload and uniquely identifies a file in VOD. You can view the ID of a file in the [NewFileUpload](https://www.tencentcloud.com/document/product/266/33950) callback or in the [VOD console](https://console.tencentcloud.com/vod/media).
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The type of moderated content. Valid values:
	// <li>`Media`: The original audio/video.</li>
	// <li>`Cover`: Thumbnails.</li>
	// If this parameter is not specified or an empty array is passed in, `Media` will be used.
	ReviewContents []*string `json:"ReviewContents,omitnil,omitempty" name:"ReviewContents"`

	// The moderation template ID. Valid values: <li>10 (default): The preset template, whose violation labels are `Porn` and `Terror`.</li>
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The priority of a task flow. The higher the value, the higher the priority. Value range: [-10, 10]. If this parameter is left empty, 0 will be used.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`

	// The source context, which is used to pass through user request information. The `ReviewAudioVideoComplete` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The session ID, which is used to identify duplicate requests. If there was a request with the same session ID in the last three days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// A reserved parameter.
	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *ReviewAudioVideoRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ReviewAudioVideoRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "SubAppId")
	delete(f, "ReviewContents")
	delete(f, "Definition")
	delete(f, "TasksPriority")
	delete(f, "SessionContext")
	delete(f, "SessionId")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ReviewAudioVideoRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ReviewAudioVideoResponseParams struct {
	// The task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ReviewAudioVideoResponse struct {
	*tchttp.BaseResponse
	Response *ReviewAudioVideoResponseParams `json:"Response"`
}

func (r *ReviewAudioVideoResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ReviewAudioVideoResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ReviewAudioVideoSegmentItem struct {
	// The start time offset (seconds) of the segment.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// The end time offset (seconds) of the segment.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// The confidence score of the segment.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// The processing suggestion for the segment. Valid values:
	// <li>review: The content may be non-compliant. Please review it.</li>
	// <li>block: The content is non-compliant. We recommend you block it.</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// The most likely label for the segment. Valid values:
	// <li>Porn</li>
	// <li>Terrorism</li>
	Label *string `json:"Label,omitnil,omitempty" name:"Label"`

	// The sublabel for the segment. This parameter is valid only if `Form` is `Image` or `Voice`.
	// Valid values when `Form` is `Image` and `Label` is `Porn`:
	// <li>porn</li>
	// <li>vulgar</li>
	// 
	// Valid values when `Form` is `Image` and `Label` is `Terrorism`:
	// <li>guns</li>
	// <li>bloody</li>
	// <li>banners</li>
	// <li>scenario (terrorist scenes)</li>
	// <li>explosion</li>
	// 
	// Valid values when `Form` is `Voice` and `Label` is `Porn`:
	// <li>moan</li>
	SubLabel *string `json:"SubLabel,omitnil,omitempty" name:"SubLabel"`

	// The format of the suspicious segment detected. Valid values:
	// <li>Image</li>
	// <li>OCR</li>
	// <li>ASR</li>
	// <li>Voice</li>
	Form *string `json:"Form,omitnil,omitempty" name:"Form"`

	// The pixel coordinates ([x1, y1, x2, y2]) of the top-left corner and bottom-right corner of the suspicious text. This parameter is valid only if `Form` is `OCR`.
	// <font color=red>Note</font>: This parameter is not supported currently.
	AreaCoordSet []*int64 `json:"AreaCoordSet,omitnil,omitempty" name:"AreaCoordSet"`

	// The content of the suspicious text detected. This parameter is valid only if `Form` is `OCR` or `ASR`.
	Text *string `json:"Text,omitnil,omitempty" name:"Text"`

	// The keywords that match the suspicious text. This parameter is valid only if `Form` is `OCR` or `ASR`.
	KeywordSet []*string `json:"KeywordSet,omitnil,omitempty" name:"KeywordSet"`

	// The URL of a suspected image (which will be deleted
	//  after `PicUrlExpireTime`).
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// The expiration time of the suspected image URL in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	PicUrlExpireTime *string `json:"PicUrlExpireTime,omitnil,omitempty" name:"PicUrlExpireTime"`
}

type ReviewAudioVideoTask struct {
	// The task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The task status. Valid values:
	// <li>PROCESSING</li>
	// <li>FINISH</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// The error code. An empty string indicates the task is successful; other values indicate that the task failed. For details, see [Video processing error codes](https://intl.cloud.tencent.com/document/product/266/39145?lang=en&pg=#video-processing).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// The error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// The input of a moderation task.
	// Note: This field may return `null`, indicating that no valid values can be obtained.
	Input *ReviewAudioVideoTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// The output of a moderation task.
	// Note: This field may return null, indicating that no valid values can be obtained.
	Output *ReviewAudioVideoTaskOutput `json:"Output,omitnil,omitempty" name:"Output"`

	// The session ID, which is used for de-duplication. If there was a request with the same session ID in the last seven days, an error will be returned for the current request. The session ID can contain up to 50 characters. If you do not pass this parameter or pass in an empty string, duplicate sessions will not be identified.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The source context, which is used to pass through user request information. The `ReviewAudioVideoComplete` callback will return the value of this parameter. It can contain up to 1,000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`
}

type ReviewAudioVideoTaskInput struct {
	// The ID of the media file.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The moderation template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The type of moderated content. Valid values:
	// <li>`Media`: The original audio/video.</li>
	// <li>`Cover`: Thumbnails.</li>
	ReviewContents []*string `json:"ReviewContents,omitnil,omitempty" name:"ReviewContents"`
}

type ReviewAudioVideoTaskOutput struct {
	// The handling suggestion. Valid values:
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// The most likely label for the suspicious content. This parameter is valid only if `Suggestion` is `review` or `block`.
	// <li>Porn</li>
	// <li>Terrorism</li>
	Label *string `json:"Label,omitnil,omitempty" name:"Label"`

	// The most likely format of the suspicious content. This parameter is valid only if `Suggestion` is `review` or `block`.
	// <li>Image</li>
	// <li>OCR</li>
	// <li>ASR</li>
	// <li>Voice</li>
	Form *string `json:"Form,omitnil,omitempty" name:"Form"`

	// A list of the suspicious segments detected.
	// <font color=red>Note</font>: Only the first 10 results will be returned at most. You can get all the results from the file specified by `SegmentSetFileUrl`.
	SegmentSet []*ReviewAudioVideoSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// The URL of the file that contains suspicious segments. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time (`SegmentSetFileUrlExpireTime`).
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// The expiration time of the file that contains suspicious segments, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format).
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`

	// The thumbnail moderation result.
	// Note: This field may return null, indicating that no valid values can be obtained.
	CoverReviewResult *ReviewImageResult `json:"CoverReviewResult,omitnil,omitempty" name:"CoverReviewResult"`
}

// Predefined struct for user
type ReviewImageRequestParams struct {
	// The unique ID of the media file. For this API to work, the file must be an image.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The image moderation template ID. Valid values: <li>10: The preset template, whose violation labels are `Porn` and `Terror`.</li>
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type ReviewImageRequest struct {
	*tchttp.BaseRequest
	
	// The unique ID of the media file. For this API to work, the file must be an image.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The image moderation template ID. Valid values: <li>10: The preset template, whose violation labels are `Porn` and `Terror`.</li>
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *ReviewImageRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ReviewImageRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "Definition")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ReviewImageRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ReviewImageResponseParams struct {
	// The image moderation result. <font color=red>Note: This parameter is no longer used. Please use `MediaReviewResult` instead.</font>
	ReviewResultSet []*ContentReviewResult `json:"ReviewResultSet,omitnil,omitempty" name:"ReviewResultSet"`

	// The image moderation result.
	// Note: This field may return null, indicating that no valid values can be obtained.
	MediaReviewResult *ReviewImageResult `json:"MediaReviewResult,omitnil,omitempty" name:"MediaReviewResult"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ReviewImageResponse struct {
	*tchttp.BaseResponse
	Response *ReviewImageResponseParams `json:"Response"`
}

func (r *ReviewImageResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ReviewImageResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ReviewImageResult struct {
	// The suggestion. Valid values:
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// The most likely label for the suspicious content. This parameter is valid if `Suggestion` is `review` or `block`. Valid values: <li>`Porn`</li> <li>`Terror`</li>
	Label *string `json:"Label,omitnil,omitempty" name:"Label"`

	// The most likely type of the suspicious content. This parameter is valid only if `Suggestion` is `review` or `block`.
	// <li>`Image` (people or icons in images)</li>
	// <li>`OCR` (text in images)</li>
	Form *string `json:"Form,omitnil,omitempty" name:"Form"`

	// A list of the suspicious segments detected.
	// <font color=red>Note</font>: Only the first 10 results will be returned at most. You can get all the results from the file specified by `SegmentSetFileUrl`.
	SegmentSet []*ReviewImageSegmentItem `json:"SegmentSet,omitnil,omitempty" name:"SegmentSet"`

	// The URL of the file that contains suspicious segments. The file is in JSON format and has the same data structure as `SegmentSet`. Instead of being saved permanently, the file is deleted upon the expiration time (`SegmentSetFileUrlExpireTime`).
	SegmentSetFileUrl *string `json:"SegmentSetFileUrl,omitnil,omitempty" name:"SegmentSetFileUrl"`

	// The expiration time of the file that contains suspicious segments, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732#iso-date-format).
	SegmentSetFileUrlExpireTime *string `json:"SegmentSetFileUrlExpireTime,omitnil,omitempty" name:"SegmentSetFileUrlExpireTime"`
}

type ReviewImageSegmentItem struct {
	// The confidence score for the suspicious segment.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// The suggestion. Valid values:
	// <li>`review`: The content may be non-compliant and needs to be reviewed.</li>
	// <li>`block`: The content is non-compliant and should be blocked.</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// The most likely label for the suspicious content. Valid values: <li>`Porn`</li> <li>`Terror`</li>
	Label *string `json:"Label,omitnil,omitempty" name:"Label"`

	// The sub-label.
	SubLabel *string `json:"SubLabel,omitnil,omitempty" name:"SubLabel"`

	// The type of the suspicious segment. Valid values:
	// <li>`Image` (people or icons in images)</li>
	// <li>`OCR` (text in images)</li>
	Form *string `json:"Form,omitnil,omitempty" name:"Form"`

	// The pixel coordinates of the suspicious people, icons, or text. The format is [x1, y1, x2, y2], which indicates the coordinates of the top-left and bottom-right corners.
	AreaCoordSet []*int64 `json:"AreaCoordSet,omitnil,omitempty" name:"AreaCoordSet"`

	// The content of the suspicious text detected. This parameter is valid only if `Form` is `OCR`.
	Text *string `json:"Text,omitnil,omitempty" name:"Text"`

	// The keywords that match the suspicious text. This parameter is valid only if `Form` is `OCR`.
	KeywordSet []*string `json:"KeywordSet,omitnil,omitempty" name:"KeywordSet"`
}

type ReviewInfo struct {
	// The moderation template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The suggestion. Valid values:
	// <li>pass</li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// The moderation type in the format of `Form.Label`. This parameter is valid if `Suggestion` is `review` or `block`.
	// `Form` indicates the type of inappropriate content detected. Valid values:
	// <li>`Image` (people or icons in images)</li>
	// <li>`OCR` (text in images)</li>
	// <li>`ASR` (speech)</li>
	// <li>`Voice`</li>
	// `Label` indicates the violation label. Valid values:
	// <li>`Porn` (pornographic content)</li>
	// <li>`Terror` (terrorist content)</li>
	// <li>`Polity` (politically sensitive content)</li>
	// <li>`Ad` (advertisement)</li>
	// <li>`Illegal` (illegal content)</li>
	// <li>`Abuse`</li>
	// <li>`Moan`</li>
	TypeSet []*string `json:"TypeSet,omitnil,omitempty" name:"TypeSet"`

	// The moderation time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	ReviewTime *string `json:"ReviewTime,omitnil,omitempty" name:"ReviewTime"`
}

type ReviewTemplate struct {
	// The unique ID of the moderation template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The template name.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// The template type. Valid values:
	// <li>Preset</li>
	// <li>Custom</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The violation labels used.
	Labels []*string `json:"Labels,omitnil,omitempty" name:"Labels"`

	// The template creation time in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// The last updated time of the template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

type RoundPlayFilePlayInfo struct {
	// Playlist program id, assigned by the system.
	ItemId *string `json:"ItemId,omitnil,omitempty" name:"ItemId"`

	// The media file id.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The playback start time, in [iso 8601 date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format).
	StartPlayTime *string `json:"StartPlayTime,omitnil,omitempty" name:"StartPlayTime"`

	// Playback duration, in seconds.
	// Note: this field may return null, indicating that no valid value was found.
	Duration *float64 `json:"Duration,omitnil,omitempty" name:"Duration"`

	// Playback progress, in seconds.
	// Note: this field may return null, indicating that no valid value was found.
	Progress *float64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

type RoundPlayInfo struct {
	// The playlist ID.
	RoundPlayId *string `json:"RoundPlayId,omitnil,omitempty" name:"RoundPlayId"`

	// The playback start time, in [ISO 8601 date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format).
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// The files on the list.
	RoundPlaylist []*RoundPlayListItemInfo `json:"RoundPlaylist,omitnil,omitempty" name:"RoundPlaylist"`

	// The playlist name (not longer than 64 characters).
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// The playlist description (not longer than 256 characters).
	Desc *string `json:"Desc,omitnil,omitempty" name:"Desc"`

	// Playback status, optional values:
	// <li>Enabled: startup status;</li>
	// <li>Disabled: stop status. </li>
	// Default value: Enabled.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Play mode, optional values:
	// <li>Loop: Play the playlist in a loop;</li>
	// <li>Linear: Play once, stop playing after the playlist is played. </li>
	// Default value: Loop.
	PlayBackMode *string `json:"PlayBackMode,omitnil,omitempty" name:"PlayBackMode"`

	// Carousel playback address.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// Creation time, in iso 8601 format. for details, see [iso date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Update time, in iso 8601 format. for details, see [iso date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// Expiration time, in iso 8601 format. for details, see [iso date format](https://www.tencentcloud.com/document/product/266/11732?has_map=2#iso-date-format). the playback of the playlist will stop after expiration. "9999-12-31t23:59:59+08:00" means never expire.
	ExpiredTime *string `json:"ExpiredTime,omitnil,omitempty" name:"ExpiredTime"`
}

type RoundPlayListItemInfo struct {
	// The file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The type of the media played. Valid values:
	// <li>`Transcode`: A transcoding output. Because a file may be bound to multiple transcoding templates, you need to specify `Definition` if the type is `Transcode`.</li>
	// <li>`Original`: The original file.</li>
	// The file must be in HLS format.
	AudioVideoType *string `json:"AudioVideoType,omitnil,omitempty" name:"AudioVideoType"`

	// ID of the program to be played, assigned by the system.
	ItemId *string `json:"ItemId,omitnil,omitempty" name:"ItemId"`

	// The transcoding template to be played is specified. this parameter is required if `audiovideotype` is `transcode`.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type RuleCache struct {
	// Rule type: <li>all: valid for all files;</li> <li>file: valid for specified file suffix;</li> <li>directory: valid for specified path;</li> <li>path: specified absolute The path takes effect. </li>
	RuleType *string `json:"RuleType,omitnil,omitempty" name:"RuleType"`

	// Matching content under the corresponding type of RuleType: <li>Fill in * when all is used;</li> <li>Fill in suffix name when file is used, such as jpg, txt;</li> <li>Fill in path when directory is used, such as /xxx/ test/;</li> <li>Fill in the absolute path when path is specified, such as /xxx/test.html. </li>
	RulePaths []*string `json:"RulePaths,omitnil,omitempty" name:"RulePaths"`

	// Cache configuration
	CacheConfig *RuleCacheConfig `json:"CacheConfig,omitnil,omitempty" name:"CacheConfig"`
}

type RuleCacheConfig struct {
	// Cache configuration.
	// Note: This field may return null, indicating that no valid value can be obtained.
	Cache *CacheConfigCache `json:"Cache,omitnil,omitempty" name:"Cache"`

	// Configuration is not cached.
	// Note: This field may return null, indicating that no valid value can be obtained.
	NoCache *CacheConfigNoCache `json:"NoCache,omitnil,omitempty" name:"NoCache"`

	// Follow the origin configuration.
	// Note: This field may return null, indicating that no valid value can be obtained.
	FollowOrigin *CacheConfigFollowOrigin `json:"FollowOrigin,omitnil,omitempty" name:"FollowOrigin"`
}

type SDMCDrmKeyProviderInfo struct {
	// The user ID assigned by SDMC, which can contain up to 128 characters.
	Uid *string `json:"Uid,omitnil,omitempty" name:"Uid"`

	// The secret ID assigned by SDMC, which can contain up to 128 characters.
	SecretId *string `json:"SecretId,omitnil,omitempty" name:"SecretId"`

	// The secret key assigned by SDMC, which can contain up to 128 characters.
	SecretKey *string `json:"SecretKey,omitnil,omitempty" name:"SecretKey"`

	// The URL of the FairPlay certificate issued by SDMC. It must be an HTTPS address and can contain up to 1,024 characters.
	FairPlayCertificateUrl *string `json:"FairPlayCertificateUrl,omitnil,omitempty" name:"FairPlayCertificateUrl"`
}

type SampleSnapshotTaskInput struct {
	// Sampled screencapturing template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// List of up to 10 image or text watermarks.
	// Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkSet []*WatermarkInput `json:"WatermarkSet,omitnil,omitempty" name:"WatermarkSet"`
}

type SampleSnapshotTemplate struct {
	// Unique ID of a sampled screencapturing template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Template type. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Name of a sampled screencapturing template.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Image format.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Sampled screencapturing type.
	SampleType *string `json:"SampleType,omitnil,omitempty" name:"SampleType"`

	// Sampling interval.
	SampleInterval *uint64 `json:"SampleInterval,omitnil,omitempty" name:"SampleInterval"`

	// Creation time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// The fill mode, or the way of processing a screenshot when the configured aspect ratio is different from that of the source video. Valid values:
	// <li>stretch: Stretch the image frame by frame to fill the entire screen. The video image may become "squashed" or "stretched" after transcoding.</li>
	// <li>black: Keep the image's original aspect ratio and fill the blank space with black bars.</li>
	// <li>white: Keep the image’s original aspect ratio and fill the blank space with white bars.</li>
	// <li>gauss: Keep the image’s original aspect ratio and apply Gaussian blur to the blank space.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

type ScratchRepairInfo struct {
	// Whether to enable banding removal. Valid values:
	// <li>`ON`</li>
	// <li>`OFF`</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The banding removal strength. Value range: 0.0 – 1.0. This parameter is valid only if `Switch` is `ON`.
	// Default value: `0.0`.
	Intensity *float64 `json:"Intensity,omitnil,omitempty" name:"Intensity"`

	// The banding removal type. This parameter is valid only if `Switch` is `ON`. Valid values:
	// <li>`normal`</li>
	// Default value: `normal`.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

// Predefined struct for user
type SearchMediaRequestParams struct {
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// File ID set. Any element in the set can be matched.
	// <li>Array length limit: 10.</li>
	// <li>ID length limit: 40 characters.</li>
	FileIds []*string `json:"FileIds,omitnil,omitempty" name:"FileIds"`

	// The file names to use for fuzzy search, which are sorted by relevance in descending order.
	// <li>Name length limit: 100 characters.</li>
	// <li>Array length limit: 10</li>
	Names []*string `json:"Names,omitnil,omitempty" name:"Names"`

	// The file name prefixes to search.
	// <li>Prefix length limit: 100 characters.</li>
	// <li>Array length limit: 10.</li>
	NamePrefixes []*string `json:"NamePrefixes,omitnil,omitempty" name:"NamePrefixes"`

	// File description set. Media file descriptions are fuzzily matched. The higher the match rate, the higher-ranked the result.
	// <li>Length limit for a single description: 100 characters</li>
	// <li>Array length limit: 10</li>
	Descriptions []*string `json:"Descriptions,omitnil,omitempty" name:"Descriptions"`

	// Category ID set. The categories of the specified IDs and all subcategories in the set are matched.
	// <li>Array length limit: 10.</li>
	ClassIds []*int64 `json:"ClassIds,omitnil,omitempty" name:"ClassIds"`

	// The tags to search. A file is considered a match if it has any of the tags specified.
	// <li>Tag length limit: 32 characters.</li>
	// <li>Array length limit: 16.</li>
	Tags []*string `json:"Tags,omitnil,omitempty" name:"Tags"`

	// File type. Any element in the set can be matched.
	// <li>Video: video file</li>
	// <li>Audio: audio file</li>
	// <li>Image: image file</li>
	Categories []*string `json:"Categories,omitnil,omitempty" name:"Categories"`

	// Media file source set. For valid values, please see [SourceType](https://intl.cloud.tencent.com/document/product/266/31773?from_cn_redirect=1#MediaSourceData).
	// <li>Array length limit: 10.</li>
	SourceTypes []*string `json:"SourceTypes,omitnil,omitempty" name:"SourceTypes"`

	// The live stream code array. A media file will be returned if it matches any element in the array.
	// <li>Array length limit: 10</li>
	StreamIds []*string `json:"StreamIds,omitnil,omitempty" name:"StreamIds"`

	// Matches files created within the time period.
	// <li>Includes specified start and end points in time.</li>
	CreateTime *TimeRange `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Files whose expiration time points are within the specified time range will be returned. Expired files will not be returned.
	// <li>The files whose expiration time points are on the start or end time of the specified range will also be returned.</li>
	ExpireTime *TimeRange `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// Regions where media files are stored, such as `ap-chongqing`. For more regions, see [Storage Regions](https://intl.cloud.tencent.com/document/product/266/9760?from_cn_redirect=1#.E5.B7.B2.E6.94.AF.E6.8C.81.E5.9C.B0.E5.9F.9F.E5.88.97.E8.A1.A8).
	// <li>Length limit for a single region: 20 characters</li>
	// <li>Array length limit: 20</li>
	StorageRegions []*string `json:"StorageRegions,omitnil,omitempty" name:"StorageRegions"`

	// An array of storage classes. Valid values:
	// <li>STANDARD</li>
	// <li>STANDARD_IA</li>
	// <li>ARCHIVE</li>
	// <li>DEEP_ARCHIVE</li>
	StorageClasses []*string `json:"StorageClasses,omitnil,omitempty" name:"StorageClasses"`

	// The file formats.
	// <li>Array length limit: 10</li>
	MediaTypes []*string `json:"MediaTypes,omitnil,omitempty" name:"MediaTypes"`

	// The file statuses.
	// <li>`Normal`</li>
	// <li>`SystemForbidden` (blocked by VOD)</li>
	// <li>`Forbidden` (blocked by you)</li>
	Status []*string `json:"Status,omitnil,omitempty" name:"Status"`

	// The types of moderation result.
	// <li>`pass`</li>
	// <li>`review` (the content may be non-compliant and needs to be reviewed)</li>
	// <li>`block` (the content is non-compliant and should be blocked)</li>
	// <li>`notModerated` (the file hasn't been moderated yet)</li>
	ReviewResults []*string `json:"ReviewResults,omitnil,omitempty" name:"ReviewResults"`

	// The TRTC application IDs. Any file that matches one of the application IDs will be returned.
	// <li>Array length limit: 10</li>
	TrtcSdkAppIds []*uint64 `json:"TrtcSdkAppIds,omitnil,omitempty" name:"TrtcSdkAppIds"`

	// The TRTC room IDs. Any file that matches one of the room IDs will be returned.
	// <li>Element length limit: 64 characters.</li>
	// <li>Array length limit: 10.</li>
	TrtcRoomIds []*string `json:"TrtcRoomIds,omitnil,omitempty" name:"TrtcRoomIds"`

	// Specifies information entry that needs to be returned for all media files. Multiple entries can be specified simultaneously. N starts from 0. If this field is left empty, all information entries will be returned by default. Valid values:
	// <li>basicInfo (basic video information).</li>
	// <li>metaData (video metadata).</li>
	// <li>transcodeInfo (result information of video transcoding).</li>
	// <li>animatedGraphicsInfo (result information of animated image generating task).</li>
	// <li>imageSpriteInfo (image sprite information).</li>
	// <li>snapshotByTimeOffsetInfo (point-in-time screenshot information).</li>
	// <li>sampleSnapshotInfo (sampled screenshot information).</li>
	// <li>keyFrameDescInfo (timestamp information).</li>
	// <li>adaptiveDynamicStreamingInfo (information of adaptive bitrate streaming).</li>
	// <li>miniProgramReviewInfo (WeChat Mini Program audit information).</li>
	Filters []*string `json:"Filters,omitnil,omitempty" name:"Filters"`

	// Sorting order.
	// <li>Valid value of `Sort.Field`: CreateTime.</li>
	// <li>If `Text`, `Names`, or `Descriptions` is not empty, the `Sort.Field` field will not take effect, and the search results will be sorted by match rate.</li>
	Sort *SortBy `json:"Sort,omitnil,omitempty" name:"Sort"`

	// <div id="p_offset">Start offset of a paged return. Default value: 0. Entries from No. "Offset" to No. "Offset + Limit - 1" will be returned.
	// <li>Value range: "Offset + Limit" cannot be more than 5,000. (For more information, please see <a href="#maxResultsDesc">Limit on the Number of Results Returned by API</a>)</li></div>
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// <div id="p_limit">Number of entries returned by a paged query. Default value: 10. Entries from No. "Offset" to No. "Offset + Limit - 1" will be returned.
	// <li>Value range: "Offset + Limit" cannot be more than 5,000. (For more information, please see <a href="#maxResultsDesc">Limit on the Number of Results Returned by API</a>)</li></div>
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// (This is not recommended. `Names`, `NamePrefixes`, or `Descriptions` should be used instead)
	// Search text, which fuzzily matches the media file name or description. The more matching items and the higher the match rate, the higher-ranked the result. It can contain up to 64 characters.
	Text *string `json:"Text,omitnil,omitempty" name:"Text"`

	// (This is not recommended. `SourceTypes` should be used instead)
	// Media file source. For valid values, please see [SourceType](https://intl.cloud.tencent.com/document/product/266/31773?from_cn_redirect=1#MediaSourceData).
	SourceType *string `json:"SourceType,omitnil,omitempty" name:"SourceType"`

	// (Not recommended. Consider using `StreamIds` instead.)
	// The live stream code.
	StreamId *string `json:"StreamId,omitnil,omitempty" name:"StreamId"`

	// (This is not recommended. `CreateTime` should be used instead)
	// Start time in the creation time range.
	// <li>After or at the start time.</li>
	// <li>If `CreateTime.After` also exists, it will be used first.</li>
	// <li>In ISO 8601 format. For more information, please see [ISO Date Format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).</li>
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// (This is not recommended. `CreateTime` should be used instead)
	// End time in the creation time range.
	// <li>Before the end time.</li>
	// <li>If `CreateTime.Before` also exists, it will be used first.</li>
	// <li>In ISO 8601 format. For more information, please see [ISO Date Format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).</li>
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// This parameter is invalid now.
	Vids []*string `json:"Vids,omitnil,omitempty" name:"Vids"`

	// This parameter is invalid now.
	Vid *string `json:"Vid,omitnil,omitempty" name:"Vid"`
}

type SearchMediaRequest struct {
	*tchttp.BaseRequest
	
	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// File ID set. Any element in the set can be matched.
	// <li>Array length limit: 10.</li>
	// <li>ID length limit: 40 characters.</li>
	FileIds []*string `json:"FileIds,omitnil,omitempty" name:"FileIds"`

	// The file names to use for fuzzy search, which are sorted by relevance in descending order.
	// <li>Name length limit: 100 characters.</li>
	// <li>Array length limit: 10</li>
	Names []*string `json:"Names,omitnil,omitempty" name:"Names"`

	// The file name prefixes to search.
	// <li>Prefix length limit: 100 characters.</li>
	// <li>Array length limit: 10.</li>
	NamePrefixes []*string `json:"NamePrefixes,omitnil,omitempty" name:"NamePrefixes"`

	// File description set. Media file descriptions are fuzzily matched. The higher the match rate, the higher-ranked the result.
	// <li>Length limit for a single description: 100 characters</li>
	// <li>Array length limit: 10</li>
	Descriptions []*string `json:"Descriptions,omitnil,omitempty" name:"Descriptions"`

	// Category ID set. The categories of the specified IDs and all subcategories in the set are matched.
	// <li>Array length limit: 10.</li>
	ClassIds []*int64 `json:"ClassIds,omitnil,omitempty" name:"ClassIds"`

	// The tags to search. A file is considered a match if it has any of the tags specified.
	// <li>Tag length limit: 32 characters.</li>
	// <li>Array length limit: 16.</li>
	Tags []*string `json:"Tags,omitnil,omitempty" name:"Tags"`

	// File type. Any element in the set can be matched.
	// <li>Video: video file</li>
	// <li>Audio: audio file</li>
	// <li>Image: image file</li>
	Categories []*string `json:"Categories,omitnil,omitempty" name:"Categories"`

	// Media file source set. For valid values, please see [SourceType](https://intl.cloud.tencent.com/document/product/266/31773?from_cn_redirect=1#MediaSourceData).
	// <li>Array length limit: 10.</li>
	SourceTypes []*string `json:"SourceTypes,omitnil,omitempty" name:"SourceTypes"`

	// The live stream code array. A media file will be returned if it matches any element in the array.
	// <li>Array length limit: 10</li>
	StreamIds []*string `json:"StreamIds,omitnil,omitempty" name:"StreamIds"`

	// Matches files created within the time period.
	// <li>Includes specified start and end points in time.</li>
	CreateTime *TimeRange `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Files whose expiration time points are within the specified time range will be returned. Expired files will not be returned.
	// <li>The files whose expiration time points are on the start or end time of the specified range will also be returned.</li>
	ExpireTime *TimeRange `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// Regions where media files are stored, such as `ap-chongqing`. For more regions, see [Storage Regions](https://intl.cloud.tencent.com/document/product/266/9760?from_cn_redirect=1#.E5.B7.B2.E6.94.AF.E6.8C.81.E5.9C.B0.E5.9F.9F.E5.88.97.E8.A1.A8).
	// <li>Length limit for a single region: 20 characters</li>
	// <li>Array length limit: 20</li>
	StorageRegions []*string `json:"StorageRegions,omitnil,omitempty" name:"StorageRegions"`

	// An array of storage classes. Valid values:
	// <li>STANDARD</li>
	// <li>STANDARD_IA</li>
	// <li>ARCHIVE</li>
	// <li>DEEP_ARCHIVE</li>
	StorageClasses []*string `json:"StorageClasses,omitnil,omitempty" name:"StorageClasses"`

	// The file formats.
	// <li>Array length limit: 10</li>
	MediaTypes []*string `json:"MediaTypes,omitnil,omitempty" name:"MediaTypes"`

	// The file statuses.
	// <li>`Normal`</li>
	// <li>`SystemForbidden` (blocked by VOD)</li>
	// <li>`Forbidden` (blocked by you)</li>
	Status []*string `json:"Status,omitnil,omitempty" name:"Status"`

	// The types of moderation result.
	// <li>`pass`</li>
	// <li>`review` (the content may be non-compliant and needs to be reviewed)</li>
	// <li>`block` (the content is non-compliant and should be blocked)</li>
	// <li>`notModerated` (the file hasn't been moderated yet)</li>
	ReviewResults []*string `json:"ReviewResults,omitnil,omitempty" name:"ReviewResults"`

	// The TRTC application IDs. Any file that matches one of the application IDs will be returned.
	// <li>Array length limit: 10</li>
	TrtcSdkAppIds []*uint64 `json:"TrtcSdkAppIds,omitnil,omitempty" name:"TrtcSdkAppIds"`

	// The TRTC room IDs. Any file that matches one of the room IDs will be returned.
	// <li>Element length limit: 64 characters.</li>
	// <li>Array length limit: 10.</li>
	TrtcRoomIds []*string `json:"TrtcRoomIds,omitnil,omitempty" name:"TrtcRoomIds"`

	// Specifies information entry that needs to be returned for all media files. Multiple entries can be specified simultaneously. N starts from 0. If this field is left empty, all information entries will be returned by default. Valid values:
	// <li>basicInfo (basic video information).</li>
	// <li>metaData (video metadata).</li>
	// <li>transcodeInfo (result information of video transcoding).</li>
	// <li>animatedGraphicsInfo (result information of animated image generating task).</li>
	// <li>imageSpriteInfo (image sprite information).</li>
	// <li>snapshotByTimeOffsetInfo (point-in-time screenshot information).</li>
	// <li>sampleSnapshotInfo (sampled screenshot information).</li>
	// <li>keyFrameDescInfo (timestamp information).</li>
	// <li>adaptiveDynamicStreamingInfo (information of adaptive bitrate streaming).</li>
	// <li>miniProgramReviewInfo (WeChat Mini Program audit information).</li>
	Filters []*string `json:"Filters,omitnil,omitempty" name:"Filters"`

	// Sorting order.
	// <li>Valid value of `Sort.Field`: CreateTime.</li>
	// <li>If `Text`, `Names`, or `Descriptions` is not empty, the `Sort.Field` field will not take effect, and the search results will be sorted by match rate.</li>
	Sort *SortBy `json:"Sort,omitnil,omitempty" name:"Sort"`

	// <div id="p_offset">Start offset of a paged return. Default value: 0. Entries from No. "Offset" to No. "Offset + Limit - 1" will be returned.
	// <li>Value range: "Offset + Limit" cannot be more than 5,000. (For more information, please see <a href="#maxResultsDesc">Limit on the Number of Results Returned by API</a>)</li></div>
	Offset *uint64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// <div id="p_limit">Number of entries returned by a paged query. Default value: 10. Entries from No. "Offset" to No. "Offset + Limit - 1" will be returned.
	// <li>Value range: "Offset + Limit" cannot be more than 5,000. (For more information, please see <a href="#maxResultsDesc">Limit on the Number of Results Returned by API</a>)</li></div>
	Limit *uint64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// (This is not recommended. `Names`, `NamePrefixes`, or `Descriptions` should be used instead)
	// Search text, which fuzzily matches the media file name or description. The more matching items and the higher the match rate, the higher-ranked the result. It can contain up to 64 characters.
	Text *string `json:"Text,omitnil,omitempty" name:"Text"`

	// (This is not recommended. `SourceTypes` should be used instead)
	// Media file source. For valid values, please see [SourceType](https://intl.cloud.tencent.com/document/product/266/31773?from_cn_redirect=1#MediaSourceData).
	SourceType *string `json:"SourceType,omitnil,omitempty" name:"SourceType"`

	// (Not recommended. Consider using `StreamIds` instead.)
	// The live stream code.
	StreamId *string `json:"StreamId,omitnil,omitempty" name:"StreamId"`

	// (This is not recommended. `CreateTime` should be used instead)
	// Start time in the creation time range.
	// <li>After or at the start time.</li>
	// <li>If `CreateTime.After` also exists, it will be used first.</li>
	// <li>In ISO 8601 format. For more information, please see [ISO Date Format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).</li>
	StartTime *string `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// (This is not recommended. `CreateTime` should be used instead)
	// End time in the creation time range.
	// <li>Before the end time.</li>
	// <li>If `CreateTime.Before` also exists, it will be used first.</li>
	// <li>In ISO 8601 format. For more information, please see [ISO Date Format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).</li>
	EndTime *string `json:"EndTime,omitnil,omitempty" name:"EndTime"`

	// This parameter is invalid now.
	Vids []*string `json:"Vids,omitnil,omitempty" name:"Vids"`

	// This parameter is invalid now.
	Vid *string `json:"Vid,omitnil,omitempty" name:"Vid"`
}

func (r *SearchMediaRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *SearchMediaRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SubAppId")
	delete(f, "FileIds")
	delete(f, "Names")
	delete(f, "NamePrefixes")
	delete(f, "Descriptions")
	delete(f, "ClassIds")
	delete(f, "Tags")
	delete(f, "Categories")
	delete(f, "SourceTypes")
	delete(f, "StreamIds")
	delete(f, "CreateTime")
	delete(f, "ExpireTime")
	delete(f, "StorageRegions")
	delete(f, "StorageClasses")
	delete(f, "MediaTypes")
	delete(f, "Status")
	delete(f, "ReviewResults")
	delete(f, "TrtcSdkAppIds")
	delete(f, "TrtcRoomIds")
	delete(f, "Filters")
	delete(f, "Sort")
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "Text")
	delete(f, "SourceType")
	delete(f, "StreamId")
	delete(f, "StartTime")
	delete(f, "EndTime")
	delete(f, "Vids")
	delete(f, "Vid")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "SearchMediaRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type SearchMediaResponseParams struct {
	// Number of eligible entries.
	// <li>Maximum value: 5000. If the number of eligible entries is greater than 5,000, this field will return 5,000 instead of the actual number.</li>
	TotalCount *uint64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Media file information list
	MediaInfoSet []*MediaInfo `json:"MediaInfoSet,omitnil,omitempty" name:"MediaInfoSet"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type SearchMediaResponse struct {
	*tchttp.BaseResponse
	Response *SearchMediaResponseParams `json:"Response"`
}

func (r *SearchMediaResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *SearchMediaResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type SegmentConfigureInfo struct {
	// Switch of video splitting recognition task. Valid values:
	// <li>ON: enables intelligent video splitting recognition task;</li>
	// <li>OFF: disables intelligent video splitting recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type SegmentConfigureInfoForUpdate struct {
	// Switch of video splitting recognition task. Valid values:
	// <li>ON: enables intelligent video splitting recognition task;</li>
	// <li>OFF: disables intelligent video splitting recognition task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

// Predefined struct for user
type SetDrmKeyProviderInfoRequestParams struct {
	// The DRM key information provided by SDMC.
	SDMCInfo *SDMCDrmKeyProviderInfo `json:"SDMCInfo,omitnil,omitempty" name:"SDMCInfo"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type SetDrmKeyProviderInfoRequest struct {
	*tchttp.BaseRequest
	
	// The DRM key information provided by SDMC.
	SDMCInfo *SDMCDrmKeyProviderInfo `json:"SDMCInfo,omitnil,omitempty" name:"SDMCInfo"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *SetDrmKeyProviderInfoRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *SetDrmKeyProviderInfoRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "SDMCInfo")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "SetDrmKeyProviderInfoRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type SetDrmKeyProviderInfoResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type SetDrmKeyProviderInfoResponse struct {
	*tchttp.BaseResponse
	Response *SetDrmKeyProviderInfoResponseParams `json:"Response"`
}

func (r *SetDrmKeyProviderInfoResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *SetDrmKeyProviderInfoResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type SetVodDomainCertificateRequestParams struct {
	// Domain name
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// The operation type of this API call, optional value:
	// <li>Set: Set the certificate required for the domain name HTTPS;</li>
	// <li>Clear: Clear the domain name HTTPS configuration, after clearing, the domain name cannot support </li>
	Operation *string `json:"Operation,omitnil,omitempty" name:"Operation"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// [Tencent Cloud SSL](https://intl.cloud.tencent.com/document/product/400/7572?from_cn_redirect=1) uploaded certificate ID. No need to fill in this field when clearing domain HTTPS configuration
	CertID *string `json:"CertID,omitnil,omitempty" name:"CertID"`
}

type SetVodDomainCertificateRequest struct {
	*tchttp.BaseRequest
	
	// Domain name
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// The operation type of this API call, optional value:
	// <li>Set: Set the certificate required for the domain name HTTPS;</li>
	// <li>Clear: Clear the domain name HTTPS configuration, after clearing, the domain name cannot support </li>
	Operation *string `json:"Operation,omitnil,omitempty" name:"Operation"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// [Tencent Cloud SSL](https://intl.cloud.tencent.com/document/product/400/7572?from_cn_redirect=1) uploaded certificate ID. No need to fill in this field when clearing domain HTTPS configuration
	CertID *string `json:"CertID,omitnil,omitempty" name:"CertID"`
}

func (r *SetVodDomainCertificateRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *SetVodDomainCertificateRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domain")
	delete(f, "Operation")
	delete(f, "SubAppId")
	delete(f, "CertID")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "SetVodDomainCertificateRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type SetVodDomainCertificateResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type SetVodDomainCertificateResponse struct {
	*tchttp.BaseResponse
	Response *SetVodDomainCertificateResponseParams `json:"Response"`
}

func (r *SetVodDomainCertificateResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *SetVodDomainCertificateResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type SharpEnhanceInfo struct {
	// Whether to enable detail enhancement. Valid values:
	// <li>`ON`</li>
	// <li>`OFF`</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The detail enhancement strength. Value range: 0.0 – 1.0. This parameter is valid only if `Switch` is `ON`.
	// Default value: `0.0`.
	Intensity *float64 `json:"Intensity,omitnil,omitempty" name:"Intensity"`
}

// Predefined struct for user
type SimpleHlsClipRequestParams struct {
	// URL of the HLS video in VOD that needs to be clipped.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Start offset time of clipping in seconds. Default value: 0, which means to clip from the beginning of the video. A negative number indicates how many seconds from the end of the video clipping will start at. For example, -10 means that clipping will start at the 10th second from the end.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End offset time of clipping in seconds. Default value: 0, which means to clip till the end of the video. A negative number indicates how many seconds from the end of the video clipping will end. For example, -10 means that clipping will end at the 10th second from the end.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Whether to store the video clip persistently. 0: no (default), 1: yes.
	IsPersistence *int64 `json:"IsPersistence,omitnil,omitempty" name:"IsPersistence"`

	// The expiration time of the video clip that is to be saved, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). `9999-12-31T23:59:59Z` is the default value, which means the video clip will never expire. After expiration, the media file and its related resources (such as transcoding results and image sprites) will be permanently deleted. This parameter is valid only if `IsPersistence` is 1.
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// The task flow to execute on the video clipped for persistent storage. For details, see [Upload from Server](https://intl.cloud.tencent.com/document/product/266/33912). This parameter is valid only if `IsPersistence` is 1.
	Procedure *string `json:"Procedure,omitnil,omitempty" name:"Procedure"`

	// The ID of the media file's category. You can use the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API to create a category and get the category ID.
	// <li>The default value is `0`, which means the "Other" category.</li>
	// This parameter is valid only if `IsPersistence` is `1`.
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The source context, which is used to pass through user request information. The [NewFileUpload](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) callback will return the value of this parameter. It can contain up to 250 characters and is valid only if `IsPersistence` is `1`.
	SourceContext *string `json:"SourceContext,omitnil,omitempty" name:"SourceContext"`

	// The session context, which is used to pass through user request information. If the `Procedure` parameter is specified, the [ProcedureStateChanged](https://intl.cloud.tencent.com/document/product/266/9636?from_cn_redirect=1) callback will return the value of this parameter. It can contain up to 1,000 characters and is valid only if `IsPersistence` is `1`.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`


	Precision *string `json:"Precision,omitnil,omitempty" name:"Precision"`


	OutputMediaType *string `json:"OutputMediaType,omitnil,omitempty" name:"OutputMediaType"`


	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type SimpleHlsClipRequest struct {
	*tchttp.BaseRequest
	
	// URL of the HLS video in VOD that needs to be clipped.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Start offset time of clipping in seconds. Default value: 0, which means to clip from the beginning of the video. A negative number indicates how many seconds from the end of the video clipping will start at. For example, -10 means that clipping will start at the 10th second from the end.
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End offset time of clipping in seconds. Default value: 0, which means to clip till the end of the video. A negative number indicates how many seconds from the end of the video clipping will end. For example, -10 means that clipping will end at the 10th second from the end.
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Whether to store the video clip persistently. 0: no (default), 1: yes.
	IsPersistence *int64 `json:"IsPersistence,omitnil,omitempty" name:"IsPersistence"`

	// The expiration time of the video clip that is to be saved, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). `9999-12-31T23:59:59Z` is the default value, which means the video clip will never expire. After expiration, the media file and its related resources (such as transcoding results and image sprites) will be permanently deleted. This parameter is valid only if `IsPersistence` is 1.
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`

	// The task flow to execute on the video clipped for persistent storage. For details, see [Upload from Server](https://intl.cloud.tencent.com/document/product/266/33912). This parameter is valid only if `IsPersistence` is 1.
	Procedure *string `json:"Procedure,omitnil,omitempty" name:"Procedure"`

	// The ID of the media file's category. You can use the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API to create a category and get the category ID.
	// <li>The default value is `0`, which means the "Other" category.</li>
	// This parameter is valid only if `IsPersistence` is `1`.
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// The source context, which is used to pass through user request information. The [NewFileUpload](https://intl.cloud.tencent.com/document/product/266/7830?from_cn_redirect=1) callback will return the value of this parameter. It can contain up to 250 characters and is valid only if `IsPersistence` is `1`.
	SourceContext *string `json:"SourceContext,omitnil,omitempty" name:"SourceContext"`

	// The session context, which is used to pass through user request information. If the `Procedure` parameter is specified, the [ProcedureStateChanged](https://intl.cloud.tencent.com/document/product/266/9636?from_cn_redirect=1) callback will return the value of this parameter. It can contain up to 1,000 characters and is valid only if `IsPersistence` is `1`.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	Precision *string `json:"Precision,omitnil,omitempty" name:"Precision"`

	OutputMediaType *string `json:"OutputMediaType,omitnil,omitempty" name:"OutputMediaType"`

	ExtInfo *string `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

func (r *SimpleHlsClipRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *SimpleHlsClipRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Url")
	delete(f, "SubAppId")
	delete(f, "StartTimeOffset")
	delete(f, "EndTimeOffset")
	delete(f, "IsPersistence")
	delete(f, "ExpireTime")
	delete(f, "Procedure")
	delete(f, "ClassId")
	delete(f, "SourceContext")
	delete(f, "SessionContext")
	delete(f, "Precision")
	delete(f, "OutputMediaType")
	delete(f, "ExtInfo")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "SimpleHlsClipRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type SimpleHlsClipResponseParams struct {
	// Address of clipped video.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// Metadata of clipped video. Currently, `Size`, `Rotate`, `VideoDuration`, and `AudioDuration` fields use default value with no actual data.
	MetaData *MediaMetaData `json:"MetaData,omitnil,omitempty" name:"MetaData"`

	// Unique ID of a video clip for persistent storage.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The ID of the task flow to execute on the video clipped for persistent storage.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type SimpleHlsClipResponse struct {
	*tchttp.BaseResponse
	Response *SimpleHlsClipResponseParams `json:"Response"`
}

func (r *SimpleHlsClipResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *SimpleHlsClipResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type SnapshotByTimeOffset2017 struct {
	// Error code
	// <li>0: success;</li>
	// <li>Other values: failure.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Specific time point of screenshot in milliseconds.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TimeOffset *uint64 `json:"TimeOffset,omitnil,omitempty" name:"TimeOffset"`

	// Address of output screenshot file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`
}

type SnapshotByTimeOffsetTask2017 struct {
	// Screencapturing task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Screenshot file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// screenshot specification. For more information, please see [Parameter Template for Time Point Screencapturing](https://intl.cloud.tencent.com/document/product/266/33480?from_cn_redirect=1#.E6.97.B6.E9.97.B4.E7.82.B9.E6.88.AA.E5.9B.BE.E6.A8.A1.E6.9D.BF).
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Result information of screencapturing.
	SnapshotInfoSet []*SnapshotByTimeOffset2017 `json:"SnapshotInfoSet,omitnil,omitempty" name:"SnapshotInfoSet"`
}

type SnapshotByTimeOffsetTaskInput struct {
	// Time point screencapturing template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// The list of screenshot time points. “s” and “%” formats are supported:
	// <li>When a time point string ends with “s”, its unit is second. For example, “3.5s” means the 3.5th second of the video.</li>
	// <li>When a time point string ends with “%”, it represents the percentage of the video’s duration. For example, “10%” means that the time point is at the 10% of the video’s entire duration.</li>
	ExtTimeOffsetSet []*string `json:"ExtTimeOffsetSet,omitnil,omitempty" name:"ExtTimeOffsetSet"`

	// List of time points for screencapturing in <font color=red>milliseconds</font>.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TimeOffsetSet []*float64 `json:"TimeOffsetSet,omitnil,omitempty" name:"TimeOffsetSet"`

	// List of up to 10 image or text watermarks.
	// Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkSet []*WatermarkInput `json:"WatermarkSet,omitnil,omitempty" name:"WatermarkSet"`
}

type SnapshotByTimeOffsetTemplate struct {
	// Unique ID of a specified time point screencapturing template.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Template type. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Name of a specified time point screencapturing template.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096].
	// <li>If both `Width` and `Height` are 0, the resolution will be the same as that of the source video;</li>
	// <li>If `Width` is 0, but `Height` is not 0, `Width` will be proportionally scaled;</li>
	// <li>If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;</li>
	// <li>If both `Width` and `Height` are not 0, the custom resolution will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// Image format.
	Format *string `json:"Format,omitnil,omitempty" name:"Format"`

	// Creation time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// The fill mode, or the way of processing a screenshot when the configured aspect ratio is different from that of the source video. Valid values:
	// <li>stretch: Stretch the image frame by frame to fill the entire screen. The video image may become "squashed" or "stretched" after transcoding.</li>
	// <li>black: Keep the image's original aspect ratio and fill the blank space with black bars.</li>
	// <li>white: Keep the image’s original aspect ratio and fill the blank space with white bars.</li>
	// <li>gauss: Keep the image’s original aspect ratio and apply Gaussian blur to the blank space.</li>
	// Default value: black.
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`
}

type SortBy struct {
	// Sort by field
	Field *string `json:"Field,omitnil,omitempty" name:"Field"`

	// Sorting order. Valid values: Asc (ascending), Desc (descending)
	Order *string `json:"Order,omitnil,omitempty" name:"Order"`
}

type SpecificationDataItem struct {
	// Task specification.
	Specification *string `json:"Specification,omitnil,omitempty" name:"Specification"`

	// Statistics.
	Data []*TaskStatDataItem `json:"Data,omitnil,omitempty" name:"Data"`
}

type SplitMediaOutputConfig struct {
	// Name of an output file. This parameter can contain up to 64 characters, and will be generated by the system if it is left empty.
	MediaName *string `json:"MediaName,omitnil,omitempty" name:"MediaName"`

	// Output file format. Valid values: mp4 (default), hls.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Category ID, which is used to categorize the media file for management. You can use [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API to create a category and get the category ID.
	// <li>Default value: 0, which means other categories.</li>
	ClassId *int64 `json:"ClassId,omitnil,omitempty" name:"ClassId"`

	// Expiration time of an output file. After passing the expiration time, the file will be deleted. There is no expiration time set for a file by default. The time is in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=).
	ExpireTime *string `json:"ExpireTime,omitnil,omitempty" name:"ExpireTime"`
}

// Predefined struct for user
type SplitMediaRequestParams struct {
	// The video ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Video splitting task information list, supporting up to 100 splitting messages at the same time.
	Segments []*SplitMediaTaskConfig `json:"Segments,omitnil,omitempty" name:"Segments"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Identifies the source context, which is used to transparently transmit user request information. This field value will be returned in the SplitMediaComplete callback and task flow status change callback, with a maximum length of 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The identification code used for task deduplication. If there is a request with the same identification code within three days, this request will return an error. The maximum length is 50 characters, without or with an empty string to indicate no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The priority of the task. The larger the value, the higher the priority. The value range is -10 to 10. If left blank, it means 0.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`
}

type SplitMediaRequest struct {
	*tchttp.BaseRequest
	
	// The video ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Video splitting task information list, supporting up to 100 splitting messages at the same time.
	Segments []*SplitMediaTaskConfig `json:"Segments,omitnil,omitempty" name:"Segments"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// Identifies the source context, which is used to transparently transmit user request information. This field value will be returned in the SplitMediaComplete callback and task flow status change callback, with a maximum length of 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// The identification code used for task deduplication. If there is a request with the same identification code within three days, this request will return an error. The maximum length is 50 characters, without or with an empty string to indicate no deduplication.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The priority of the task. The larger the value, the higher the priority. The value range is -10 to 10. If left blank, it means 0.
	TasksPriority *int64 `json:"TasksPriority,omitnil,omitempty" name:"TasksPriority"`
}

func (r *SplitMediaRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *SplitMediaRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "FileId")
	delete(f, "Segments")
	delete(f, "SubAppId")
	delete(f, "SessionContext")
	delete(f, "SessionId")
	delete(f, "TasksPriority")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "SplitMediaRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type SplitMediaResponseParams struct {
	// The task ID of video splitting. You can use this ID to query the status of the splitting task (task type is SplitMedia).
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type SplitMediaResponse struct {
	*tchttp.BaseResponse
	Response *SplitMediaResponseParams `json:"Response"`
}

func (r *SplitMediaResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *SplitMediaResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type SplitMediaTask struct {
	// Task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Task flow status. Valid values:
	// <li>PROCESSING: processing</li>
	// <li>FINISH: finished</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code. An empty string indicates the task is successful; other values indicate failure. For details, see [Video Processing Error Codes](https://intl.cloud.tencent.com/zh/document/product/266/39145).
	ErrCodeExt *string `json:"ErrCodeExt,omitnil,omitempty" name:"ErrCodeExt"`

	// Error code. 0 indicates the task is successful; other values indicate failure. You're not recommended to use this parameter, but to use the new parameter `ErrCodeExt`.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error information.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// List of video splitting task details.
	FileInfoSet []*SplitMediaTaskSegmentInfo `json:"FileInfoSet,omitnil,omitempty" name:"FileInfoSet"`

	// The source context which is used to pass through the user request information. The task flow status change callback will return the value of this field. It can contain up to 1000 characters.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`

	// ID used for deduplication. If there was a request with the same ID in the last seven days, the current request will return an error. The ID can contain up to 50 characters. If this parameter is left empty or set to an empty string, no deduplication will be performed.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// The progress of a video splitting task. Value range: 0-100.
	Progress *int64 `json:"Progress,omitnil,omitempty" name:"Progress"`
}

type SplitMediaTaskConfig struct {
	// The offset time of the start of video stripping, unit: seconds. 
	// <li>Leave it blank or fill in 0, which means that the transcoded video starts from the starting position of the original video;</li>
	// <li>When the value is greater than 0 (assumed to be n), it means that after transcoding The video starts from the n-th second position of the original video;</li>
	// <li>When the value is less than 0 (assumed to be -n), it means that the transcoded video starts from the position n seconds before the end of the original video. </li>
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// Offset time at the end of video stripping, unit: seconds. 
	// <li>Leave it blank or fill it in with 0, which means that the transcoded video will continue until the end of the original video;</li>
	// <li>When the value is greater than 0 (assumed to be n), it means that the transcoded video will continue until the end of the original video. The video continues until the nth second of the original video and terminates;</li>
	// <li>When the value is less than 0 (assumed to be -n), it means that the transcoded video continues until n seconds before the end of the original video. </li>
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// Task flow template name, if you want Fill in when executing the task flow on the generated new video.
	ProcedureName *string `json:"ProcedureName,omitnil,omitempty" name:"ProcedureName"`

	// The video is split into strips to output information.
	OutputConfig *SplitMediaOutputConfig `json:"OutputConfig,omitnil,omitempty" name:"OutputConfig"`
}

type SplitMediaTaskInput struct {
	// Video ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Offset of the video splitting start time in seconds.
	// <li>If this parameter is left empty or set to 0, the transcoded video will start at the same time as the original video.</li>
	// <li>If this parameter is set to a positive number (n for example), the transcoded video will start at the nth second of the original video.</li>
	// <li>If this parameter is set to a negative number (-n for example), the transcoded video will start at the nth second before the end of the original video.</li>
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// Offset of the video splitting end time in seconds.
	// <li>If this parameter is left empty or set to 0, the transcoded video will end at the same time as the original video.</li>
	// <li>If this parameter is set to a positive number (n for example), the transcoded video will end at the nth second of the original video.</li>
	// <li>If this parameter is set to a negative number (-n for example), the transcoded video will end at the nth second before the end of the original video.</li>
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`

	// [Task flow template](https://intl.cloud.tencent.com/document/product/266/33931?lang=en&pg=) name, which should be entered if you want to perform a task flow on the generated new video.
	ProcedureName *string `json:"ProcedureName,omitnil,omitempty" name:"ProcedureName"`

	// Output information of a video splitting task.
	OutputConfig *SplitMediaOutputConfig `json:"OutputConfig,omitnil,omitempty" name:"OutputConfig"`
}

type SplitMediaTaskSegmentInfo struct {
	// Input information of a video splitting task.
	Input *SplitMediaTaskInput `json:"Input,omitnil,omitempty" name:"Input"`

	// Output information of a video splitting task.
	// Note: this field may return `null`, indicating that no valid values can be obtained.
	Output *TaskOutputMediaInfo `json:"Output,omitnil,omitempty" name:"Output"`

	// The task ID for the task type `Procedure`. If a task flow (`ProcedureName`) is specified by [SplitMedia](https://intl.cloud.tencent.com/document/api/266/51098?from_cn_redirect=1), and the task flow includes one or more of `MediaProcessTask`, `AiAnalysisTask`, and `AiRecognitionTask`, the task specified by this parameter will be executed.
	ProcedureTaskId *string `json:"ProcedureTaskId,omitnil,omitempty" name:"ProcedureTaskId"`

	// The task ID for the task type `ReviewAudioVideo`. If a task flow (`ProcedureName`) is specified by [SplitMedia](https://intl.cloud.tencent.com/document/api/266/51098?from_cn_redirect=1), and the task flow includes `ReviewAudioVideoTask`, the task specified by this parameter will be executed.
	ReviewAudioVideoTaskId *string `json:"ReviewAudioVideoTaskId,omitnil,omitempty" name:"ReviewAudioVideoTaskId"`
}

// Predefined struct for user
type StartCDNDomainRequestParams struct {
	// Domain.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Domain name operation, value: <li>start: enable;</li> <li>stop: disable. </li>
	Operation *string `json:"Operation,omitnil,omitempty" name:"Operation"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

type StartCDNDomainRequest struct {
	*tchttp.BaseRequest
	
	// Domain.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Domain name operation, value: <li>start: enable;</li> <li>stop: disable. </li>
	Operation *string `json:"Operation,omitnil,omitempty" name:"Operation"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`
}

func (r *StartCDNDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *StartCDNDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domain")
	delete(f, "Operation")
	delete(f, "SubAppId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "StartCDNDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type StartCDNDomainResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type StartCDNDomainResponse struct {
	*tchttp.BaseResponse
	Response *StartCDNDomainResponseParams `json:"Response"`
}

func (r *StartCDNDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *StartCDNDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type StatDataItem struct {
	// Start time of data time range in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). For example, if the time granularity is 1-day, `2018-12-01T00:00:00+08:00` represents the time range between December 1, 2018 (inclusive) and December 2, 2018 (not inclusive).
	// <li>For data at hourly level, `2019-08-22T00:00:00+08:00` indicates the statistics between 00:00 and 01:00 AM on August 22, 2019.</li>
	// <li>For data at daily level, `2019-08-22T00:00:00+08:00` indicates statistics on August 22, 2019.</li>
	Time *string `json:"Time,omitnil,omitempty" name:"Time"`

	// Data size. 
	// <li>The data of the storage space, the unit is bytes. </li>
	// <li>Transcoding duration data, unit is seconds. </li>
	// <li>Traffic data, unit is bytes. </li>
	// <li>Bandwidth data, unit is bits per second. </li>
	// <li>Live broadcast clip data, the unit is seconds. </li>
	// <li>Carousel data, unit is seconds. </li>
	// <li>The number of sub-applications, the unit is one. </li>
	Value *int64 `json:"Value,omitnil,omitempty" name:"Value"`
}

type StickerTrackItem struct {
	// Source of media material for sticker segment, which can be:
	// <li>ID of VOD media files</li>
	// <li>Download URL of other media files</li>
	// Note: when a download URL of other media files is used as the material source and access control (such as hotlink protection) is enabled, the URL needs to carry access control parameters (such as hotlink protection signature).
	SourceMedia *string `json:"SourceMedia,omitnil,omitempty" name:"SourceMedia"`

	// Sticker duration in seconds.
	Duration *float64 `json:"Duration,omitnil,omitempty" name:"Duration"`

	// Start time of sticker on track in seconds.
	StartTime *float64 `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// Origin position. Valid values:
	// <li> Center: the origin of coordinates is the center position, such as the center of canvas.</li>
	// Default value: Center.
	CoordinateOrigin *string `json:"CoordinateOrigin,omitnil,omitempty" name:"CoordinateOrigin"`

	// The horizontal position of the origin of the sticker relative to the origin of the canvas. % and px formats are supported:
	// <li>If the string ends in %, the `XPos` of the sticker will be at the position of the specified percentage of the canvas width; for example, `10%` means that `XPos` is 10% of the canvas width.</li><li>If the string ends in px, the `XPos` of the sticker will be in px; for example, `100px` means that `XPos` is 100 px.</li>
	// Default value: 0 px.
	XPos *string `json:"XPos,omitnil,omitempty" name:"XPos"`

	// The vertical position of the origin of the sticker relative to the origin of the canvas. % and px formats are supported:
	// <li>If the string ends in %, the `YPos` of the sticker will be at the position of the specified percentage of the canvas height; for example, `10%` means that `YPos` is 10% of the canvas height.</li>
	// <li>If the string ends in px, the `YPos` of the sticker will be in px; for example, `100px` means that `YPos` is 100 px.</li>
	// Default value: 0 px.
	YPos *string `json:"YPos,omitnil,omitempty" name:"YPos"`

	// Sticker width. % and px formats are supported:
	// <li>If the string ends in %, the `Width` of the sticker will be the specified percentage of the canvas width; for example, `10%` means that `Width` is 10% of the canvas width.</li>
	// <li>If the string ends in px, the `Width` of the sticker will be in px; for example, `100px` means that `Width` is 100 px.</li>
	// <li>If both `Width` and `Height` are empty, then they will be the `Width` and `Height` of the sticker material, respectively.</li>
	// <li>If `Width` is empty (0), but `Height` is not empty, `Width` will be proportionally scaled.</li>
	// <li>If `Width` is not empty, but `Height` is empty, `Height` will be proportionally scaled.</li>
	Width *string `json:"Width,omitnil,omitempty" name:"Width"`

	// Sticker height. % and px formats are supported:
	// <li>If the string ends in %, the `Height` of the sticker will be the specified percentage of the canvas height; for example, `10%` means that `Height` is 10% of the canvas height.</li>
	// <li>If the string ends in px, the `Height` of the sticker will be in px; for example, `100px` means that `Height` is 100 px.</li>
	// <li>If both `Width` and `Height` are empty, then they will be the `Width` and `Height` of the sticker material, respectively.</li>
	// <li>If `Width` is empty, but `Height` is not empty, `Width` will be proportionally scaled.</li>
	// <li>If `Width` is not empty, but `Height` is empty, `Height` will be proportionally scaled.</li>
	Height *string `json:"Height,omitnil,omitempty" name:"Height"`

	// Operation on sticker such as image rotation.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ImageOperations []*ImageTransform `json:"ImageOperations,omitnil,omitempty" name:"ImageOperations"`
}

type StorageRegionInfo struct {
	// The storage region.
	Region *string `json:"Region,omitnil,omitempty" name:"Region"`

	// The description of the storage region.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	// Whether storage is enabled in the region. Valid values:
	// <li>opened: Enabled</li>
	// <li>unopened: Not enabled</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Whether the region is the default storage region. Valid values: true, false.
	IsDefault *bool `json:"IsDefault,omitnil,omitempty" name:"IsDefault"`

	// Whether the storage region is inside or outside the Chinese mainland. Valid values:
	// <li>Chinese Mainland</li>
	// <li>Outside Chinese Mainland</li>
	Area *string `json:"Area,omitnil,omitempty" name:"Area"`
}

type StorageStatData struct {
	// VOD storage billing region. Valid values:
	// <li>Chinese Mainland</li>
	// <li>Outside Chinese Mainland</li>
	Area *string `json:"Area,omitnil,omitempty" name:"Area"`

	// Current total storage capacity in bytes.
	TotalStorage *uint64 `json:"TotalStorage,omitnil,omitempty" name:"TotalStorage"`

	// Current STANDARD_IA storage capacity in bytes.
	InfrequentStorage *uint64 `json:"InfrequentStorage,omitnil,omitempty" name:"InfrequentStorage"`

	// Current STANDARD storage capacity in bytes.
	StandardStorage *uint64 `json:"StandardStorage,omitnil,omitempty" name:"StandardStorage"`

	// Current ARCHIVE storage usage in bytes
	ArchiveStorage *uint64 `json:"ArchiveStorage,omitnil,omitempty" name:"ArchiveStorage"`

	// Current DEEP ARCHIVE storage usage in bytes
	DeepArchiveStorage *uint64 `json:"DeepArchiveStorage,omitnil,omitempty" name:"DeepArchiveStorage"`
}

type SubAppIdInfo struct {
	// Subapplication ID.
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// The subapplication name.
	SubAppIdName *string `json:"SubAppIdName,omitnil,omitempty" name:"SubAppIdName"`

	// Subapplication overview.
	Description *string `json:"Description,omitnil,omitempty" name:"Description"`

	// Subapplication creation time of task in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Subapplication status. Valid values:
	// <li>On: enabled</li>
	// <li>Off: disabled</li>
	// <li>Destroying: terminating</li>
	// <li>Destroyed: terminated</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// The subapplication name. This parameter is not recommended. Please use `SubAppIdName` instead.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`
}

type SubtitleFormatsOperation struct {
	// The modification type. Valid values:
	// <li>add: Add the formats specified by `Formats`.</li>
	// <li>delete: Delete the formats specified by `Formats`.<l/i>
	// <li>reset: Reset the format list to formats specified by `Formats`.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The subtitle format list. Valid values:
	// <li>vtt</li>
	// <li>srt</li>
	Formats []*string `json:"Formats,omitnil,omitempty" name:"Formats"`
}

type SuperResolutionInfo struct {
	// Whether to enable super resolution. Valid values:
	// <li>ON</li>
	// <li>`OFF`</li>
	// If super resolution is enabled, the output resolution will double.
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The super resolution type. This parameter is valid only if `Switch` is `ON`. Valid values:
	// <li>`lq`: For low-resolution videos with obvious noise</li>
	// <li>`hq`: For high-resolution videos</li>
	// Default value: `lq`.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// The ratio of the target resolution to the original resolution. Valid values: `2`.
	// Default value: `2`.
	Size *int64 `json:"Size,omitnil,omitempty" name:"Size"`
}

type SvgWatermarkInput struct {
	// Watermark width, which supports six formats of px, %, W%, H%, S%, and L%:
	// <li>If the string ends in px, the `Width` of the watermark will be in px; for example, `100px` means that `Width` is 100 px; if `0px` is entered
	//  and `Height` is not `0px`, the watermark width will be proportionally scaled based on the source SVG image; if `0px` is entered for both `Width` and `Height`, the watermark width will be the width of the source SVG image;</li>
	// <li>If the string ends in `W%`, the `Width` of the watermark will be the specified percentage of the video width; for example, `10W%` means that `Width` is 10% of the video width;</li>
	// <li>If the string ends in `H%`, the `Width` of the watermark will be the specified percentage of the video height; for example, `10H%` means that `Width` is 10% of the video height;</li>
	// <li>If the string ends in `S%`, the `Width` of the watermark will be the specified percentage of the short side of the video; for example, `10S%` means that `Width` is 10% of the short side of the video;</li>
	// <li>If the string ends in `L%`, the `Width` of the watermark will be the specified percentage of the long side of the video; for example, `10L%` means that `Width` is 10% of the long side of the video;</li>
	// <li>If the string ends in %, the meaning is the same as `W%`.</li>
	// Default value: 10W%.
	Width *string `json:"Width,omitnil,omitempty" name:"Width"`

	// Watermark height, which supports six formats of px, %, W%, H%, S%, and L%:
	// <li>If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px; if `0px` is entered
	//  and `Width` is not `0px`, the watermark height will be proportionally scaled based on the source SVG image; if `0px` is entered for both `Width` and `Height`, the watermark height will be the height of the source SVG image;</li>
	// <li>If the string ends in `W%`, the `Height` of the watermark will be the specified percentage of the video width; for example, `10W%` means that `Height` is 10% of the video width;</li>
	// <li>If the string ends in `H%`, the `Height` of the watermark will be the specified percentage of the video height; for example, `10H%` means that `Height` is 10% of the video height;</li>
	// <li>If the string ends in `S%`, the `Height` of the watermark will be the specified percentage of the short side of the video; for example, `10S%` means that `Height` is 10% of the short side of the video;</li>
	// <li>If the string ends in `L%`, the `Height` of the watermark will be the specified percentage of the long side of the video; for example, `10L%` means that `Height` is 10% of the long side of the video;</li>
	// <li>If the string ends in %, the meaning is the same as `H%`.</li>
	// Default value: 0 px.
	Height *string `json:"Height,omitnil,omitempty" name:"Height"`
}

type SvgWatermarkInputForUpdate struct {
	// Watermark width, which supports six formats of px, %, W%, H%, S%, and L%:
	// <li>If the string ends in px, the `Width` of the watermark will be in px; for example, `100px` means that `Width` is 100 px; if `0px` is entered
	//  and `Height` is not `0px`, the watermark width will be proportionally scaled based on the source SVG image; if `0px` is entered for both `Width` and `Height`, the watermark width will be the width of the source SVG image;</li>
	// <li>If the string ends in `W%`, the `Width` of the watermark will be the specified percentage of the video width; for example, `10W%` means that `Width` is 10% of the video width;</li>
	// <li>If the string ends in `H%`, the `Width` of the watermark will be the specified percentage of the video height; for example, `10H%` means that `Width` is 10% of the video height;</li>
	// <li>If the string ends in `S%`, the `Width` of the watermark will be the specified percentage of the short side of the video; for example, `10S%` means that `Width` is 10% of the short side of the video;</li>
	// <li>If the string ends in `L%`, the `Width` of the watermark will be the specified percentage of the long side of the video; for example, `10L%` means that `Width` is 10% of the long side of the video;</li>
	// <li>If the string ends in %, the meaning is the same as `W%`.</li>
	// Default value: 10W%.
	Width *string `json:"Width,omitnil,omitempty" name:"Width"`

	// Watermark height, which supports six formats of px, %, W%, H%, S%, and L%:
	// <li>If the string ends in px, the `Height` of the watermark will be in px; for example, `100px` means that `Height` is 100 px; if `0px` is entered
	//  and `Width` is not `0px`, the watermark height will be proportionally scaled based on the source SVG image; if `0px` is entered for both `Width` and `Height`, the watermark height will be the height of the source SVG image;</li>
	// <li>If the string ends in `W%`, the `Height` of the watermark will be the specified percentage of the video width; for example, `10W%` means that `Height` is 10% of the video width;</li>
	// <li>If the string ends in `H%`, the `Height` of the watermark will be the specified percentage of the video height; for example, `10H%` means that `Height` is 10% of the video height;</li>
	// <li>If the string ends in `S%`, the `Height` of the watermark will be the specified percentage of the short side of the video; for example, `10S%` means that `Height` is 10% of the short side of the video;</li>
	// <li>If the string ends in `L%`, the `Height` of the watermark will be the specified percentage of the long side of the video; for example, `10L%` means that `Height` is 10% of the long side of the video;</li>
	// <li>If the string ends in %, the meaning is the same as `H%`.
	// Default value: 0 px.
	Height *string `json:"Height,omitnil,omitempty" name:"Height"`

	// Watermark period configuration is used to configure the watermark to be displayed and hidden periodically. 
	// The main usage scenario is: in order to prevent video from being blocked, watermarks are set in multiple places on the video. These watermarks are periodically displayed and hidden in a fixed order. 
	// For example, set four watermarks A, B, C, and D to be located in the upper left corner, upper right corner, lower right corner, and lower left corner of the video respectively. When the video starts, { A displays for 5 seconds -> B displays for 5 seconds -> C Display for 5 seconds -> D Display for 5 seconds} -> A Display for 5 seconds -> B Display for 5 seconds -> ..., only one watermark is displayed at any time. 
	// The curly brackets {} represent a large cycle consisting of 4 watermarks A, B, C, and D. It can be seen that each large cycle lasts 20 seconds. 
	// It can be seen that A, B, C, and D are periodically displayed for 5 seconds and hidden for 15 seconds, and the four have a fixed display order. 
	// This configuration item is used to describe the periodic configuration of a single watermark.
	// Note: This field may return null, indicating that no valid value can be obtained.
	//
	// Deprecated: CycleConfig is deprecated.
	CycleConfig *WatermarkCycleConfigForUpdate `json:"CycleConfig,omitnil,omitempty" name:"CycleConfig"`
}

type TEHDConfig struct {
	// TESHD transcoding type. Valid values: <li>TEHD-100</li> <li>OFF (default)</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Maximum bitrate, which is valid when `Type` is `TESHD`.
	// If this parameter is left blank or 0 is entered, there will be no upper limit for bitrate.
	MaxVideoBitrate *uint64 `json:"MaxVideoBitrate,omitnil,omitempty" name:"MaxVideoBitrate"`
}

type TEHDConfigForUpdate struct {
	// TESHD transcoding type. Valid values: <li>TEHD-100</li> <li>OFF (default)</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Maximum bitrate. If this parameter is left blank, no modification will be made.
	MaxVideoBitrate *uint64 `json:"MaxVideoBitrate,omitnil,omitempty" name:"MaxVideoBitrate"`
}

type TagConfigureInfo struct {
	// Switch of intelligent tagging task. Valid values:
	// <li>ON: enables intelligent tagging task;</li>
	// <li>OFF: disables intelligent tagging task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type TagConfigureInfoForUpdate struct {
	// Switch of intelligent tagging task. Valid values:
	// <li>ON: enables intelligent tagging task;</li>
	// <li>OFF: disables intelligent tagging task.</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type TaskOutputMediaInfo struct {
	// Media file ID.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`


	MediaBasicInfo *MediaBasicInfo `json:"MediaBasicInfo,omitnil,omitempty" name:"MediaBasicInfo"`
}

type TaskSimpleInfo struct {
	// Task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Task status. Valid values: `WAITING` (waiting), `PROCESSING` (processing), `FINISH` (completed)
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Video ID
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// The task type. Valid values:
	// <li>`Procedure`: Video processing</li>
	// <li>`EditMedia`: Video editing</li>
	// <li>`ReduceMediaBitrate`: Bitrate reduction</li>
	// <li>`WechatDistribute`: Publishing to Weixin</li>
	// <li> `ReviewAudioVideo`: Moderation</li>
	// Task types for v2017:
	// <li>`Transcode`: Transcoding</li>
	// <li>`SnapshotByTimeOffset`: Screencapturing</li>
	// <li>`Concat`: Video splicing</li>
	// <li>`Clip`: Video clipping</li>
	// <li>`ImageSprites`: Image sprite generating</li>
	TaskType *string `json:"TaskType,omitnil,omitempty" name:"TaskType"`

	// Creation time of task in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Start time of task execution in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). If the task has not been started yet, this field will be empty.
	BeginProcessTime *string `json:"BeginProcessTime,omitnil,omitempty" name:"BeginProcessTime"`

	// End time of task in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I). If the task has not been completed yet, this field will be empty.
	FinishTime *string `json:"FinishTime,omitnil,omitempty" name:"FinishTime"`

	// ID used for deduplication if there was a request with the same ID in the last seven days.
	SessionId *string `json:"SessionId,omitnil,omitempty" name:"SessionId"`

	// Source context, which is used to pass through the user request information.
	SessionContext *string `json:"SessionContext,omitnil,omitempty" name:"SessionContext"`
}

type TaskStatData struct {
	// Task Type.
	// <li> Transcoding: Normal transcoding</li>
	// <li> Transcoding-TESHD: Extremely fast high-definition transcoding</li>
	// <li> Editing: Video editing</li>
	// < li> Editing-TESHD: Extremely fast high-definition video editing</li>
	// <li> AdaptiveBitrateStreaming: Adaptive bitrate streaming</li>
	// <li> ContentAudit: Content audit</li>
	// <li> ContentRecognition: Content Recognize</li>
	// <li> RemoveWatermark: Remove watermark</li>
	// <li> ExtractTraceWatermark: Extract watermark</li>
	// <li> AddTraceWatermark: Add watermark</li>
	// <li> RebuildMedia : Audio and video quality reborn</li>
	// <li> QualityInspect: Media quality inspection</li>
	// <li>Transcode: transcoding, including normal transcoding, ultra-fast high-definition and video editing (not recommended)</li>
	// <li>Transcode: li>
	TaskType *string `json:"TaskType,omitnil,omitempty" name:"TaskType"`

	// Task statistics overview (usage unit: second).
	Summary []*TaskStatDataItem `json:"Summary,omitnil,omitempty" name:"Summary"`

	// The usage statistics for different task types.
	// Transcoding:
	// <li>`Remuxing`</li>
	// <li>`Audio` (audio transcoding)</li>
	// <li>`Standard.H264.SD`</li>
	// <li>`Standard.H264.HD`</li>
	// <li>`Standard.H264.FHD`</li>
	// <li>`Standard.H264.2K`</li>
	// <li>`Standard.H264.4K`</li>
	// <li>`Standard.H265.SD`</li>
	// <li>`Standard.H265.HD`</li>
	// <li>`Standard.H265.FHD`</li>
	// <li>`Standard.H265.2K`</li>
	// <li>`Standard.H265.4K`</li>
	// <li>`TESHD-10.H264.SD` (H.264 SD Top Speed Codec transcoding)</li>
	// <li>`TESHD-10.H264.HD` (H.264 HD Top Speed Codec transcoding)</li>
	// <li>`TESHD-10.H264.FHD` (H.264 FHD Top Speed Codec transcoding)</li>
	// <li>`TESHD-10.H264.2K` (H.264 2K Top Speed Codec transcoding)</li>
	// <li>`TESHD-10.H264.4K` (H.264 4K Top Speed Codec transcoding)</li>
	// <li>`TESHD-10.H265.SD` (H.265 SD Top Speed Codec transcoding)</li>
	// <li>`TESHD-10.H265.HD` (H.265 HD Top Speed Codec transcoding)</li>
	// <li>`TESHD-10.H265.FHD` (H.265 FHD Top Speed Codec transcoding)</li>
	// <li>`TESHD-10.H265.2K` (H.265 2K Top Speed Codec transcoding)</li>
	// <li>`TESHD-10.H265.4K` (H.265 4K Top Speed Codec transcoding)</li>
	// <li>`Edit.Audio`</li>
	// <li>`Edit.H264.SD` (H.264 SD video editing)</li>
	// <li>`Edit.H264.HD` (H.264 HD video editing)</li>
	// <li>`Edit.H264.FHD` (H.264 FHD video editing)</li>
	// <li>`Edit.H264.2K` (H.264 2K video editing)</li>
	// <li>`Edit.H264.4K` (H.264 4K video editing)</li>
	// <li>`Edit.H265.SD` (H.265 SD video editing)</li>
	// <li>`Edit.H265.HD` (H.265 HD video editing)</li>
	// <li>`Edit.H265.FHD` (H.265 FHD video editing)</li>
	// <li>`Edit.H265.2K` (H.265 2K video editing)</li>
	// <li>`Edit.H265.4K` (H.265 4K video editing)</li>
	// <li>`Edit.TESHD-10.H264.SD` (H.264 SD Top Speed Codec video editing)</li>
	// <li>`Edit.TESHD-10.H264.HD` (H.264 HD Top Speed Codec video editing)</li>
	// <li>`Edit.TESHD-10.H264.FHD` (H.264 FHD Top Speed Codec video editing)</li>
	// <li>`Edit.TESHD-10.H264.2K` (H.264 2K Top Speed Codec video editing)</li>
	// <li>`Edit.TESHD-10.H264.4K` (H.264 4K Top Speed Codec video editing)</li>
	// <li>`Edit.TESHD-10.H265.SD` (H.265 SD Top Speed Codec video editing)</li>
	// <li>`Edit.TESHD-10.H265.HD` (H.265 HD Top Speed Codec video editing)</li>
	// <li>`Edit.TESHD-10.H265.FHD` (H.265 FHD Top Speed Codec video editing)</li>
	// <li>`Edit.TESHD-10.H265.2K` (H.265 2K Top Speed Codec video editing)</li>
	// <li>`Edit.TESHD-10.H265.4K` (H.265 4K Top Speed Codec video editing)</li>
	// The watermark removal/remaster specifications. Valid values:
	// <li>`480P` (short side ≤ 480 px)</li>
	// <li>`720P` (short side ≤ 720 px)</li>
	// <li>`1080P` (short side ≤ 1080 px)</li>
	// <li>`2K` (short side ≤ 1440 px)</li>
	// <li>`4K` (short side ≤ 2160 px)</li>
	// <li>`8K` (short side ≤ 4320 px)</li>
	// <li>`audio`</li>
	Details []*SpecificationDataItem `json:"Details,omitnil,omitempty" name:"Details"`
}

type TaskStatDataItem struct {
	// Start time of data time range in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#iso-.E6.97.A5.E6.9C.9F.E6.A0.BC.E5.BC.8F). For example, if the time granularity is 1-day, `2018-12-01T00:00:00+08:00` represents the time range between December 1, 2018 (inclusive) and December 2, 2018 (not inclusive).
	Time *string `json:"Time,omitnil,omitempty" name:"Time"`

	// Number of tasks.
	Count *int64 `json:"Count,omitnil,omitempty" name:"Count"`

	// Task usage.
	Usage *int64 `json:"Usage,omitnil,omitempty" name:"Usage"`
}

type TempCertificate struct {
	// Temporary security certificate ID.
	SecretId *string `json:"SecretId,omitnil,omitempty" name:"SecretId"`

	// Temporary security certificate `Key`.
	SecretKey *string `json:"SecretKey,omitnil,omitempty" name:"SecretKey"`

	// Token value.
	Token *string `json:"Token,omitnil,omitempty" name:"Token"`

	// Certificate expiration time. A Unix timestamp will be returned which is accurate down to the second.
	ExpiredTime *uint64 `json:"ExpiredTime,omitnil,omitempty" name:"ExpiredTime"`
}

type TerrorismConfigureInfo struct {
	// Parameters for recognition of terrorism content in images
	// Note: This field may return `null`, indicating that no valid value can be found.
	ImgReviewInfo *TerrorismImgReviewTemplateInfo `json:"ImgReviewInfo,omitnil,omitempty" name:"ImgReviewInfo"`

	// Parameters for OCR-based recognition of terrorism content
	// Note: This field may return `null`, indicating that no valid value can be found.
	OcrReviewInfo *TerrorismOcrReviewTemplateInfo `json:"OcrReviewInfo,omitnil,omitempty" name:"OcrReviewInfo"`
}

type TerrorismConfigureInfoForUpdate struct {
	// Parameters for recognition of terrorism content in images
	ImgReviewInfo *TerrorismImgReviewTemplateInfoForUpdate `json:"ImgReviewInfo,omitnil,omitempty" name:"ImgReviewInfo"`

	// Parameters for OCR-based recognition of terrorism content
	OcrReviewInfo *TerrorismOcrReviewTemplateInfoForUpdate `json:"OcrReviewInfo,omitnil,omitempty" name:"OcrReviewInfo"`
}

type TerrorismImageResult struct {
	// The confidence score for the moderation result. Value range: 0-100.
	Confidence *float64 `json:"Confidence,omitnil,omitempty" name:"Confidence"`

	// The suggestion for handling the detected terrorist content. Valid values:
	// <li>pass/li>
	// <li>review</li>
	// <li>block</li>
	Suggestion *string `json:"Suggestion,omitnil,omitempty" name:"Suggestion"`

	// The label for the detected terrorist content. Valid values:
	// <li>`guns`</li>
	// <li>`crowd`</li>
	// <li>`police`</li>
	// <li>`bloody`</li>
	// <li>`banners`</li>
	// <li>`explosion`</li>
	// <li>`scenario` (terrorist scenes) </li>
	Label *string `json:"Label,omitnil,omitempty" name:"Label"`
}

type TerrorismImgReviewTemplateInfo struct {
	// Whether to enable recognition of terrorism content in images. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Filter labels for recognition of terrorism content in images. Results containing the specified labels are returned. If no labels are specified, all results are returned. Valid values:
	// <li>`guns`: weapons and guns</li>
	// <li>`crowd`: crowd</li>
	// <li>`bloody`: bloody scenes</li>
	// <li>`police`: police force</li>
	// <li>`banners`: terrorism flags</li>
	// <li>`militant`: militants</li>
	// <li>`explosion`: explosions and fires</li>
	// <li>`terrorists`: terrorists</li>
	// <li>`scenario`: terrorism images</li>
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `90` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `80` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type TerrorismImgReviewTemplateInfoForUpdate struct {
	// Whether to enable recognition of terrorism content in images. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Filter labels for recognition of terrorism content in images. Results containing the specified labels are returned. If no labels are specified, all results are returned. Valid values:
	// <li>`guns`: weapons and guns</li>
	// <li>`crowd`: crowd</li>
	// <li>`bloody`: bloody scenes</li>
	// <li>`police`: police force</li>
	// <li>`banners`: terrorism flags</li>
	// <li>`militant`: militants</li>
	// <li>`explosion`: explosions and fires</li>
	// <li>`terrorists`: terrorists</li>
	// <li>`scenario`: terrorism images</li>
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type TerrorismOcrReviewTemplateInfo struct {
	// Whether to enable OCR-based recognition of terrorism content. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `100` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `75` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type TerrorismOcrReviewTemplateInfoForUpdate struct {
	// Whether to enable OCR-based recognition of terrorism content. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `100` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `75` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type TextWatermarkTemplateInput struct {
	// Font type. Currently, two types are supported:
	// <li>simkai.ttf: both Chinese and English are supported;</li>
	// <li>arial.ttf: only English is supported.</li>
	FontType *string `json:"FontType,omitnil,omitempty" name:"FontType"`

	// Font size in Npx format where N is a numeric value.
	FontSize *string `json:"FontSize,omitnil,omitempty" name:"FontSize"`

	// Font color in 0xRRGGBB format. Default value: 0xFFFFFF (white).
	FontColor *string `json:"FontColor,omitnil,omitempty" name:"FontColor"`

	// Text transparency. Value range: (0, 1]
	// <li>0: completely transparent</li>
	// <li>1: completely opaque</li>
	// Default value: 1.
	FontAlpha *float64 `json:"FontAlpha,omitnil,omitempty" name:"FontAlpha"`
}

type TextWatermarkTemplateInputForUpdate struct {
	// Font type. Currently, two types are supported:
	// <li>simkai.ttf: both Chinese and English are supported;</li>
	// <li>arial.ttf: only English is supported.</li>
	FontType *string `json:"FontType,omitnil,omitempty" name:"FontType"`

	// Font size in Npx format where N is a numeric value.
	FontSize *string `json:"FontSize,omitnil,omitempty" name:"FontSize"`

	// Font color in 0xRRGGBB format. Default value: 0xFFFFFF (white).
	FontColor *string `json:"FontColor,omitnil,omitempty" name:"FontColor"`

	// Text transparency. Value range: (0, 1]
	// <li>0: completely transparent</li>
	// <li>1: completely opaque</li>
	FontAlpha *float64 `json:"FontAlpha,omitnil,omitempty" name:"FontAlpha"`
}

type TimeRange struct {
	// <li>After or at this time (start time).</li>
	// <li>In ISO 8601 format. For more information, please see [ISO Date Format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).</li>
	After *string `json:"After,omitnil,omitempty" name:"After"`

	// <li>Earlier than this time (end time).</li>
	// <li>In ISO 8601 format. For more information, please see [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).</li>
	Before *string `json:"Before,omitnil,omitempty" name:"Before"`
}

type TraceWatermarkInput struct {
	// Whether to use digital watermarks. This parameter is required. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// This parameter has been deprecated.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`
}

type TranscodePlayInfo2017 struct {
	// Playback address.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// Transcoding specification ID. For more information, please see [Transcoding Parameter Template](https://intl.cloud.tencent.com/document/product/266/33478?from_cn_redirect=1#.E8.BD.AC.E7.A0.81.E6.A8.A1.E6.9D.BF).
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Sum of the average bitrate of a video stream and that of an audio stream in bps.
	Bitrate *int64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// Maximum value of the height of a video stream in px.
	Height *int64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Maximum value of the width of a video stream in px.
	Width *int64 `json:"Width,omitnil,omitempty" name:"Width"`
}

type TranscodeTask2017 struct {
	// Transcoding task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Error code
	// <li>0: success;</li>
	// <li>Other values: failure.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// ID of transcoded file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Name of transcoded file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileName *string `json:"FileName,omitnil,omitempty" name:"FileName"`

	// Video duration in seconds.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Duration *uint64 `json:"Duration,omitnil,omitempty" name:"Duration"`

	// Cover address.
	// Note: this field may return null, indicating that no valid values can be obtained.
	CoverUrl *string `json:"CoverUrl,omitnil,omitempty" name:"CoverUrl"`

	// Playback information generated after video transcoding.
	// Note: this field may return null, indicating that no valid values can be obtained.
	PlayInfoSet []*TranscodePlayInfo2017 `json:"PlayInfoSet,omitnil,omitempty" name:"PlayInfoSet"`
}

type TranscodeTaskInput struct {
	// Video transcoding template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// List of up to 10 image or text watermarks.
	// Note: this field may return null, indicating that no valid values can be obtained.
	WatermarkSet []*WatermarkInput `json:"WatermarkSet,omitnil,omitempty" name:"WatermarkSet"`

	// Digital watermark.
	TraceWatermark *TraceWatermarkInput `json:"TraceWatermark,omitnil,omitempty" name:"TraceWatermark"`

	// Copyright watermark.
	CopyRightWatermark *CopyRightWatermarkInput `json:"CopyRightWatermark,omitnil,omitempty" name:"CopyRightWatermark"`

	// List of blurs. Up to 10 ones can be supported.
	MosaicSet []*MosaicInput `json:"MosaicSet,omitnil,omitempty" name:"MosaicSet"`

	// List of video opening/closing credits configuration template IDs. You can enter up to 10 IDs.
	HeadTailSet []*HeadTailTaskInput `json:"HeadTailSet,omitnil,omitempty" name:"HeadTailSet"`

	// Start time offset of a transcoded video, in seconds.
	// <li>If this parameter is left empty or set to 0, the transcoded video will start at the same time as the original video.</li>
	// <li>If this parameter is set to a positive number (n for example), the transcoded video will start at the nth second of the original video.</li>
	// <li>If this parameter is set to a negative number (-n for example), the transcoded video will start at the nth second before the end of the original video.</li>
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of a transcoded video, in seconds.
	// <li>If this parameter is left empty or set to 0, the transcoded video will end at the same time as the original video.</li>
	// <li>If this parameter is set to a positive number (n for example), the transcoded video will end at the nth second of the original video.</li>
	// <li>If this parameter is set to a negative number (-n for example), the transcoded video will end at the nth second before the end of the original video.</li>
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`
}

type TranscodeTemplate struct {
	// Unique ID of transcoding template.
	Definition *string `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Container. Valid values: mp4, flv, hls, mp3, flac, ogg.
	Container *string `json:"Container,omitnil,omitempty" name:"Container"`

	// Transcoding template name.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Template type. Valid values:
	// <li>Preset: preset template;</li>
	// <li>Custom: custom template.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Whether to remove video data. Valid values:
	// <li>0: retain;</li>
	// <li>1: remove.</li>
	RemoveVideo *int64 `json:"RemoveVideo,omitnil,omitempty" name:"RemoveVideo"`

	// Whether to remove audio data. Valid values:
	// <li>0: retain;</li>
	// <li>1: remove.</li>
	RemoveAudio *int64 `json:"RemoveAudio,omitnil,omitempty" name:"RemoveAudio"`

	// Video stream configuration parameter. This field is valid only when `RemoveVideo` is 0.
	// Note: this field may return null, indicating that no valid values can be obtained.
	VideoTemplate *VideoTemplateInfo `json:"VideoTemplate,omitnil,omitempty" name:"VideoTemplate"`

	// Audio stream configuration parameter. This field is valid only when `RemoveAudio` is 0.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AudioTemplate *AudioTemplateInfo `json:"AudioTemplate,omitnil,omitempty" name:"AudioTemplate"`

	// TESHD transcoding parameter.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TEHDConfig *TEHDConfig `json:"TEHDConfig,omitnil,omitempty" name:"TEHDConfig"`

	// Container filter. Valid values:
	// <li>Video: video container that can contain both video stream and audio stream;</li>
	// <li>PureAudio: audio container that can contain only audio stream.</li>
	ContainerType *string `json:"ContainerType,omitnil,omitempty" name:"ContainerType"`

	// Creation time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// The segment type. This parameter is valid only if `Container` is `hls`
	SegmentType *string `json:"SegmentType,omitnil,omitempty" name:"SegmentType"`
}

type TransitionOperation struct {
	// Transition type, the values u200bu200bare:
	// <ul>
	// <li>Image transition operation, used for transition processing between two video clip images:
	// <ul>
	// <li>ImageFadeInFadeOut: image fade in and fade out. </li>
	// <li>BowTieHorizontal: horizontal bow tie. </li>
	// <li>BowTieVertical: vertical bow tie. </li>
	// <li>ButterflyWaveScrawler: Shake. </li>
	// <li>Cannabisleaf: maple leaf. </li>
	// <li>Circle: Arc retraction. </li>
	// <li>CircleCrop: Circles gather together. </li>
	// <li>Circleopen: ellipse gathering. </li>
	// <li>Crosswarp: Horizontal warping. </li>
	// <li>Cube: Cube. </li>
	// <li>DoomScreenTransition: Curtain. </li>
	// <li>Doorway: Porch. </li>
	// <li>Dreamy: Wave. </li>
	// <li>DreamyZoom: Horizontal zoom. </li>
	// <li>FilmBurn: Fire Burning Cloud. </li>
	// <li>GlitchMemories: Glitch. </li>
	// <li>Heart: heart shape. </li>
	// <li>InvertedPageCurl: Page turning. </li>
	// <li>Luma: Corrosion. </li>
	// <li>Mosaic: Nine-square grid. </li>
	// <li>Pinwheel: Windmill. </li>
	// <li>PolarFunction: elliptical diffusion. </li>
	// <li>PolkaDotsCurtain: Arc diffusion. </li>
	// <li>Radial: radar scanning </li>
	// <li>RotateScaleFade: up and down. </li>
	// <li>Squeeze: gather up and down. </li>
	// <li>Swap: zoom in and switch. </li>
	// <li>Swirl: spiral. </li>
	// <li>UndulatingBurnOutSwirl: Water spreading. </li>
	// <li>Windowblinds: blinds. </li>
	// <li>WipeDown: Wrap downward. </li>
	// <li>WipeLeft: Wrap to the left. </li>
	// <li>WipeRight: Wrap to the right. </li>
	// <li>WipeUp: Wrap up. </li>
	// <li>ZoomInCircles: Water ripples. </li>
	// </ul>
	// </li>
	// <li>Audio transition operation, used for transition processing between two audio clips:
	// <ul>
	// <li>AudioFadeInFadeOut : The sound fades in and out. </li>
	// </ul>
	// </li>
	// </ul>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type TransitionOpertion struct {
	// Transition type. Valid values:
	// <ul>
	// <li>Video image transition operation, which is used for transition with video image between two video segments:
	// <ul>
	// <li>ImageFadeInFadeOut: video image fade-in/fade-out.</li>
	// <li>BowTieHorizontal: horizontal bow.</li>
	// <li>BowTieVertical: vertical bow.</li>
	// <li>ButterflyWaveScrawler: waggling.</li>
	// <li>Cannabisleaf: maple leaf.</li>
	// <li> Circle: curved circling.</li>
	// <li>CircleCrop: circle gathering.</li>
	// <li>Circleopen: elliptic gathering.</li>
	// <li>Crosswarp: horizontal warping.</li>
	// <li>Cube: cube.</li>
	// <li>DoomScreenTransition: curtain.</li>
	// <li>Doorway: doorway.</li>
	// <li>Dreamy: wave.</li>
	// <li>DreamyZoom: horizontal gathering.</li>
	// <li>FilmBurn: evening glow.</li>
	// <li>GlitchMemories: joggling.</li>
	// <li>Heart: heart.</li>
	// <li>InvertedPageCurl: page turning.</li>
	// <li>Luma: corroding.</li>
	// <li>Mosaic: grid.</li>
	// <li>Pinwheel: pinwheel.</li>
	// <li>PolarFunction: elliptic diffusing.</li>
	// <li>PolkaDotsCurtain: curved diffusing.</li>
	// <li>Radial: radar scan.</li>
	// <li>RotateScaleFade: vertical rotating.</li>
	// <li>Squeeze: vertical gathering.</li>
	// <li>Swap: zooming in.</li>
	// <li>Swirl: swirling.</li>
	// <li>UndulatingBurnOutSwirl: water spreading.</li>
	// <li>Windowblinds: blinds.</li>
	// <li>WipeDown: collapsing down.</li>
	// <li>WipeLeft: collapsing to the left.</li>
	// <li>WipeRight: collapsing to the right.</li>
	// <li>WipeUp: collapsing up.</li>
	// <li>ZoomInCircles: ripples.</li>
	// </ul>
	// </li>
	// <li>Audio transition operation, which is used for transition between two audio segments:
	// <ul>
	// <li>AudioFadeInFadeOut: audio fade-in/fade-out.</li>
	// </ul>
	// </li>
	// </ul>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type TrtcRecordInfo struct {
	// The TRTC application ID.
	SdkAppId *uint64 `json:"SdkAppId,omitnil,omitempty" name:"SdkAppId"`

	// The TRTC room ID.
	RoomId *string `json:"RoomId,omitnil,omitempty" name:"RoomId"`

	// The recording task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// The IDs of users whose streams are mixed.
	UserIds []*string `json:"UserIds,omitnil,omitempty" name:"UserIds"`
}

type UrlSignatureAuthPolicy struct {
	// Whether to enable or disable [key hotlink protection](https://intl.cloud.tencent.com/document/product/266/33986). Valid values:
	// <li>`Enabled`: enable</li>
	// <li>`Disabled`: disable</li>
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// The key for generating the signature of [key hotlink protection](https://intl.cloud.tencent.com/document/product/266/33986).
	// `EncryptedKey` can contain 8-40 bytes, and cannot contain non-printable characters.
	EncryptedKey *string `json:"EncryptedKey,omitnil,omitempty" name:"EncryptedKey"`
}

type UserAgentFilter struct {
	// UserAgent blacklist and whitelist configuration switch, the values u200bu200bare: <li>on: on; </li> <li>off: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// UA blacklist/whitelist effect rule list
	FilterRules []*UserAgentFilterRule `json:"FilterRules,omitnil,omitempty" name:"FilterRules"`
}

type UserAgentFilterRule struct {
	// UA blacklist type: <li>whitelist: whitelist;</li> <li>blacklist: blacklist. </li>
	FilterType *string `json:"FilterType,omitnil,omitempty" name:"FilterType"`

	// UserAgent list.
	UserAgents []*string `json:"UserAgents,omitnil,omitempty" name:"UserAgents"`

	// Rule type: <li>all: valid for all files;</li> <li>file: valid for specified file suffix;</li> <li>directory: valid for specified path;</li> <li>path: specified absolute The path takes effect. </li>
	RuleType *string `json:"RuleType,omitnil,omitempty" name:"RuleType"`

	// Matching content under the corresponding type of RuleType: <li>Fill in * when all is used;</li> <li>Fill in suffix name when file is used, such as jpg, txt;</li> <li>Fill in path when directory is used, such as /xxx/ test/;</li> <li>Fill in the absolute path when path is specified, such as /xxx/test.html. </li>
	RulePaths []*string `json:"RulePaths,omitnil,omitempty" name:"RulePaths"`
}

type UserDefineAsrTextReviewTemplateInfo struct {
	// Whether to enable custom ASR-based recognition. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Filter labels for custom ASR-based recognition. Results containing the specified labels are returned. If no labels are specified, all results are returned. To filter by labels, specify the labels when adding keywords for custom ASR-based recognition.
	// Up to 10 labels are allowed, each containing no more than 16 characters.
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `100` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `75` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type UserDefineAsrTextReviewTemplateInfoForUpdate struct {
	// Whether to enable custom ASR-based recognition. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Filter labels for custom ASR-based recognition. Results containing the specified labels are returned. If no labels are specified, all results are returned. To filter by labels, specify the labels when adding keywords for custom ASR-based recognition.
	// Up to 10 labels are allowed, each containing no more than 16 characters.
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type UserDefineConfigureInfo struct {
	// Parameters for custom facial recognition
	// Note: This field may return `null`, indicating that no valid value can be found.
	FaceReviewInfo *UserDefineFaceReviewTemplateInfo `json:"FaceReviewInfo,omitnil,omitempty" name:"FaceReviewInfo"`

	// Parameters for custom ASR-based recognition
	// Note: This field may return `null`, indicating that no valid value can be found.
	AsrReviewInfo *UserDefineAsrTextReviewTemplateInfo `json:"AsrReviewInfo,omitnil,omitempty" name:"AsrReviewInfo"`

	// Parameters for custom OCR-based recognition
	// Note: This field may return `null`, indicating that no valid value can be found.
	OcrReviewInfo *UserDefineOcrTextReviewTemplateInfo `json:"OcrReviewInfo,omitnil,omitempty" name:"OcrReviewInfo"`
}

type UserDefineConfigureInfoForUpdate struct {
	// Parameters for custom facial recognition
	FaceReviewInfo *UserDefineFaceReviewTemplateInfoForUpdate `json:"FaceReviewInfo,omitnil,omitempty" name:"FaceReviewInfo"`

	// Parameters for custom ASR-based recognition
	AsrReviewInfo *UserDefineAsrTextReviewTemplateInfoForUpdate `json:"AsrReviewInfo,omitnil,omitempty" name:"AsrReviewInfo"`

	// Parameters for custom OCR-based recognition
	OcrReviewInfo *UserDefineOcrTextReviewTemplateInfoForUpdate `json:"OcrReviewInfo,omitnil,omitempty" name:"OcrReviewInfo"`
}

type UserDefineFaceReviewTemplateInfo struct {
	// Whether to enable custom facial recognition. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Filter labels for custom facial recognition. Results containing the specified labels are returned. If no labels are specified, all results are returned. To filter by labels, specify the labels when adding custom facial libraries.
	// Up to 10 labels are allowed, each containing no more than 16 characters.
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `97` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `95` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type UserDefineFaceReviewTemplateInfoForUpdate struct {
	// Whether to enable custom facial recognition. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Filter labels for custom facial recognition. Results containing the specified labels are returned. If no labels are specified, all results are returned. To filter by labels, specify the labels when adding custom facial libraries.
	// Up to 10 labels are allowed, each containing no more than 16 characters.
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type UserDefineOcrTextReviewTemplateInfo struct {
	// Whether to enable custom OCR-based recognition. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Filter labels for custom OCR-based recognition. Results containing the specified labels are returned. If no labels are specified, all results are returned. To filter by labels, specify the labels when adding keywords for custom OCR-based recognition.
	// Up to 10 labels are allowed, each containing no more than 16 characters.
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. If this parameter is left empty, `100` will be used by default. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. If this parameter is left empty, `75` will be used by default. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

type UserDefineOcrTextReviewTemplateInfoForUpdate struct {
	// Whether to enable custom OCR-based recognition. Valid values:
	// <li>ON</li>
	// <li>OFF</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Filter labels for custom OCR-based recognition. Results containing the specified labels are returned. If no labels are specified, all results are returned. To filter by labels, specify the labels when adding keywords for custom OCR-based recognition.
	// Up to 10 labels are allowed, each containing no more than 16 characters.
	LabelSet []*string `json:"LabelSet,omitnil,omitempty" name:"LabelSet"`

	// Confidence score threshold for determining that something should be blocked. If this threshold is reached, VOD will suggest that the content be blocked. Value range: 0-100
	BlockConfidence *int64 `json:"BlockConfidence,omitnil,omitempty" name:"BlockConfidence"`

	// Confidence score threshold for human review. If this threshold is reached, human review is needed. Value range: 0-100
	ReviewConfidence *int64 `json:"ReviewConfidence,omitnil,omitempty" name:"ReviewConfidence"`
}

// Predefined struct for user
type VerifyDomainRecordRequestParams struct {
	// Need to access the VOD acceleration domain name.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2024, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// VerifyType:
	// <li>dns: DNS Parse verification; </li>
	// <li>fIle: Document verification.</li>
	// 
	// Default value: dns.
	VerifyType *string `json:"VerifyType,omitnil,omitempty" name:"VerifyType"`
}

type VerifyDomainRecordRequest struct {
	*tchttp.BaseRequest
	
	// Need to access the VOD acceleration domain name.
	Domain *string `json:"Domain,omitnil,omitempty" name:"Domain"`

	// <b>The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2024, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.</b>
	SubAppId *uint64 `json:"SubAppId,omitnil,omitempty" name:"SubAppId"`

	// VerifyType:
	// <li>dns: DNS Parse verification; </li>
	// <li>fIle: Document verification.</li>
	// 
	// Default value: dns.
	VerifyType *string `json:"VerifyType,omitnil,omitempty" name:"VerifyType"`
}

func (r *VerifyDomainRecordRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *VerifyDomainRecordRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Domain")
	delete(f, "SubAppId")
	delete(f, "VerifyType")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "VerifyDomainRecordRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type VerifyDomainRecordResponseParams struct {
	// Whether the verification is successful.
	Result *bool `json:"Result,omitnil,omitempty" name:"Result"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type VerifyDomainRecordResponse struct {
	*tchttp.BaseResponse
	Response *VerifyDomainRecordResponseParams `json:"Response"`
}

func (r *VerifyDomainRecordResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *VerifyDomainRecordResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type VideoConfigureInfo struct {
	// The maximum value of the video stream width (or long side), value range: 0 and [128, 1920], unit: px. 
	// <li>When Width and Height are both 0, the resolution is from the same source;</li>
	// <li>When Width is 0 and Height is non-0, Width is scaled proportionally;</li>
	// < li>When Width is non-0 and Height is 0, the Height is scaled proportionally; </li>
	// <li>When both Width and Height are non-0, the resolution is specified by the user. </li>
	// 
	// Default value: 0.
	Width *int64 `json:"Width,omitnil,omitempty" name:"Width"`

	// The maximum value of the video stream height (or short side), value range: 0 and [128, 1920], unit: px. 
	// <li>When Width and Height are both 0, the resolution is from the same source;</li>
	// <li>When Width is 0 and Height is non-0, Width is scaled proportionally;</li>
	// < li>When Width is non-0 and Height is 0, the Height is scaled proportionally; </li>
	// <li>When both Width and Height are non-0, the resolution is specified by the user. </li>
	// 
	// Default value: 0.
	Height *int64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaptive, optional values:
	// <li>open: open, at this time, Width represents the long side of the video, and Height represents the short side of the video;</li>
	// <li>close: closed, at this time , Width represents the width of the video, and Height represents the height of the video. </li>
	// 
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// The bit rate of the video stream, value range: 0 and [128, 10000], unit: kbps. 
	// When the value is 0, it means that the video bitrate remains the same as the original video.
	Bitrate *int64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`
}

type VideoConfigureInfoForUpdate struct {
	// The maximum value of the video stream width (or long side), value range: 0 and [128, 1920], unit: px. 
	// <li>When Width and Height are both 0, the resolution is from the same source;</li>
	// <li>When Width is 0 and Height is non-0, Width is scaled proportionally;</li>
	// < li>When Width is non-0 and Height is 0, the Height is scaled proportionally; </li>
	// <li>When both Width and Height are non-0, the resolution is specified by the user. </li>
	// 
	// Default value: 0.
	Width *int64 `json:"Width,omitnil,omitempty" name:"Width"`

	// The maximum value of the video stream height (or short side), value range: 0 and [128, 1920], unit: px. 
	// <li>When Width and Height are both 0, the resolution is from the same source;</li>
	// <li>When Width is 0 and Height is non-0, Width is scaled proportionally;</li>
	// < li>When Width is non-0 and Height is 0, the Height is scaled proportionally; </li>
	// <li>When both Width and Height are non-0, the resolution is specified by the user. </li>
	// 
	// Default value: 0.
	Height *int64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Resolution adaptive, optional values:
	// <li>open: open, at this time, Width represents the long side of the video, and Height represents the short side of the video;</li>
	// <li>close: closed, at this time , Width represents the width of the video, and Height represents the height of the video. </li>
	// 
	// Default value: open.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// The bit rate of the video stream, value range: 0 and [128, 10000], unit: kbps. 
	// When the value is 0, it means that the video bitrate remains the same as the original video.
	Bitrate *int64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`
}

type VideoDenoiseInfo struct {
	// Whether to enable image noise removal. Valid values:
	// <li>`ON`</li>
	// <li>`OFF`</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The image noise removal type. This parameter is valid only if `Switch` is `ON`. Valid values:
	// <li>`weak`</li>
	// <li>`strong`</li>
	// Default value: `weak`.
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`
}

type VideoFrameInterpolationInfo struct {
	// Whether to enable smart frame interpolation. Valid values:
	// <li>`ON`</li>
	// <li>`OFF`</li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// The frame rate. Value range: (0, 100]. This parameter is valid only if `Switch` is `ON`. By default, the original frame rate will be used.
	Fps *int64 `json:"Fps,omitnil,omitempty" name:"Fps"`
}

type VideoTemplateInfo struct {
	// The video codec. Valid values:
	// <li>libx264: H.264</li>
	// <li>libx265: H.265</li>
	// <li>av1: AOMedia Video 1</li>
	// <li>H.266: H.266</li>
	// <font color=red>Notes:</font>
	// <li>The AOMedia Video 1 and H.266 codecs can only be used for MP4 files.</li>
	// <li> Only CRF is supported for H.266 currently.</li>
	Codec *string `json:"Codec,omitnil,omitempty" name:"Codec"`

	// Video frame rate in Hz. Value range: [0,100].
	// If the value is 0, the frame rate will be the same as that of the source video.
	Fps *uint64 `json:"Fps,omitnil,omitempty" name:"Fps"`

	// Bitrate of video stream in Kbps. Value range: 0 and [128, 35,000].
	// If the value is 0, the bitrate of the video will be the same as that of the source video.
	Bitrate *uint64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	// Default value: open.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// The maximum video width (or long side) in pixels. Value range: 0 and [128, 8192].
	// <li>If both `Width` and `Height` are 0, the output resolution will be the same as that of the source video.</li>
	// <li>If `Width` is 0 and `Height` is not, the video width will be proportionally scaled.</li>
	// <li>If `Width` is not 0 and `Height` is, the video height will be proportionally scaled.</li>
	// <li>If neither `Width` nor `Height` is 0, the specified width and height will be used.</li>
	// Default value: 0.
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// The maximum video height (or short side) in pixels. Value range: 0 and [128, 8192].
	// <li>If both `Width` and `Height` are 0, the output resolution will be the same as that of the source video.</li>
	// <li>If `Width` is 0 and `Height` is not, the video width will be proportionally scaled.</li>
	// <li>If `Width` is not 0 and `Height` is, the video height will be proportionally scaled.</li>
	// <li>If neither `Width` nor `Height` is 0, the specified width and height will be used.</li>
	// Default value: 0.
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Fill type, the way of processing a screenshot when the configured aspect ratio is different from that of the source video. Valid values:
	// <li>stretch: stretches the video image frame by frame to fill the screen. The video image may become "squashed" or "stretched" after transcoding.</li>
	// <li>black: fills the uncovered area with black color, without changing the image's aspect ratio.</li>
	// <li>white: fills the uncovered area with white color, without changing the image's aspect ratio.</li>
	// <li>gauss: applies Gaussian blur to the uncovered area, without changing the image's aspect ratio.</li>
	// Default value: black
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`

	// The video constant rate factor (CRF). Value range: 1-51.
	// 
	// <font color=red>Notes:</font>
	// <li>If this parameter is specified, CRF encoding will be used and the bitrate parameter will be ignored.</li>
	// <li>If `Codec` is `H.266`, this parameter is required (`28` is recommended).</li>
	// <li>We don’t recommend using this parameter unless you have special requirements.</li>
	Vcrf *uint64 `json:"Vcrf,omitnil,omitempty" name:"Vcrf"`

	// I-frame interval in frames. Valid values: 0 and 1-100000.
	// When this parameter is set to 0 or left empty, `Gop` will be automatically set.
	Gop *uint64 `json:"Gop,omitnil,omitempty" name:"Gop"`

	// Whether to output an HDR (high dynamic range) video if the source video is HDR. Valid values:
	// <li>ON: If the source video is HDR, output an HDR video; if not, output an SDR (standard dynamic range) video.</li>
	// <li>OFF: Output an SDR video regardless of whether the source video is HDR.</li>
	// Default value: OFF.
	PreserveHDRSwitch *string `json:"PreserveHDRSwitch,omitnil,omitempty" name:"PreserveHDRSwitch"`

	// The codec tag. This parameter is valid only if the H.265 codec is used. Valid values:
	// <li>hvc1</li>
	// <li>hev1</li>
	// Default value: hvc1.
	CodecTag *string `json:"CodecTag,omitnil,omitempty" name:"CodecTag"`
}

type VideoTemplateInfoForUpdate struct {
	// The video codec. Valid values:
	// <li>libx264: H.264</li>
	// <li>libx265: H.265</li>
	// <li>av1: AOMedia Video 1</li>
	// <li>H.266: H.266</li>
	// <font color=red>Notes:</font>
	// <li>The AOMedia Video 1 and H.266 codecs can only be used for MP4 files.</li>
	// <li> Only CRF is supported for H.266 currently.</li>
	Codec *string `json:"Codec,omitnil,omitempty" name:"Codec"`

	// Video frame rate in Hz. Value range: [0,100].
	// If the value is 0, the frame rate will be the same as that of the source video.
	Fps *uint64 `json:"Fps,omitnil,omitempty" name:"Fps"`

	// Bitrate of video stream in Kbps. Value range: 0 and [128, 35,000].
	// If the value is 0, the bitrate of the video will be the same as that of the source video.
	Bitrate *uint64 `json:"Bitrate,omitnil,omitempty" name:"Bitrate"`

	// Resolution adaption. Valid values:
	// <li>open: enabled. In this case, `Width` represents the long side of a video, while `Height` the short side;</li>
	// <li>close: disabled. In this case, `Width` represents the width of a video, while `Height` the height.</li>
	ResolutionAdaptive *string `json:"ResolutionAdaptive,omitnil,omitempty" name:"ResolutionAdaptive"`

	// The maximum video width (or long side) in pixels. Value range: 0 and [128, 8192].
	// <li>If both `Width` and `Height` are 0, the output resolution will be the same as that of the source video.</li>
	// <li>If `Width` is 0 and `Height` is not, the video width will be proportionally scaled.</li>
	// <li>If `Width` is not 0 and `Height` is, the video height will be proportionally scaled.</li>
	// <li>If neither `Width` nor `Height` is 0, the specified width and height will be used.</li>
	Width *uint64 `json:"Width,omitnil,omitempty" name:"Width"`

	// The maximum video height (or short side) in pixels. Value range: 0 and [128, 8192].
	Height *uint64 `json:"Height,omitnil,omitempty" name:"Height"`

	// Fill type. "Fill" refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. Valid values:
	// <li>stretch: stretches video image frame by frame to fill the screen. The video image may become "squashed" or "stretched" after transcoding.</li>
	// <li>black: fills the uncovered area with black color, without changing the image's aspect ratio.</li>
	// <li>white: fills the uncovered area with white color, without changing the image's aspect ratio.</li>
	// <li>gauss: applies Gaussian blur to the uncovered area, without changing the image's aspect ratio.</li>
	FillType *string `json:"FillType,omitnil,omitempty" name:"FillType"`

	// The video constant rate factor (CRF). Value range: 1-51. `0` means to disable this parameter.
	// 
	// <font color=red>Notes:</font>
	// <li>If this parameter is specified, CRF encoding will be used and the bitrate parameter will be ignored.</li>
	// <li>If `Codec` is `H.266`, this parameter is required (`28` is recommended).</li>
	// <li>We don’t recommend using this parameter unless you have special requirements.</li>
	Vcrf *uint64 `json:"Vcrf,omitnil,omitempty" name:"Vcrf"`

	// I-frame interval in frames. Valid values: 0 and 1-100000.
	// When this parameter is set to 0 or left empty, `Gop` will be automatically set.
	Gop *uint64 `json:"Gop,omitnil,omitempty" name:"Gop"`

	// Whether to output an HDR (high dynamic range) video if the source video is HDR. Valid values:
	// <li>ON: If the source video is HDR, output an HDR video; if not, output an SDR (standard dynamic range) video.</li>
	// <li>OFF: Output an SDR video regardless of whether the source video is HDR.</li>
	PreserveHDRSwitch *string `json:"PreserveHDRSwitch,omitnil,omitempty" name:"PreserveHDRSwitch"`

	// The codec tag. This parameter is valid only if the H.265 codec is used. Valid values:
	// <li>hvc1</li>
	// <li>hev1</li>
	// Default value: hvc1.
	CodecTag *string `json:"CodecTag,omitnil,omitempty" name:"CodecTag"`
}

type VideoTrackItem struct {
	// Source of media material for video segment, which can be:
	// <li>ID of VOD media files</li>
	// <li>Download URL of other media files.</li>
	// Note: when a download URL of other media files is used as the material source and access control (such as hotlink protection) is enabled, the URL needs to carry access control parameters (such as hotlink protection signature).
	SourceMedia *string `json:"SourceMedia,omitnil,omitempty" name:"SourceMedia"`

	// Start time of video segment in material file in seconds. Default value: 0.
	SourceMediaStartTime *float64 `json:"SourceMediaStartTime,omitnil,omitempty" name:"SourceMediaStartTime"`

	// Video segment duration in seconds. By default, the length of the video material will be used, which means that the entire material will be captured. If the source file is an image, `Duration` needs to be greater than 0.
	Duration *float64 `json:"Duration,omitnil,omitempty" name:"Duration"`

	// The target video duration, in seconds.
	// <li>If `TargetDuration` is empty or `0`, the target duration is the same as `Duration`.</li>
	// <li>If `TargetDuration` is a value greater than 0, the playback speed will be changed to make the final video duration the same as the value of `TargetDuration`.</li>
	TargetDuration *float64 `json:"TargetDuration,omitnil,omitempty" name:"TargetDuration"`

	// Video origin position. Valid values:
	// <li> Center: the origin of coordinates is the center position, such as the center of canvas.</li>
	// Default value: Center.
	CoordinateOrigin *string `json:"CoordinateOrigin,omitnil,omitempty" name:"CoordinateOrigin"`

	// The horizontal position of the origin of the video segment relative to the origin of the canvas. % and px formats are supported:
	// <li>If the string ends in %, the `XPos` of the video segment will be at the position of the specified percentage of the canvas width; for example, `10%` means that `XPos` is 10% of the canvas width.</li>
	// <li>If the string ends in px, the `XPos` of the video segment will be in px; for example, `100px` means that `XPos` is 100 px.</li>
	// Default value: 0 px.
	XPos *string `json:"XPos,omitnil,omitempty" name:"XPos"`

	// The vertical position of the origin of the video segment relative to the origin of the canvas. % and px formats are supported:
	// <li>If the string ends in %, the `YPos` of the video segment will be at the position of the specified percentage of the canvas height; for example, `10%` means that `YPos` is 10% of the canvas height.</li>
	// <li>If the string ends in px, the `YPos` of the video segment will be in px; for example, `100px` means that `YPos` is 100 px.</li>
	// Default value: 0 px.
	YPos *string `json:"YPos,omitnil,omitempty" name:"YPos"`

	// Video segment width. % and px formats are supported:
	// <li>If the string ends in %, the `Width` of the video segment will be the specified percentage of the canvas width; for example, `10%` means that `Width` is 10% of the canvas width.</li>
	// <li>If the string ends in px, the `Width` of the video segment will be in px; for example, `100px` means that `Width` is 100 px.</li>
	// <li>If both `Width` and `Height` are empty, then they will be the `Width` and `Height` of the video material, respectively.</li>
	// <li>If `Width` is empty, but `Height` is not empty, `Width` will be proportionally scaled.</li>
	// <li>If `Width` is not empty, but `Height` is empty, `Height` will be proportionally scaled.</li>
	Width *string `json:"Width,omitnil,omitempty" name:"Width"`

	// Video segment height. % and px formats are supported:
	// <li>If the string ends in %, the `Height` of the video segment will be the specified percentage of the canvas height; for example, `10%` means that `Height` is 10% of the canvas height;
	// </li><li>If the string ends in px, the `Height` of the video segment will be in px; for example, `100px` means that `Height` is 100 px.</li>
	// <li>If both `Width` and `Height` are empty, then they will be the `Width` and `Height` of the video material, respectively.</li>
	// <li>If `Width` is empty, but `Height` is not empty, `Width` will be proportionally scaled.</li>
	// <li>If `Width` is not empty, but `Height` is empty, `Height` will be proportionally scaled.</li>
	Height *string `json:"Height,omitnil,omitempty" name:"Height"`

	// Operation on audio such as muting.
	// Note: this field may return null, indicating that no valid values can be obtained.
	AudioOperations []*AudioTransform `json:"AudioOperations,omitnil,omitempty" name:"AudioOperations"`

	// Operation on video image such as image rotation.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ImageOperations []*ImageTransform `json:"ImageOperations,omitnil,omitempty" name:"ImageOperations"`
}

type VoiceConfigureInfo struct {
	// Audio (mute, bass, pop) detection switch, optional values: 
	// <li>ON: on; </li>
	// <li>OFF: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type VoiceConfigureInfoForUpdate struct {
	// Audio (mute, bass, pop) detection switch, optional values: 
	// <li>ON: on; </li>
	// <li>OFF: off. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`
}

type WatermarkConfigureData struct {
	// Whether to enable watermark. Possible values:
	// <li>ON: means enabling watermark;</li>
	// <li>OFF: means turning off watermark. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Watermark URL.
	Url *string `json:"Url,omitnil,omitempty" name:"Url"`

	// The width of the watermark. 
	// <li>The string ends with %, indicating that the watermark Width is a percentage of the video width, such as 10% indicating that the Width is 10% of the video width;</li>
	Width *string `json:"Width,omitnil,omitempty" name:"Width"`

	// The height of the watermark. 
	// <li>The string ends with %, indicating that the watermark Height is a percentage of the video height, for example, 10% means that the Height is 10% of the video height;</li>
	Height *string `json:"Height,omitnil,omitempty" name:"Height"`

	// The horizontal position of the watermark origin from the video image coordinate origin. The string ends with %, indicating that the watermark XPos specifies a percentage of the video width, such as 10% indicating that XPos is 10% of the video width.
	XPos *string `json:"XPos,omitnil,omitempty" name:"XPos"`

	// The vertical position of the watermark origin from the video image coordinate origin. When the string ends with %, it means that the watermark YPos specifies a percentage of the video height. For example, 10% means that YPos is 10% of the video height.
	YPos *string `json:"YPos,omitnil,omitempty" name:"YPos"`
}

type WatermarkConfigureInfo struct {
	// Whether to enable watermark. Possible values:
	// <li>ON: means enabling watermark;</li>
	// <li>OFF: means turning off watermark. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Watermark image Base64 encoded string. Supports jpeg, png image formats.
	ImageContent *string `json:"ImageContent,omitnil,omitempty" name:"ImageContent"`

	// The width of the watermark. 
	// <li>The string ends with %, indicating that the watermark Width is a percentage of the video width, such as 10% indicating that the Width is 10% of the video width;</li>
	Width *string `json:"Width,omitnil,omitempty" name:"Width"`

	// The height of the watermark. 
	// <li>The string ends with %, indicating that the watermark Height is a percentage of the video height, for example, 10% means that the Height is 10% of the video height;</li>
	Height *string `json:"Height,omitnil,omitempty" name:"Height"`

	// The horizontal position of the watermark origin from the video image coordinate origin. The string ends with %, indicating that the watermark XPos specifies a percentage of the video width, such as 10% indicating that the XPos is 10% of the video width.
	XPos *string `json:"XPos,omitnil,omitempty" name:"XPos"`

	// The vertical position of the watermark origin from the video image coordinate origin. When the string ends with %, it means that the watermark YPos specifies a percentage of the video height. For example, 10% means that YPos is 10% of the video height.
	YPos *string `json:"YPos,omitnil,omitempty" name:"YPos"`
}

type WatermarkConfigureInfoForUpdate struct {
	// Whether to enable watermark. Possible values:
	// <li>ON: means enabling watermark;</li>
	// <li>OFF: means turning off watermark. </li>
	Switch *string `json:"Switch,omitnil,omitempty" name:"Switch"`

	// Watermark image Base64 encoded string. Supports jpeg, png image formats.
	ImageContent *string `json:"ImageContent,omitnil,omitempty" name:"ImageContent"`

	// The width of the watermark. 
	// <li>The string ends with %, indicating that the watermark Width is a percentage of the video width, such as 10% indicating that the Width is 10% of the video width;</li>
	Width *string `json:"Width,omitnil,omitempty" name:"Width"`

	// The height of the watermark. 
	// <li>The string ends with %, indicating that the watermark Height is a percentage of the video height, for example, 10% means that the Height is 10% of the video height;</li>
	Height *string `json:"Height,omitnil,omitempty" name:"Height"`

	// The horizontal position of the watermark origin from the video image coordinate origin. The string ends with %, indicating that the watermark XPos specifies a percentage of the video width, such as 10% indicating that XPos is 10% of the video width.
	XPos *string `json:"XPos,omitnil,omitempty" name:"XPos"`

	// The vertical position of the watermark origin from the video image coordinate origin. When the string ends with %, it means that the watermark YPos specifies a percentage of the video height. For example, 10% means that YPos is 10% of the video height.
	YPos *string `json:"YPos,omitnil,omitempty" name:"YPos"`
}

type WatermarkCycleConfigForUpdate struct {
	// Playback time point in seconds when a watermark appears in a video for the first time.
	StartTime *float64 `json:"StartTime,omitnil,omitempty" name:"StartTime"`

	// Display duration of a watermark in a watermark cycle in seconds.
	DisplayDuration *float64 `json:"DisplayDuration,omitnil,omitempty" name:"DisplayDuration"`

	// Duration of a watermark cycle in seconds.
	// If 0 is entered, a watermark will last for only one cycle (i.e., visible for `DisplayDuration` seconds throughout the video).
	CycleDuration *float64 `json:"CycleDuration,omitnil,omitempty" name:"CycleDuration"`
}

type WatermarkInput struct {
	// Watermarking template ID.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Text content, which contains up to 100 characters. Set this parameter only when the watermark type is text.
	// VOD does not support adding text watermarks on screenshots.
	TextContent *string `json:"TextContent,omitnil,omitempty" name:"TextContent"`

	// SVG content, which contains up to 2,000,000 characters. Set this parameter only when the watermark type is SVG.
	// VOD does not support adding SVG watermarks on screenshots.
	SvgContent *string `json:"SvgContent,omitnil,omitempty" name:"SvgContent"`

	// Start time offset of a watermark in seconds. If this parameter is left blank or 0 is entered, the watermark will appear upon the first video frame.
	// <li>If this parameter is left blank or 0 is entered, the watermark will appear upon the first video frame;</li>
	// <li>If this value is greater than 0 (e.g., n), the watermark will appear at second n after the first video frame;</li>
	// <li>If this value is smaller than 0 (e.g., -n), the watermark will appear at second n before the last video frame.</li>
	StartTimeOffset *float64 `json:"StartTimeOffset,omitnil,omitempty" name:"StartTimeOffset"`

	// End time offset of a watermark in seconds.
	// <li>If this parameter is left blank or 0 is entered, the watermark will exist till the last video frame;</li>
	// <li>If this value is greater than 0 (e.g., n), the watermark will exist till second n;</li>
	// <li>If this value is smaller than 0 (e.g., -n), the watermark will exist till second n before the last video frame.</li>
	EndTimeOffset *float64 `json:"EndTimeOffset,omitnil,omitempty" name:"EndTimeOffset"`
}

type WatermarkTemplate struct {
	// Unique ID of watermarking template.
	Definition *int64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// Watermark type. Valid values:
	// <li>image: image watermark;</li>
	// <li>text: text watermark.</li>
	Type *string `json:"Type,omitnil,omitempty" name:"Type"`

	// Watermarking template name.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Name *string `json:"Name,omitnil,omitempty" name:"Name"`

	// Template description.
	Comment *string `json:"Comment,omitnil,omitempty" name:"Comment"`

	// Horizontal position of the origin of the watermark image relative to the origin of the video.
	// <li>If the string ends in %, the `Left` edge of the watermark will be at the position of the specified percentage of the video width; for example, `10%` means that the `Left` edge is at 10% of the video width;</li>
	// <li>If the string ends in px, the `Left` edge of the watermark will be at the position of the specified px of the video width; for example, `100px` means that the `Left` edge is at the position of 100 px.</li>
	XPos *string `json:"XPos,omitnil,omitempty" name:"XPos"`

	// Vertical position of the origin of the watermark image relative to the origin of the video.
	// <li>If the string ends in %, the `Top` edge of the watermark will beat the position of the specified percentage of the video height; for example, `10%` means that the `Top` edge is at 10% of the video height;</li>
	// <li>If the string ends in px, the `Top` edge of the watermark will be at the position of the specified px of the video height; for example, `100px` means that the `Top` edge is at the position of 100 px.</li>
	YPos *string `json:"YPos,omitnil,omitempty" name:"YPos"`

	// Image watermarking template. This field is valid only when `Type` is `image`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	ImageTemplate *ImageWatermarkTemplate `json:"ImageTemplate,omitnil,omitempty" name:"ImageTemplate"`

	// Text watermarking template. This field is valid only when `Type` is `text`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	TextTemplate *TextWatermarkTemplateInput `json:"TextTemplate,omitnil,omitempty" name:"TextTemplate"`

	// SVG watermarking template. This field is valid when `Type` is `svg`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SvgTemplate *SvgWatermarkInput `json:"SvgTemplate,omitnil,omitempty" name:"SvgTemplate"`

	// Creation time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Last modified time of template in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?from_cn_redirect=1#I).
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// Origin position. Valid values:
	// <li>topLeft: the origin of coordinates is in the top-left corner of the video, and the origin of the watermark is in the top-left corner of the image or text;</li>
	// <li>topRight: the origin of coordinates is in the top-right corner of the video, and the origin of the watermark is in the top-right corner of the image or text;</li>
	// <li>bottomLeft: the origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left corner of the image or text;</li>
	// <li>bottomRight: the origin of coordinates is in the bottom-right corner of the video, and the origin of the watermark is in the bottom-right corner of the image or text.</li>
	CoordinateOrigin *string `json:"CoordinateOrigin,omitnil,omitempty" name:"CoordinateOrigin"`
}

type WebPageRecordInfo struct {
	// Panoramic recording Url.
	RecordUrl *string `json:"RecordUrl,omitnil,omitempty" name:"RecordUrl"`

	// Panoramic recording task ID.
	RecordTaskId *string `json:"RecordTaskId,omitnil,omitempty" name:"RecordTaskId"`
}

type WechatMiniProgramPublishTask struct {
	// Task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Task status. Valid values:
	// WAITING: waiting;
	// PROCESSING: processing;
	// FINISH: completed.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code
	// <li>0: success;</li>
	// <li>Other values: failure.</li>
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// ID of published video file.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// ID of the transcoding template corresponding to the published video. 0 represents the source video.
	SourceDefinition *uint64 `json:"SourceDefinition,omitnil,omitempty" name:"SourceDefinition"`

	// Status of video release on WeChat Mini Program. Valid values:
	// <li>Pass: successfully published;</li>
	// <li>Failed: failed to publish;</li>
	// <li>Rejected: rejected.</li>
	PublishResult *string `json:"PublishResult,omitnil,omitempty" name:"PublishResult"`
}

type WechatMiniProgramPublishTaskInput struct {
	// ID of the transcoding template corresponding to the published video. 0 represents the source video.
	SourceDefinition *uint64 `json:"SourceDefinition,omitnil,omitempty" name:"SourceDefinition"`
}

type WechatPublishTask struct {
	// Task ID.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// Task status. Valid values:
	// WAITING: waiting;
	// PROCESSING: processing;
	// FINISH: completed.
	Status *string `json:"Status,omitnil,omitempty" name:"Status"`

	// Error code
	// <li>0: success;</li>
	// <li>Other values: failure.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	ErrCode *int64 `json:"ErrCode,omitnil,omitempty" name:"ErrCode"`

	// Error message.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Message *string `json:"Message,omitnil,omitempty" name:"Message"`

	// ID of published video file.
	// Note: this field may return null, indicating that no valid values can be obtained.
	FileId *string `json:"FileId,omitnil,omitempty" name:"FileId"`

	// Release on WeChat template ID.
	// Note: this field may return null, indicating that no valid values can be obtained.
	Definition *uint64 `json:"Definition,omitnil,omitempty" name:"Definition"`

	// ID of the transcoding template corresponding to the published video. 0 represents the source video.
	// Note: this field may return null, indicating that no valid values can be obtained.
	SourceDefinition *uint64 `json:"SourceDefinition,omitnil,omitempty" name:"SourceDefinition"`

	// Release on WeChat status. Valid values:
	// <li>FAIL: failure;</li>
	// <li>SUCCESS: success;</li>
	// <li>AUDITNOTPASS: rejected</li>
	// <li>NOTTRIGGERED: release on WeChat not initiated yet.</li>
	// Note: this field may return null, indicating that no valid values can be obtained.
	WechatStatus *string `json:"WechatStatus,omitnil,omitempty" name:"WechatStatus"`

	// WeChat `Vid`.
	// Note: this field may return null, indicating that no valid values can be obtained.
	WechatVid *string `json:"WechatVid,omitnil,omitempty" name:"WechatVid"`

	// WeChat address.
	// Note: this field may return null, indicating that no valid values can be obtained.
	WechatUrl *string `json:"WechatUrl,omitnil,omitempty" name:"WechatUrl"`
}