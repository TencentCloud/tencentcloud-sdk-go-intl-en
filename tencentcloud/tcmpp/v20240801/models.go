// Copyright (c) 2017-2025 Tencent. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v20240801

import (
    tcerr "github.com/tencentcloud/tencentcloud-sdk-go-intl-en/tencentcloud/common/errors"
    tchttp "github.com/tencentcloud/tencentcloud-sdk-go-intl-en/tencentcloud/common/http"
    "github.com/tencentcloud/tencentcloud-sdk-go-intl-en/tencentcloud/common/json"
)

// Predefined struct for user
type AddTeamMemberRequestParams struct {
	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Members to be added
	MemberList []*CreateTeamMemberInfoReq `json:"MemberList,omitnil,omitempty" name:"MemberList"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type AddTeamMemberRequest struct {
	*tchttp.BaseRequest
	
	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Members to be added
	MemberList []*CreateTeamMemberInfoReq `json:"MemberList,omitnil,omitempty" name:"MemberList"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *AddTeamMemberRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *AddTeamMemberRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "TeamId")
	delete(f, "MemberList")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "AddTeamMemberRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type AddTeamMemberResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type AddTeamMemberResponse struct {
	*tchttp.BaseResponse
	Response *AddTeamMemberResponseParams `json:"Response"`
}

func (r *AddTeamMemberResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *AddTeamMemberResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ApplicationDetail struct {
	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationID *string `json:"ApplicationID,omitnil,omitempty" name:"ApplicationID"`

	// Product ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	AppIdentityID *int64 `json:"AppIdentityID,omitnil,omitempty" name:"AppIdentityID"`

	// The application name.
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// English name of the application (this field is not used yet)
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationEnglishName *string `json:"ApplicationEnglishName,omitnil,omitempty" name:"ApplicationEnglishName"`

	// Application icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	Logo *string `json:"Logo,omitnil,omitempty" name:"Logo"`

	// Remarks
	// Note: This field may return null, indicating that no valid values can be obtained.
	Remark *string `json:"Remark,omitnil,omitempty" name:"Remark"`

	// Android package name
	// Note: This field may return null, indicating that no valid values can be obtained.
	AndroidAppKey *string `json:"AndroidAppKey,omitnil,omitempty" name:"AndroidAppKey"`

	// iOS bundleId
	// Note: This field may return null, indicating that no valid values can be obtained.
	IosAppKey *string `json:"IosAppKey,omitnil,omitempty" name:"IosAppKey"`

	// Creator
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// The creation time.
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Updated by
	// Note: This field may return null, indicating that no valid values can be obtained.
	UpdateUser *string `json:"UpdateUser,omitnil,omitempty" name:"UpdateUser"`

	// Update date
	// Note: This field may return null, indicating that no valid values can be obtained.
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// Number of bound mini programs
	// Note: This field may return null, indicating that no valid values can be obtained.
	BindMNPCount *int64 `json:"BindMNPCount,omitnil,omitempty" name:"BindMNPCount"`

	// Information of bound mini programs
	// Note: This field may return null, indicating that no valid values can be obtained.
	BindMNPList []*ApplicationMNPRelInfoResp `json:"BindMNPList,omitnil,omitempty" name:"BindMNPList"`

	// Application description
	// Note: This field may return null, indicating that no valid values can be obtained.
	Intro *string `json:"Intro,omitnil,omitempty" name:"Intro"`

	// Android App download address
	// Note: This field may return null, indicating that no valid values can be obtained.
	AndroidAppUrl *string `json:"AndroidAppUrl,omitnil,omitempty" name:"AndroidAppUrl"`

	// iOS App download address
	// Note: This field may return null, indicating that no valid values can be obtained.
	IosAppUrl *string `json:"IosAppUrl,omitnil,omitempty" name:"IosAppUrl"`

	// Team ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Quantity of sensitive APIs
	// Note: This field may return null, indicating that no valid values can be obtained.
	SensitiveApiCount *int64 `json:"SensitiveApiCount,omitnil,omitempty" name:"SensitiveApiCount"`

	// Application type. 1: Test; 2: Formal
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationType *int64 `json:"ApplicationType,omitnil,omitempty" name:"ApplicationType"`
}

type ApplicationInfo struct {
	// Platform ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	CustomerID *string `json:"CustomerID,omitnil,omitempty" name:"CustomerID"`

	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationID *string `json:"ApplicationID,omitnil,omitempty" name:"ApplicationID"`

	// Product ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	AppIdentityID *int64 `json:"AppIdentityID,omitnil,omitempty" name:"AppIdentityID"`

	// Name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// English name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationEnglishName *string `json:"ApplicationEnglishName,omitnil,omitempty" name:"ApplicationEnglishName"`

	// Icon
	Logo *string `json:"Logo,omitnil,omitempty" name:"Logo"`

	// Remarks
	Remark *string `json:"Remark,omitnil,omitempty" name:"Remark"`

	// Android package name
	// Note: This field may return null, indicating that no valid values can be obtained.
	AndroidAppKey *string `json:"AndroidAppKey,omitnil,omitempty" name:"AndroidAppKey"`

	// iOS bundleId
	// Note: This field may return null, indicating that no valid values can be obtained.
	IosAppKey *string `json:"IosAppKey,omitnil,omitempty" name:"IosAppKey"`

	// Creator
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// Creation time
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Updater
	// Note: This field may return null, indicating that no valid values can be obtained.
	UpdateUser *string `json:"UpdateUser,omitnil,omitempty" name:"UpdateUser"`

	// Update date
	// Note: This field may return null, indicating that no valid values can be obtained.
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// Introduction
	Intro *string `json:"Intro,omitnil,omitempty" name:"Intro"`

	// iOS app download address
	IosAppUrl *string `json:"IosAppUrl,omitnil,omitempty" name:"IosAppUrl"`

	// Android app download address
	AndroidAppUrl *string `json:"AndroidAppUrl,omitnil,omitempty" name:"AndroidAppUrl"`

	// Team ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Number of privacy APIs
	// Note: This field may return null, indicating that no valid values can be obtained.
	SensitiveApiCount *int64 `json:"SensitiveApiCount,omitnil,omitempty" name:"SensitiveApiCount"`

	// Application type 1-Test 2-Formal
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationType *uint64 `json:"ApplicationType,omitnil,omitempty" name:"ApplicationType"`
}

type ApplicationMNPRelInfoResp struct {
	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program name
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini program icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`

	// Mini program type
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPType *string `json:"MNPType,omitnil,omitempty" name:"MNPType"`

	// Introduction
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIntro *string `json:"MNPIntro,omitnil,omitempty" name:"MNPIntro"`

	// Description
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPDesc *string `json:"MNPDesc,omitnil,omitempty" name:"MNPDesc"`

	// Effectiveness. 1: Not effective 2: Effective
	// Note: This field may return null, indicating that no valid values can be obtained.
	EffectStatus *int64 `json:"EffectStatus,omitnil,omitempty" name:"EffectStatus"`

	// Effective version
	// Note: This field may return null, indicating that no valid values can be obtained.
	EffectMNPVersion *string `json:"EffectMNPVersion,omitnil,omitempty" name:"EffectMNPVersion"`

	// Online version
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPOnlineVersion *string `json:"MNPOnlineVersion,omitnil,omitempty" name:"MNPOnlineVersion"`

	// 0: Not released; 1: Released
	// Note: This field may return null, indicating that no valid values can be obtained.
	OnlineStatus *int64 `json:"OnlineStatus,omitnil,omitempty" name:"OnlineStatus"`
}

type ApplicationPageInfo struct {
	// Total number of results.
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*ApplicationInfo `json:"DataList,omitnil,omitempty" name:"DataList"`
}

type ApplicationSimpleInfo struct {
	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Application name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`
}

type ApplicationSimpleInfoResp struct {
	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationID *string `json:"ApplicationID,omitnil,omitempty" name:"ApplicationID"`

	// Product ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	AppIdentityID *int64 `json:"AppIdentityID,omitnil,omitempty" name:"AppIdentityID"`

	// The application name.
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`
}

type ApplicationSimpleListInfoResp struct {
	// Total number of results.
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*ApplicationSimpleInfoResp `json:"DataList,omitnil,omitempty" name:"DataList"`
}

type ApprovalItem struct {
	// Application ID
	AppId *string `json:"AppId,omitnil,omitempty" name:"AppId"`

	// Approval result. 2: Rejected;
	// 3: Approved
	ApprovalResult *int64 `json:"ApprovalResult,omitnil,omitempty" name:"ApprovalResult"`

	// Approval notes. It’s required when the request is rejected. 
	ApprovalNote *string `json:"ApprovalNote,omitnil,omitempty" name:"ApprovalNote"`
}

type AuditInfoReq struct {
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Approval status 2- Rejected
	// 3 - Approved
	AuditStatus *int64 `json:"AuditStatus,omitnil,omitempty" name:"AuditStatus"`

	// Approval description
	AuditNote *string `json:"AuditNote,omitnil,omitempty" name:"AuditNote"`
}

type BooleanInfo struct {
	// Bool type response object
	// Note: This field may return null, indicating that no valid values can be obtained.
	Result *bool `json:"Result,omitnil,omitempty" name:"Result"`
}

// Predefined struct for user
type CheckGlobalDomainRequestParams struct {
	// Domain name list
	DomainUrlList []*string `json:"DomainUrlList,omitnil,omitempty" name:"DomainUrlList"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CheckGlobalDomainRequest struct {
	*tchttp.BaseRequest
	
	// Domain name list
	DomainUrlList []*string `json:"DomainUrlList,omitnil,omitempty" name:"DomainUrlList"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CheckGlobalDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CheckGlobalDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "DomainUrlList")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CheckGlobalDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CheckGlobalDomainResponseParams struct {
	// Response data
	Data *GlobalDomainCheckResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CheckGlobalDomainResponse struct {
	*tchttp.BaseResponse
	Response *CheckGlobalDomainResponseParams `json:"Response"`
}

func (r *CheckGlobalDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CheckGlobalDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ConfigureMNPPreviewRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// 1: Set; 2: Cancel
	ActionType *int64 `json:"ActionType,omitnil,omitempty" name:"ActionType"`

	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Path to the preview page
	PreivewEntrancePath *string `json:"PreivewEntrancePath,omitnil,omitempty" name:"PreivewEntrancePath"`
}

type ConfigureMNPPreviewRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// 1: Set; 2: Cancel
	ActionType *int64 `json:"ActionType,omitnil,omitempty" name:"ActionType"`

	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Path to the preview page
	PreivewEntrancePath *string `json:"PreivewEntrancePath,omitnil,omitempty" name:"PreivewEntrancePath"`
}

func (r *ConfigureMNPPreviewRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ConfigureMNPPreviewRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "ActionType")
	delete(f, "MNPVersionId")
	delete(f, "PlatformId")
	delete(f, "PreivewEntrancePath")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ConfigureMNPPreviewRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ConfigureMNPPreviewResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ConfigureMNPPreviewResponse struct {
	*tchttp.BaseResponse
	Response *ConfigureMNPPreviewResponseParams `json:"Response"`
}

func (r *ConfigureMNPPreviewResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ConfigureMNPPreviewResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateApplicationRequestParams struct {
	// Application name
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// Logo address
	Logo *string `json:"Logo,omitnil,omitempty" name:"Logo"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Application type. 1: Test; 2: Formal
	ApplicationType *int64 `json:"ApplicationType,omitnil,omitempty" name:"ApplicationType"`

	// Introduction
	Intro *string `json:"Intro,omitnil,omitempty" name:"Intro"`

	// Android app package name
	AndroidAppKey *string `json:"AndroidAppKey,omitnil,omitempty" name:"AndroidAppKey"`

	// iOS App bundleId
	IosAppKey *string `json:"IosAppKey,omitnil,omitempty" name:"IosAppKey"`

	// Remarks
	Remark *string `json:"Remark,omitnil,omitempty" name:"Remark"`
}

type CreateApplicationRequest struct {
	*tchttp.BaseRequest
	
	// Application name
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// Logo address
	Logo *string `json:"Logo,omitnil,omitempty" name:"Logo"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Application type. 1: Test; 2: Formal
	ApplicationType *int64 `json:"ApplicationType,omitnil,omitempty" name:"ApplicationType"`

	// Introduction
	Intro *string `json:"Intro,omitnil,omitempty" name:"Intro"`

	// Android app package name
	AndroidAppKey *string `json:"AndroidAppKey,omitnil,omitempty" name:"AndroidAppKey"`

	// iOS App bundleId
	IosAppKey *string `json:"IosAppKey,omitnil,omitempty" name:"IosAppKey"`

	// Remarks
	Remark *string `json:"Remark,omitnil,omitempty" name:"Remark"`
}

func (r *CreateApplicationRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateApplicationRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApplicationName")
	delete(f, "Logo")
	delete(f, "PlatformId")
	delete(f, "TeamId")
	delete(f, "ApplicationType")
	delete(f, "Intro")
	delete(f, "AndroidAppKey")
	delete(f, "IosAppKey")
	delete(f, "Remark")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateApplicationRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateApplicationResponseParams struct {
	// Response data
	Data *ResourceIdStringInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateApplicationResponse struct {
	*tchttp.BaseResponse
	Response *CreateApplicationResponseParams `json:"Response"`
}

func (r *CreateApplicationResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateApplicationResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type CreateApplicationSensitiveAPIReq struct {
	// API name
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIName *string `json:"APIName,omitnil,omitempty" name:"APIName"`

	// API description
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIDesc *string `json:"APIDesc,omitnil,omitempty" name:"APIDesc"`

	// API type. 1: System; 2: Custom
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIType *int64 `json:"APIType,omitnil,omitempty" name:"APIType"`
}

// Predefined struct for user
type CreateApplicationSensitiveAPIRequestParams struct {
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// List of newly-added APIs
	APIList []*CreateApplicationSensitiveAPIReq `json:"APIList,omitnil,omitempty" name:"APIList"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreateApplicationSensitiveAPIRequest struct {
	*tchttp.BaseRequest
	
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// List of newly-added APIs
	APIList []*CreateApplicationSensitiveAPIReq `json:"APIList,omitnil,omitempty" name:"APIList"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreateApplicationSensitiveAPIRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateApplicationSensitiveAPIRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApplicationId")
	delete(f, "APIList")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateApplicationSensitiveAPIRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateApplicationSensitiveAPIResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateApplicationSensitiveAPIResponse struct {
	*tchttp.BaseResponse
	Response *CreateApplicationSensitiveAPIResponseParams `json:"Response"`
}

func (r *CreateApplicationSensitiveAPIResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateApplicationSensitiveAPIResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateConsoleMNPVersionCompileTaskRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Version
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`

	// External URL of the document
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// Internal URL of the document
	FileInnerUrl *string `json:"FileInnerUrl,omitnil,omitempty" name:"FileInnerUrl"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Type 2 Version
	TaskType *int64 `json:"TaskType,omitnil,omitempty" name:"TaskType"`

	// Version introduction
	MNPVersionIntro *string `json:"MNPVersionIntro,omitnil,omitempty" name:"MNPVersionIntro"`

	// Version description
	MNPVersionDesc *string `json:"MNPVersionDesc,omitnil,omitempty" name:"MNPVersionDesc"`

	// Type 1 Unencrypted 2 Encrypted 3 Source
	SourceType *int64 `json:"SourceType,omitnil,omitempty" name:"SourceType"`

	// Upload platform 1- TCMPP 2 WeChat 3. TCMPP + WeChat
	ReleaseChannel *int64 `json:"ReleaseChannel,omitnil,omitempty" name:"ReleaseChannel"`
}

type CreateConsoleMNPVersionCompileTaskRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Version
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`

	// External URL of the document
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// Internal URL of the document
	FileInnerUrl *string `json:"FileInnerUrl,omitnil,omitempty" name:"FileInnerUrl"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Type 2 Version
	TaskType *int64 `json:"TaskType,omitnil,omitempty" name:"TaskType"`

	// Version introduction
	MNPVersionIntro *string `json:"MNPVersionIntro,omitnil,omitempty" name:"MNPVersionIntro"`

	// Version description
	MNPVersionDesc *string `json:"MNPVersionDesc,omitnil,omitempty" name:"MNPVersionDesc"`

	// Type 1 Unencrypted 2 Encrypted 3 Source
	SourceType *int64 `json:"SourceType,omitnil,omitempty" name:"SourceType"`

	// Upload platform 1- TCMPP 2 WeChat 3. TCMPP + WeChat
	ReleaseChannel *int64 `json:"ReleaseChannel,omitnil,omitempty" name:"ReleaseChannel"`
}

func (r *CreateConsoleMNPVersionCompileTaskRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateConsoleMNPVersionCompileTaskRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "MNPVersion")
	delete(f, "FileUrl")
	delete(f, "FileInnerUrl")
	delete(f, "PlatformId")
	delete(f, "TaskType")
	delete(f, "MNPVersionIntro")
	delete(f, "MNPVersionDesc")
	delete(f, "SourceType")
	delete(f, "ReleaseChannel")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateConsoleMNPVersionCompileTaskRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateConsoleMNPVersionCompileTaskResponseParams struct {
	// Response data
	Data *CreateMNPVersionCompileTaskResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateConsoleMNPVersionCompileTaskResponse struct {
	*tchttp.BaseResponse
	Response *CreateConsoleMNPVersionCompileTaskResponseParams `json:"Response"`
}

func (r *CreateConsoleMNPVersionCompileTaskResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateConsoleMNPVersionCompileTaskResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type CreateDomainParam struct {
	// Array of domain name URLs
	DomainUrlList []*string `json:"DomainUrlList,omitnil,omitempty" name:"DomainUrlList"`

	// Domain type. 1: requests domain; 2: WebView load domain, 3: sockets domain; 4: File upload; 5: File download
	DomainType *int64 `json:"DomainType,omitnil,omitempty" name:"DomainType"`
}

// Predefined struct for user
type CreateDomainRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Domain name list
	Domain []*CreateDomainParam `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreateDomainRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Domain name list
	Domain []*CreateDomainParam `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreateDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "Domain")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateDomainResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateDomainResponse struct {
	*tchttp.BaseResponse
	Response *CreateDomainResponseParams `json:"Response"`
}

func (r *CreateDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateGlobalDomainACLRequestParams struct {
	// Domain name list
	DomainUrlList []*string `json:"DomainUrlList,omitnil,omitempty" name:"DomainUrlList"`

	// Domain type. 1: Allowed; 2: Blocked
	DomainType *int64 `json:"DomainType,omitnil,omitempty" name:"DomainType"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreateGlobalDomainACLRequest struct {
	*tchttp.BaseRequest
	
	// Domain name list
	DomainUrlList []*string `json:"DomainUrlList,omitnil,omitempty" name:"DomainUrlList"`

	// Domain type. 1: Allowed; 2: Blocked
	DomainType *int64 `json:"DomainType,omitnil,omitempty" name:"DomainType"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreateGlobalDomainACLRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateGlobalDomainACLRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "DomainUrlList")
	delete(f, "DomainType")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateGlobalDomainACLRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateGlobalDomainACLResponseParams struct {
	// Response data
	Data *CreateGlobalDomainResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateGlobalDomainACLResponse struct {
	*tchttp.BaseResponse
	Response *CreateGlobalDomainACLResponseParams `json:"Response"`
}

func (r *CreateGlobalDomainACLResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateGlobalDomainACLResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateGlobalDomainRequestParams struct {
	// Domain name list
	DomainUrlList []*string `json:"DomainUrlList,omitnil,omitempty" name:"DomainUrlList"`

	// Domain type. 1: Allowed; 2: Blocked
	DomainType *int64 `json:"DomainType,omitnil,omitempty" name:"DomainType"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreateGlobalDomainRequest struct {
	*tchttp.BaseRequest
	
	// Domain name list
	DomainUrlList []*string `json:"DomainUrlList,omitnil,omitempty" name:"DomainUrlList"`

	// Domain type. 1: Allowed; 2: Blocked
	DomainType *int64 `json:"DomainType,omitnil,omitempty" name:"DomainType"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreateGlobalDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateGlobalDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "DomainUrlList")
	delete(f, "DomainType")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateGlobalDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type CreateGlobalDomainResp struct {
	// Result
	// Note: This field may return null, indicating that no valid values can be obtained.
	Result *bool `json:"Result,omitnil,omitempty" name:"Result"`

	// List of duplicate domain names
	// Note: This field may return null, indicating that no valid values can be obtained.
	RepeatUrls []*string `json:"RepeatUrls,omitnil,omitempty" name:"RepeatUrls"`

	// List of allowed domain names
	// Note: This field may return null, indicating that no valid values can be obtained.
	ExistsWhiteUrls []*string `json:"ExistsWhiteUrls,omitnil,omitempty" name:"ExistsWhiteUrls"`

	// List of blocked domain names
	// Note: This field may return null, indicating that no valid values can be obtained.
	ExistsBlackUrls []*string `json:"ExistsBlackUrls,omitnil,omitempty" name:"ExistsBlackUrls"`
}

// Predefined struct for user
type CreateGlobalDomainResponseParams struct {
	// Response data
	Data *CreateGlobalDomainResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateGlobalDomainResponse struct {
	*tchttp.BaseResponse
	Response *CreateGlobalDomainResponseParams `json:"Response"`
}

func (r *CreateGlobalDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateGlobalDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateMNPApprovalRequestParams struct {
	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// submit: Submit an approval request; cancel: Cancel the approval request
	ApplyAction *string `json:"ApplyAction,omitnil,omitempty" name:"ApplyAction"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreateMNPApprovalRequest struct {
	*tchttp.BaseRequest
	
	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// submit: Submit an approval request; cancel: Cancel the approval request
	ApplyAction *string `json:"ApplyAction,omitnil,omitempty" name:"ApplyAction"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreateMNPApprovalRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateMNPApprovalRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPVersionId")
	delete(f, "ApplyAction")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateMNPApprovalRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateMNPApprovalResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateMNPApprovalResponse struct {
	*tchttp.BaseResponse
	Response *CreateMNPApprovalResponseParams `json:"Response"`
}

func (r *CreateMNPApprovalResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateMNPApprovalResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateMNPDomainACLRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Domain name list
	Domain []*CreateDomainParam `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreateMNPDomainACLRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Domain name list
	Domain []*CreateDomainParam `json:"Domain,omitnil,omitempty" name:"Domain"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreateMNPDomainACLRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateMNPDomainACLRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "Domain")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateMNPDomainACLRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateMNPDomainACLResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateMNPDomainACLResponse struct {
	*tchttp.BaseResponse
	Response *CreateMNPDomainACLResponseParams `json:"Response"`
}

func (r *CreateMNPDomainACLResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateMNPDomainACLResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateMNPRequestParams struct {
	// Mini program type
	MNPType *string `json:"MNPType,omitnil,omitempty" name:"MNPType"`

	// Mini program name
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini app icon
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`

	// Mini program introduction
	MNPIntro *string `json:"MNPIntro,omitnil,omitempty" name:"MNPIntro"`

	// Mini program description
	MNPDesc *string `json:"MNPDesc,omitnil,omitempty" name:"MNPDesc"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

type CreateMNPRequest struct {
	*tchttp.BaseRequest
	
	// Mini program type
	MNPType *string `json:"MNPType,omitnil,omitempty" name:"MNPType"`

	// Mini program name
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini app icon
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`

	// Mini program introduction
	MNPIntro *string `json:"MNPIntro,omitnil,omitempty" name:"MNPIntro"`

	// Mini program description
	MNPDesc *string `json:"MNPDesc,omitnil,omitempty" name:"MNPDesc"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

func (r *CreateMNPRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateMNPRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPType")
	delete(f, "MNPName")
	delete(f, "MNPIcon")
	delete(f, "MNPIntro")
	delete(f, "MNPDesc")
	delete(f, "PlatformId")
	delete(f, "TeamId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateMNPRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateMNPResponseParams struct {
	// Response data
	Data *ResourceIdStringInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateMNPResponse struct {
	*tchttp.BaseResponse
	Response *CreateMNPResponseParams `json:"Response"`
}

func (r *CreateMNPResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateMNPResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateMNPSensitiveAPIPermissionApprovalRequestParams struct {
	// API Id
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`

	// Reason for application
	ApplyReason *string `json:"ApplyReason,omitnil,omitempty" name:"ApplyReason"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreateMNPSensitiveAPIPermissionApprovalRequest struct {
	*tchttp.BaseRequest
	
	// API Id
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`

	// Reason for application
	ApplyReason *string `json:"ApplyReason,omitnil,omitempty" name:"ApplyReason"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreateMNPSensitiveAPIPermissionApprovalRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateMNPSensitiveAPIPermissionApprovalRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "APIId")
	delete(f, "ApplyReason")
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateMNPSensitiveAPIPermissionApprovalRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateMNPSensitiveAPIPermissionApprovalResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *ResourceIdStringInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateMNPSensitiveAPIPermissionApprovalResponse struct {
	*tchttp.BaseResponse
	Response *CreateMNPSensitiveAPIPermissionApprovalResponseParams `json:"Response"`
}

func (r *CreateMNPSensitiveAPIPermissionApprovalResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateMNPSensitiveAPIPermissionApprovalResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type CreateMNPVersionCompileTaskResp struct {
	// Task ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// WS address
	// Note: This field may return null, indicating that no valid values can be obtained.
	WSUrl *string `json:"WSUrl,omitnil,omitempty" name:"WSUrl"`

	// Room ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	RoomId *string `json:"RoomId,omitnil,omitempty" name:"RoomId"`
}

// Predefined struct for user
type CreateMNPVersionRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Version number
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`

	// Address of the mini program package. You can export the package from IDE and upload it to a file server. 
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Version introduction
	MNPVersionIntro *string `json:"MNPVersionIntro,omitnil,omitempty" name:"MNPVersionIntro"`
}

type CreateMNPVersionRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Version number
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`

	// Address of the mini program package. You can export the package from IDE and upload it to a file server. 
	FileUrl *string `json:"FileUrl,omitnil,omitempty" name:"FileUrl"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Version introduction
	MNPVersionIntro *string `json:"MNPVersionIntro,omitnil,omitempty" name:"MNPVersionIntro"`
}

func (r *CreateMNPVersionRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateMNPVersionRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "MNPVersion")
	delete(f, "FileUrl")
	delete(f, "PlatformId")
	delete(f, "MNPVersionIntro")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateMNPVersionRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type CreateMNPVersionResp struct {
	// ID of the task to create a mini program version
	// Note: This field may return null, indicating that no valid values can be obtained.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`
}

// Predefined struct for user
type CreateMNPVersionResponseParams struct {
	// Response data
	Data *CreateMNPVersionResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateMNPVersionResponse struct {
	*tchttp.BaseResponse
	Response *CreateMNPVersionResponseParams `json:"Response"`
}

func (r *CreateMNPVersionResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateMNPVersionResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateOnlineApplyRequestParams struct {
	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreateOnlineApplyRequest struct {
	*tchttp.BaseRequest
	
	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreateOnlineApplyRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateOnlineApplyRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPVersionId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateOnlineApplyRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateOnlineApplyResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateOnlineApplyResponse struct {
	*tchttp.BaseResponse
	Response *CreateOnlineApplyResponseParams `json:"Response"`
}

func (r *CreateOnlineApplyResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateOnlineApplyResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreatePlatformAuditRequestParams struct {
	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// submit - submit the review ticket, cancel - cancel the review ticket
	ApplyAction *string `json:"ApplyAction,omitnil,omitempty" name:"ApplyAction"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreatePlatformAuditRequest struct {
	*tchttp.BaseRequest
	
	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// submit - submit the review ticket, cancel - cancel the review ticket
	ApplyAction *string `json:"ApplyAction,omitnil,omitempty" name:"ApplyAction"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreatePlatformAuditRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreatePlatformAuditRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPVersionId")
	delete(f, "ApplyAction")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreatePlatformAuditRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreatePlatformAuditResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreatePlatformAuditResponse struct {
	*tchttp.BaseResponse
	Response *CreatePlatformAuditResponseParams `json:"Response"`
}

func (r *CreatePlatformAuditResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreatePlatformAuditResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreatePresetKeyRequestParams struct {

}

type CreatePresetKeyRequest struct {
	*tchttp.BaseRequest
	
}

func (r *CreatePresetKeyRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreatePresetKeyRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreatePresetKeyRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreatePresetKeyResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *PresetResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreatePresetKeyResponse struct {
	*tchttp.BaseResponse
	Response *CreatePresetKeyResponseParams `json:"Response"`
}

func (r *CreatePresetKeyResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreatePresetKeyResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type CreateSensitiveAPIReq struct {
	// API name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApiName *string `json:"ApiName,omitnil,omitempty" name:"ApiName"`

	// API description
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApiDesc *string `json:"ApiDesc,omitnil,omitempty" name:"ApiDesc"`

	// API type 1-System API 2-Custom API
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApiType *int64 `json:"ApiType,omitnil,omitempty" name:"ApiType"`
}

// Predefined struct for user
type CreateSensitiveAPIRequestParams struct {
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// New API list
	ApiList []*CreateSensitiveAPIReq `json:"ApiList,omitnil,omitempty" name:"ApiList"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreateSensitiveAPIRequest struct {
	*tchttp.BaseRequest
	
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// New API list
	ApiList []*CreateSensitiveAPIReq `json:"ApiList,omitnil,omitempty" name:"ApiList"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreateSensitiveAPIRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateSensitiveAPIRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApplicationId")
	delete(f, "ApiList")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateSensitiveAPIRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateSensitiveAPIResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateSensitiveAPIResponse struct {
	*tchttp.BaseResponse
	Response *CreateSensitiveAPIResponseParams `json:"Response"`
}

func (r *CreateSensitiveAPIResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateSensitiveAPIResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateSensitiveApiApplyRequestParams struct {
	// Application ID
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`

	// Reason for application
	ApplyReason *string `json:"ApplyReason,omitnil,omitempty" name:"ApplyReason"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreateSensitiveApiApplyRequest struct {
	*tchttp.BaseRequest
	
	// Application ID
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`

	// Reason for application
	ApplyReason *string `json:"ApplyReason,omitnil,omitempty" name:"ApplyReason"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreateSensitiveApiApplyRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateSensitiveApiApplyRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "APIId")
	delete(f, "ApplyReason")
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateSensitiveApiApplyRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateSensitiveApiApplyResponseParams struct {
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *ResourceIdStringInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateSensitiveApiApplyResponse struct {
	*tchttp.BaseResponse
	Response *CreateSensitiveApiApplyResponseParams `json:"Response"`
}

func (r *CreateSensitiveApiApplyResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateSensitiveApiApplyResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type CreateTeamMemberInfoReq struct {
	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// User role ID
	UserRoleId *int64 `json:"UserRoleId,omitnil,omitempty" name:"UserRoleId"`
}

type CreateTeamMemberInfoResp struct {
	// User ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`
}

// Predefined struct for user
type CreateTeamMemberRequestParams struct {
	// Username
	UserName *string `json:"UserName,omitnil,omitempty" name:"UserName"`

	// User account
	UserAccount *string `json:"UserAccount,omitnil,omitempty" name:"UserAccount"`

	// Account password. Use CreatePresetKey to get publick key to encrypt the password.
	UserPassword *string `json:"UserPassword,omitnil,omitempty" name:"UserPassword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team role
	RoleId *int64 `json:"RoleId,omitnil,omitempty" name:"RoleId"`

	// Call CreatePresetKey to get the keyID from RequestId
	KeyId *string `json:"KeyId,omitnil,omitempty" name:"KeyId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreateTeamMemberRequest struct {
	*tchttp.BaseRequest
	
	// Username
	UserName *string `json:"UserName,omitnil,omitempty" name:"UserName"`

	// User account
	UserAccount *string `json:"UserAccount,omitnil,omitempty" name:"UserAccount"`

	// Account password. Use CreatePresetKey to get publick key to encrypt the password.
	UserPassword *string `json:"UserPassword,omitnil,omitempty" name:"UserPassword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team role
	RoleId *int64 `json:"RoleId,omitnil,omitempty" name:"RoleId"`

	// Call CreatePresetKey to get the keyID from RequestId
	KeyId *string `json:"KeyId,omitnil,omitempty" name:"KeyId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreateTeamMemberRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateTeamMemberRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "UserName")
	delete(f, "UserAccount")
	delete(f, "UserPassword")
	delete(f, "TeamId")
	delete(f, "RoleId")
	delete(f, "KeyId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateTeamMemberRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateTeamMemberResponseParams struct {
	// Response data
	Data *CreateTeamMemberInfoResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateTeamMemberResponse struct {
	*tchttp.BaseResponse
	Response *CreateTeamMemberResponseParams `json:"Response"`
}

func (r *CreateTeamMemberResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateTeamMemberResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateTeamRequestParams struct {
	// Team name
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Administrator name
	AdminUserId *string `json:"AdminUserId,omitnil,omitempty" name:"AdminUserId"`

	// Permission assigned to the team. 1: Mini program; 2: Application (only one of these types is supported)
	TeamRoleTypeList []*int64 `json:"TeamRoleTypeList,omitnil,omitempty" name:"TeamRoleTypeList"`

	// Remarks
	Remark *string `json:"Remark,omitnil,omitempty" name:"Remark"`

	// Platform ID, required for API call
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Associated team ID
	RelatedTeamId *string `json:"RelatedTeamId,omitnil,omitempty" name:"RelatedTeamId"`
}

type CreateTeamRequest struct {
	*tchttp.BaseRequest
	
	// Team name
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Administrator name
	AdminUserId *string `json:"AdminUserId,omitnil,omitempty" name:"AdminUserId"`

	// Permission assigned to the team. 1: Mini program; 2: Application (only one of these types is supported)
	TeamRoleTypeList []*int64 `json:"TeamRoleTypeList,omitnil,omitempty" name:"TeamRoleTypeList"`

	// Remarks
	Remark *string `json:"Remark,omitnil,omitempty" name:"Remark"`

	// Platform ID, required for API call
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Associated team ID
	RelatedTeamId *string `json:"RelatedTeamId,omitnil,omitempty" name:"RelatedTeamId"`
}

func (r *CreateTeamRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateTeamRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "TeamName")
	delete(f, "AdminUserId")
	delete(f, "TeamRoleTypeList")
	delete(f, "Remark")
	delete(f, "PlatformId")
	delete(f, "RelatedTeamId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateTeamRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateTeamResponseParams struct {
	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateTeamResponse struct {
	*tchttp.BaseResponse
	Response *CreateTeamResponseParams `json:"Response"`
}

func (r *CreateTeamResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateTeamResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateUserRequestParams struct {
	// User account
	UserAccount *string `json:"UserAccount,omitnil,omitempty" name:"UserAccount"`

	// User name
	UserName *string `json:"UserName,omitnil,omitempty" name:"UserName"`

	// User account type. 2: Platform administrator; 3: Ordinary member. 
	AccountType *int64 `json:"AccountType,omitnil,omitempty" name:"AccountType"`

	// Account password. Use CreatePresetKey to get the public key to encrypt the password.
	Password *string `json:"Password,omitnil,omitempty" name:"Password"`

	// Call CreatePresetKey to get the keyID from RequestId
	KeyId *string `json:"KeyId,omitnil,omitempty" name:"KeyId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type CreateUserRequest struct {
	*tchttp.BaseRequest
	
	// User account
	UserAccount *string `json:"UserAccount,omitnil,omitempty" name:"UserAccount"`

	// User name
	UserName *string `json:"UserName,omitnil,omitempty" name:"UserName"`

	// User account type. 2: Platform administrator; 3: Ordinary member. 
	AccountType *int64 `json:"AccountType,omitnil,omitempty" name:"AccountType"`

	// Account password. Use CreatePresetKey to get the public key to encrypt the password.
	Password *string `json:"Password,omitnil,omitempty" name:"Password"`

	// Call CreatePresetKey to get the keyID from RequestId
	KeyId *string `json:"KeyId,omitnil,omitempty" name:"KeyId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *CreateUserRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateUserRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "UserAccount")
	delete(f, "UserName")
	delete(f, "AccountType")
	delete(f, "Password")
	delete(f, "KeyId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "CreateUserRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type CreateUserResponseParams struct {
	// Response data, user ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *ResourceIdStringInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type CreateUserResponse struct {
	*tchttp.BaseResponse
	Response *CreateUserResponseParams `json:"Response"`
}

func (r *CreateUserResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *CreateUserResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteApplicationRequestParams struct {
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DeleteApplicationRequest struct {
	*tchttp.BaseRequest
	
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DeleteApplicationRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteApplicationRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApplicationId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteApplicationRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteApplicationResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteApplicationResponse struct {
	*tchttp.BaseResponse
	Response *DeleteApplicationResponseParams `json:"Response"`
}

func (r *DeleteApplicationResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteApplicationResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteApplicationSensitiveAPIRequestParams struct {
	// API ID
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DeleteApplicationSensitiveAPIRequest struct {
	*tchttp.BaseRequest
	
	// API ID
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DeleteApplicationSensitiveAPIRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteApplicationSensitiveAPIRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "APIId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteApplicationSensitiveAPIRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteApplicationSensitiveAPIResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteApplicationSensitiveAPIResponse struct {
	*tchttp.BaseResponse
	Response *DeleteApplicationSensitiveAPIResponseParams `json:"Response"`
}

func (r *DeleteApplicationSensitiveAPIResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteApplicationSensitiveAPIResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteGlobalDomainRequestParams struct {
	// Domain ID
	DomainId *int64 `json:"DomainId,omitnil,omitempty" name:"DomainId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DeleteGlobalDomainRequest struct {
	*tchttp.BaseRequest
	
	// Domain ID
	DomainId *int64 `json:"DomainId,omitnil,omitempty" name:"DomainId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DeleteGlobalDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteGlobalDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "DomainId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteGlobalDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteGlobalDomainResponseParams struct {
	// Response data
	Data *GlobalDomainDeleteResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteGlobalDomainResponse struct {
	*tchttp.BaseResponse
	Response *DeleteGlobalDomainResponseParams `json:"Response"`
}

func (r *DeleteGlobalDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteGlobalDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteMNPRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DeleteMNPRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DeleteMNPRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteMNPRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteMNPRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteMNPResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteMNPResponse struct {
	*tchttp.BaseResponse
	Response *DeleteMNPResponseParams `json:"Response"`
}

func (r *DeleteMNPResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteMNPResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteSensitiveAPIRequestParams struct {
	// API ID
	ApiId *string `json:"ApiId,omitnil,omitempty" name:"ApiId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DeleteSensitiveAPIRequest struct {
	*tchttp.BaseRequest
	
	// API ID
	ApiId *string `json:"ApiId,omitnil,omitempty" name:"ApiId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DeleteSensitiveAPIRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteSensitiveAPIRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApiId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteSensitiveAPIRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteSensitiveAPIResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteSensitiveAPIResponse struct {
	*tchttp.BaseResponse
	Response *DeleteSensitiveAPIResponseParams `json:"Response"`
}

func (r *DeleteSensitiveAPIResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteSensitiveAPIResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteTeamMemberRequestParams struct {
	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DeleteTeamMemberRequest struct {
	*tchttp.BaseRequest
	
	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DeleteTeamMemberRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteTeamMemberRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "TeamId")
	delete(f, "UserId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteTeamMemberRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteTeamMemberResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteTeamMemberResponse struct {
	*tchttp.BaseResponse
	Response *DeleteTeamMemberResponseParams `json:"Response"`
}

func (r *DeleteTeamMemberResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteTeamMemberResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteTeamRequestParams struct {
	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DeleteTeamRequest struct {
	*tchttp.BaseRequest
	
	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DeleteTeamRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteTeamRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "TeamId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteTeamRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteTeamResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteTeamResponse struct {
	*tchttp.BaseResponse
	Response *DeleteTeamResponseParams `json:"Response"`
}

func (r *DeleteTeamResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteTeamResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteUserRequestParams struct {
	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DeleteUserRequest struct {
	*tchttp.BaseRequest
	
	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DeleteUserRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteUserRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "UserId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DeleteUserRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DeleteUserResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DeleteUserResponse struct {
	*tchttp.BaseResponse
	Response *DeleteUserResponseParams `json:"Response"`
}

func (r *DeleteUserResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DeleteUserResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeApplicationConfigFileRequestParams struct {
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Application platform. 2: Android; 3: iOS
	AppType *int64 `json:"AppType,omitnil,omitempty" name:"AppType"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeApplicationConfigFileRequest struct {
	*tchttp.BaseRequest
	
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Application platform. 2: Android; 3: iOS
	AppType *int64 `json:"AppType,omitnil,omitempty" name:"AppType"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeApplicationConfigFileRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeApplicationConfigFileRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApplicationId")
	delete(f, "AppType")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeApplicationConfigFileRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeApplicationConfigFileResponseParams struct {
	// Response data
	Data *DownloadApplicationConfigResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeApplicationConfigFileResponse struct {
	*tchttp.BaseResponse
	Response *DescribeApplicationConfigFileResponseParams `json:"Response"`
}

func (r *DescribeApplicationConfigFileResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeApplicationConfigFileResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeApplicationConfigRequestParams struct {
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Application platform. 2: Android; 3: iOS
	AppType *int64 `json:"AppType,omitnil,omitempty" name:"AppType"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeApplicationConfigRequest struct {
	*tchttp.BaseRequest
	
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Application platform. 2: Android; 3: iOS
	AppType *int64 `json:"AppType,omitnil,omitempty" name:"AppType"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeApplicationConfigRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeApplicationConfigRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApplicationId")
	delete(f, "AppType")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeApplicationConfigRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeApplicationConfigResponseParams struct {
	// Response data
	Data *DownloadApplicationConfigResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeApplicationConfigResponse struct {
	*tchttp.BaseResponse
	Response *DescribeApplicationConfigResponseParams `json:"Response"`
}

func (r *DescribeApplicationConfigResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeApplicationConfigResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeApplicationListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Keywords for search (app name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

type DescribeApplicationListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Keywords for search (app name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

func (r *DescribeApplicationListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeApplicationListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "Keyword")
	delete(f, "TeamId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeApplicationListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeApplicationListResponseParams struct {
	// Response data
	Data *ApplicationPageInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeApplicationListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeApplicationListResponseParams `json:"Response"`
}

func (r *DescribeApplicationListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeApplicationListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeApplicationMNPVersionAuditListInfoResp struct {
	// Approval ticket ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	AuditNo *string `json:"AuditNo,omitnil,omitempty" name:"AuditNo"`

	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Approval status : 1: Processing; 2: Rejected; 3: Approved; 4: Cancelled
	// Note: This field may return null, indicating that no valid values can be obtained.
	AuditStatus *int64 `json:"AuditStatus,omitnil,omitempty" name:"AuditStatus"`

	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program version
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`

	// Mini program version ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Applicant
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplyUser *string `json:"ApplyUser,omitnil,omitempty" name:"ApplyUser"`

	// Application time
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplyTime *string `json:"ApplyTime,omitnil,omitempty" name:"ApplyTime"`

	// Mini program name
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini program icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`

	// Application name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// Application icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationLogo *string `json:"ApplicationLogo,omitnil,omitempty" name:"ApplicationLogo"`

	// Team ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Android app download address
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationAndUrl *string `json:"ApplicationAndUrl,omitnil,omitempty" name:"ApplicationAndUrl"`

	// iOS app download address
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationIOSUrl *string `json:"ApplicationIOSUrl,omitnil,omitempty" name:"ApplicationIOSUrl"`

	// Mini Program QR code
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPQrCodeUrl *string `json:"MNPQrCodeUrl,omitnil,omitempty" name:"MNPQrCodeUrl"`

	// Mini program type
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPType *string `json:"MNPType,omitnil,omitempty" name:"MNPType"`

	// Approver
	// Note: This field may return null, indicating that no valid values can be obtained.
	AuditUser *string `json:"AuditUser,omitnil,omitempty" name:"AuditUser"`

	// Approval time
	// Note: This field may return null, indicating that no valid values can be obtained.
	AuditTime *string `json:"AuditTime,omitnil,omitempty" name:"AuditTime"`

	// Approval notes
	// Note: This field may return null, indicating that no valid values can be obtained.
	AuditNote *string `json:"AuditNote,omitnil,omitempty" name:"AuditNote"`

	// Scan result. 0: Scanning, 1: Healthy; 2: Unhealthy; 3: Task failed
	// Note: This field may return null, indicating that no valid values can be obtained.
	ScanStatus *int64 `json:"ScanStatus,omitnil,omitempty" name:"ScanStatus"`

	// Scan score
	// Note: This field may return null, indicating that no valid values can be obtained.
	ScanScore *int64 `json:"ScanScore,omitnil,omitempty" name:"ScanScore"`

	// Address scanned
	// Note: This field may return null, indicating that no valid values can be obtained.
	ScanHtmlPath *string `json:"ScanHtmlPath,omitnil,omitempty" name:"ScanHtmlPath"`
}

type DescribeApplicationMNPVersionAuditListPageResp struct {
	// Total number of results.
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeApplicationMNPVersionAuditListInfoResp `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeApplicationMNPVersionAuditListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval status 1 Processing 2 Rejected 3 Approved 4 Cancelled
	AuditStatusList []*int64 `json:"AuditStatusList,omitnil,omitempty" name:"AuditStatusList"`

	// Keyword
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

type DescribeApplicationMNPVersionAuditListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval status 1 Processing 2 Rejected 3 Approved 4 Cancelled
	AuditStatusList []*int64 `json:"AuditStatusList,omitnil,omitempty" name:"AuditStatusList"`

	// Keyword
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

func (r *DescribeApplicationMNPVersionAuditListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeApplicationMNPVersionAuditListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "AuditStatusList")
	delete(f, "Keyword")
	delete(f, "ApplicationId")
	delete(f, "TeamId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeApplicationMNPVersionAuditListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeApplicationMNPVersionAuditListResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeApplicationMNPVersionAuditListPageResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeApplicationMNPVersionAuditListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeApplicationMNPVersionAuditListResponseParams `json:"Response"`
}

func (r *DescribeApplicationMNPVersionAuditListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeApplicationMNPVersionAuditListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeApplicationRequestParams struct {
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeApplicationRequest struct {
	*tchttp.BaseRequest
	
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeApplicationRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeApplicationRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApplicationId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeApplicationRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeApplicationResponseParams struct {
	// Response data
	Data *ApplicationDetail `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeApplicationResponse struct {
	*tchttp.BaseResponse
	Response *DescribeApplicationResponseParams `json:"Response"`
}

func (r *DescribeApplicationResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeApplicationResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeApplicationSensitiveAPIListData struct {
	// APIID
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`

	// API name
	APIName *string `json:"APIName,omitnil,omitempty" name:"APIName"`

	// API request method
	APIMethod *string `json:"APIMethod,omitnil,omitempty" name:"APIMethod"`

	// API description
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIDesc *string `json:"APIDesc,omitnil,omitempty" name:"APIDesc"`

	// Creator
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// Creation time
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Updater
	UpdateUser *string `json:"UpdateUser,omitnil,omitempty" name:"UpdateUser"`

	// Update time
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Application name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// Team ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Application icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationLogo *string `json:"ApplicationLogo,omitnil,omitempty" name:"ApplicationLogo"`

	// API type. 1: System; 2: Custom
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIType *int64 `json:"APIType,omitnil,omitempty" name:"APIType"`

	// API status. 0: Public; 1: Restricted
	// Note: This field may return null, indicating that no valid values can be obtained.
	Status *int64 `json:"Status,omitnil,omitempty" name:"Status"`
}

// Predefined struct for user
type DescribeApplicationSensitiveAPIListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Keywords for search (API name or method)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

type DescribeApplicationSensitiveAPIListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Keywords for search (API name or method)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

func (r *DescribeApplicationSensitiveAPIListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeApplicationSensitiveAPIListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "ApplicationId")
	delete(f, "Keyword")
	delete(f, "TeamId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeApplicationSensitiveAPIListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeApplicationSensitiveAPIListResp struct {
	// Total number of entries
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeApplicationSensitiveAPIListData `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeApplicationSensitiveAPIListResponseParams struct {
	// Response data
	Data *DescribeApplicationSensitiveAPIListResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeApplicationSensitiveAPIListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeApplicationSensitiveAPIListResponseParams `json:"Response"`
}

func (r *DescribeApplicationSensitiveAPIListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeApplicationSensitiveAPIListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeConsoleMNPVersionCompileTaskRequestParams struct {
	// Task ID
	BusinessId *string `json:"BusinessId,omitnil,omitempty" name:"BusinessId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeConsoleMNPVersionCompileTaskRequest struct {
	*tchttp.BaseRequest
	
	// Task ID
	BusinessId *string `json:"BusinessId,omitnil,omitempty" name:"BusinessId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeConsoleMNPVersionCompileTaskRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeConsoleMNPVersionCompileTaskRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "BusinessId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeConsoleMNPVersionCompileTaskRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeConsoleMNPVersionCompileTaskResponseParams struct {
	// Response
	Data *DescribeMNPVersionCompileTaskResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeConsoleMNPVersionCompileTaskResponse struct {
	*tchttp.BaseResponse
	Response *DescribeConsoleMNPVersionCompileTaskResponseParams `json:"Response"`
}

func (r *DescribeConsoleMNPVersionCompileTaskResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeConsoleMNPVersionCompileTaskResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeDomainInfoParam struct {
	// Multiple domain separators ';'
	// Note: This field may return null, indicating that no valid values can be obtained.
	DomainUrl *string `json:"DomainUrl,omitnil,omitempty" name:"DomainUrl"`

	// Domain type 1-requests domain 2-WebView load domain
	// Note: This field may return null, indicating that no valid values can be obtained.
	DomainType *int64 `json:"DomainType,omitnil,omitempty" name:"DomainType"`
}

// Predefined struct for user
type DescribeDomainInfoRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeDomainInfoRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeDomainInfoRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeDomainInfoRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeDomainInfoRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeDomainInfoResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data []*DescribeDomainInfoParam `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeDomainInfoResponse struct {
	*tchttp.BaseResponse
	Response *DescribeDomainInfoResponseParams `json:"Response"`
}

func (r *DescribeDomainInfoResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeDomainInfoResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeDomainTeamListInfoResp struct {
	// Team ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Creator
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// Creation time
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`
}

type DescribeDomainTeamListPageResp struct {
	// Total number of entries
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeDomainTeamListInfoResp `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeDomainTeamListRequestParams struct {
	// Pagination offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Query keywords (team name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

type DescribeDomainTeamListRequest struct {
	*tchttp.BaseRequest
	
	// Pagination offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Query keywords (team name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

func (r *DescribeDomainTeamListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeDomainTeamListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "Keyword")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeDomainTeamListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeDomainTeamListResponseParams struct {
	// Response data
	Data *DescribeDomainTeamListPageResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeDomainTeamListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeDomainTeamListResponseParams `json:"Response"`
}

func (r *DescribeDomainTeamListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeDomainTeamListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeGlobalDomainACLRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Domain type. 1: Allowed; 2: Blocked
	DomainTypes []*int64 `json:"DomainTypes,omitnil,omitempty" name:"DomainTypes"`

	// Domain names to be queried.
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

type DescribeGlobalDomainACLRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Domain type. 1: Allowed; 2: Blocked
	DomainTypes []*int64 `json:"DomainTypes,omitnil,omitempty" name:"DomainTypes"`

	// Domain names to be queried.
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

func (r *DescribeGlobalDomainACLRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeGlobalDomainACLRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "DomainTypes")
	delete(f, "Keyword")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeGlobalDomainACLRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeGlobalDomainACLResponseParams struct {
	// Response data
	Data *DescribeGlobalDomainsResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeGlobalDomainACLResponse struct {
	*tchttp.BaseResponse
	Response *DescribeGlobalDomainACLResponseParams `json:"Response"`
}

func (r *DescribeGlobalDomainACLResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeGlobalDomainACLResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeGlobalDomainListRequestParams struct {
	// Pagination offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Domain type. 1: Allowed; 2: Blocked
	DomainTypes []*int64 `json:"DomainTypes,omitnil,omitempty" name:"DomainTypes"`

	// Domain names to be queried.
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

type DescribeGlobalDomainListRequest struct {
	*tchttp.BaseRequest
	
	// Pagination offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Domain type. 1: Allowed; 2: Blocked
	DomainTypes []*int64 `json:"DomainTypes,omitnil,omitempty" name:"DomainTypes"`

	// Domain names to be queried.
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

func (r *DescribeGlobalDomainListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeGlobalDomainListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "DomainTypes")
	delete(f, "Keyword")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeGlobalDomainListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeGlobalDomainListResponseParams struct {
	// Response data
	Data *GlobalDomainDescribeListPageResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeGlobalDomainListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeGlobalDomainListResponseParams `json:"Response"`
}

func (r *DescribeGlobalDomainListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeGlobalDomainListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeGlobalDomainsListData struct {
	// Domain ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	DomainId *int64 `json:"DomainId,omitnil,omitempty" name:"DomainId"`

	// Domain name
	// Note: This field may return null, indicating that no valid values can be obtained.
	DomainUrl *string `json:"DomainUrl,omitnil,omitempty" name:"DomainUrl"`

	// Type. 1: Allowed; 2: Blocked
	// Note: This field may return null, indicating that no valid values can be obtained.
	DomainType *int64 `json:"DomainType,omitnil,omitempty" name:"DomainType"`

	// Creator
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// Creation time
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Updater
	// Note: This field may return null, indicating that no valid values can be obtained.
	UpdateUser *string `json:"UpdateUser,omitnil,omitempty" name:"UpdateUser"`

	// Update time
	// Note: This field may return null, indicating that no valid values can be obtained.
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

type DescribeGlobalDomainsResp struct {
	// Total number of results
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Domain name information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeGlobalDomainsListData `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeMNPAllStageVersionsRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPAllStageVersionsRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPAllStageVersionsRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPAllStageVersionsRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPAllStageVersionsRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPAllStageVersionsResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data []*DescribeMPAllStageVersionsResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPAllStageVersionsResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPAllStageVersionsResponseParams `json:"Response"`
}

func (r *DescribeMNPAllStageVersionsResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPAllStageVersionsResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPApprovalListData struct {
	// Approval request ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApprovalNo *string `json:"ApprovalNo,omitnil,omitempty" name:"ApprovalNo"`

	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Approval status : 1: Processing; 2: Rejected; 3: Approved; 4: Cancelled
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApprovalStatus *int64 `json:"ApprovalStatus,omitnil,omitempty" name:"ApprovalStatus"`

	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program version
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`

	// Mini program version ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Applicant
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplyUser *string `json:"ApplyUser,omitnil,omitempty" name:"ApplyUser"`

	// Application time
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplyTime *string `json:"ApplyTime,omitnil,omitempty" name:"ApplyTime"`

	// Mini program name
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini program icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`

	// Application name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// Application icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationLogo *string `json:"ApplicationLogo,omitnil,omitempty" name:"ApplicationLogo"`

	// Team ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Mini Program QR code
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPQrCodeUrl *string `json:"MNPQrCodeUrl,omitnil,omitempty" name:"MNPQrCodeUrl"`

	// Mini program type
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPType *string `json:"MNPType,omitnil,omitempty" name:"MNPType"`

	// Approver
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApprovalUser *string `json:"ApprovalUser,omitnil,omitempty" name:"ApprovalUser"`

	// Approval time
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApprovalTime *string `json:"ApprovalTime,omitnil,omitempty" name:"ApprovalTime"`

	// Approval notes
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApprovalNote *string `json:"ApprovalNote,omitnil,omitempty" name:"ApprovalNote"`
}

// Predefined struct for user
type DescribeMNPApprovalListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval status. 1: Processing; 2: Rejected; 3: Approved; 4 Cancelled
	ApprovalStatusList []*int64 `json:"ApprovalStatusList,omitnil,omitempty" name:"ApprovalStatusList"`

	// Keywords of the mini program name to search
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

type DescribeMNPApprovalListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval status. 1: Processing; 2: Rejected; 3: Approved; 4 Cancelled
	ApprovalStatusList []*int64 `json:"ApprovalStatusList,omitnil,omitempty" name:"ApprovalStatusList"`

	// Keywords of the mini program name to search
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

func (r *DescribeMNPApprovalListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPApprovalListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "ApprovalStatusList")
	delete(f, "Keyword")
	delete(f, "ApplicationId")
	delete(f, "TeamId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPApprovalListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPApprovalListResp struct {
	// Total number of entries
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeMNPApprovalListData `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeMNPApprovalListResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeMNPApprovalListResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPApprovalListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPApprovalListResponseParams `json:"Response"`
}

func (r *DescribeMNPApprovalListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPApprovalListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPBoardRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPBoardRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPBoardRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPBoardRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPBoardRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPBoardResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data []*VersionBoardResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPBoardResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPBoardResponseParams `json:"Response"`
}

func (r *DescribeMNPBoardResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPBoardResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPCategoryRequestParams struct {
	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPCategoryRequest struct {
	*tchttp.BaseRequest
	
	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPCategoryRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPCategoryRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPCategoryRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPCategoryResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data []*MNPTypeDefine `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPCategoryResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPCategoryResponseParams `json:"Response"`
}

func (r *DescribeMNPCategoryResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPCategoryResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPDetailRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPDetailRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPDetailRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPDetailRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPDetailRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPDetailResponseParams struct {
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *MNPDetail `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPDetailResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPDetailResponseParams `json:"Response"`
}

func (r *DescribeMNPDetailResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPDetailResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPDomainACLRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPDomainACLRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPDomainACLRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPDomainACLRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPDomainACLRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPDomainACLResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data []*DescribeDomainInfoParam `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPDomainACLResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPDomainACLResponseParams `json:"Response"`
}

func (r *DescribeMNPDomainACLResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPDomainACLResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPListData struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program icon
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`

	// Mini program name
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Name of the associated team
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Mini program type
	MNPType *string `json:"MNPType,omitnil,omitempty" name:"MNPType"`

	// Whether the mini program is submitted to the application. 1: Submitted; 2: Removed
	// Note: This field may return null, indicating that no valid values can be obtained.
	Status *int64 `json:"Status,omitnil,omitempty" name:"Status"`

	// Mini program introduction
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIntro *string `json:"MNPIntro,omitnil,omitempty" name:"MNPIntro"`

	// Creator
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// Creation time
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Updater
	// Note: This field may return null, indicating that no valid values can be obtained.
	UpdateUser *string `json:"UpdateUser,omitnil,omitempty" name:"UpdateUser"`

	// Update time
	// Note: This field may return null, indicating that no valid values can be obtained.
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// Application name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// Effective status of the bound application. 1: Not effective; 2: Effective
	// Note: This field may return null, indicating that no valid values can be obtained.
	EffectStatus *int64 `json:"EffectStatus,omitnil,omitempty" name:"EffectStatus"`

	// ID of the application bound with the mini program
	// Note: This field may return null, indicating that no valid values can be obtained.
	EffectMNPVersionId *int64 `json:"EffectMNPVersionId,omitnil,omitempty" name:"EffectMNPVersionId"`

	// Effective version number of the application that bound with the mini program
	// Note: This field may return null, indicating that no valid values can be obtained.
	EffectMNPVersion *string `json:"EffectMNPVersion,omitnil,omitempty" name:"EffectMNPVersion"`
}

// Predefined struct for user
type DescribeMNPListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Keywords for search (mini program name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`
}

type DescribeMNPListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Keywords for search (mini program name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`
}

func (r *DescribeMNPListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "Keyword")
	delete(f, "TeamId")
	delete(f, "ApplicationId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPListResp struct {
	// Total number of entries
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeMNPListData `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeMNPListResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeMNPListResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPListResponseParams `json:"Response"`
}

func (r *DescribeMNPListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPManagerDetailData struct {
	// Mini program type 
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPType *string `json:"MNPType,omitnil,omitempty" name:"MNPType"`

	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program name
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini program icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`

	// Mini program introduction
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIntro *string `json:"MNPIntro,omitnil,omitempty" name:"MNPIntro"`

	// Mini program description
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPDesc *string `json:"MNPDesc,omitnil,omitempty" name:"MNPDesc"`

	// Timestamp of the creation time
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Creator
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// Connection status. 1: Not connected; 2: Connected
	// Note: This field may return null, indicating that no valid values can be obtained.
	AccessStatus *int64 `json:"AccessStatus,omitnil,omitempty" name:"AccessStatus"`

	// The name of the associated team
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Team ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Mini program release status. 1: Released; 2: Removed
	// Note: This field may return null, indicating that no valid values can be obtained.
	Status *int64 `json:"Status,omitnil,omitempty" name:"Status"`
}

// Predefined struct for user
type DescribeMNPManagerDetailRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPManagerDetailRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPManagerDetailRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPManagerDetailRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPManagerDetailRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPManagerDetailResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeMNPManagerDetailData `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPManagerDetailResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPManagerDetailResponseParams `json:"Response"`
}

func (r *DescribeMNPManagerDetailResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPManagerDetailResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPManagerListData struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program icon
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`

	// Mini program name
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Team name
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Access status 1-Not accessed 2-Accessed
	AccessStatus *int64 `json:"AccessStatus,omitnil,omitempty" name:"AccessStatus"`

	// Mini program release status. 1: Released; 2: Removed
	// Note: This field may return null, indicating that no valid values can be obtained.
	Status *int64 `json:"Status,omitnil,omitempty" name:"Status"`
}

// Predefined struct for user
type DescribeMNPManagerListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Keywords for search (mini program name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

type DescribeMNPManagerListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Keywords for search (mini program name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

func (r *DescribeMNPManagerListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPManagerListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "Keyword")
	delete(f, "TeamId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPManagerListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPManagerListResp struct {
	// Total number of entries
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeMNPManagerListData `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeMNPManagerListResponseParams struct {
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeMNPManagerListResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPManagerListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPManagerListResponseParams `json:"Response"`
}

func (r *DescribeMNPManagerListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPManagerListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPOfflinePackageURLRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPOfflinePackageURLRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPOfflinePackageURLRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPOfflinePackageURLRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPOfflinePackageURLRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPOfflinePackageURLResponseParams struct {
	// Response data
	Data *StringData `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPOfflinePackageURLResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPOfflinePackageURLResponseParams `json:"Response"`
}

func (r *DescribeMNPOfflinePackageURLResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPOfflinePackageURLResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPPreviewRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPPreviewRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPPreviewRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPPreviewRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "MNPVersionId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPPreviewRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPPreviewResp struct {
	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program name
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini program description
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPDesc *string `json:"MNPDesc,omitnil,omitempty" name:"MNPDesc"`

	// Mini program version
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`

	// Mini program introduction
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersionIntro *string `json:"MNPVersionIntro,omitnil,omitempty" name:"MNPVersionIntro"`

	// Mini program QR code
	// Note: This field may return null, indicating that no valid values can be obtained.
	QRCodeUrl *string `json:"QRCodeUrl,omitnil,omitempty" name:"QRCodeUrl"`

	// Path to the preview version
	// Note: This field may return null, indicating that no valid values can be obtained.
	PreviewEntrancePath *string `json:"PreviewEntrancePath,omitnil,omitempty" name:"PreviewEntrancePath"`
}

// Predefined struct for user
type DescribeMNPPreviewResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeMNPPreviewResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPPreviewResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPPreviewResponseParams `json:"Response"`
}

func (r *DescribeMNPPreviewResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPPreviewResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPPrivacyRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPPrivacyRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPPrivacyRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPPrivacyRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPPrivacyRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPPrivacyResponseParams struct {
	// Response data
	Data *string `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPPrivacyResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPPrivacyResponseParams `json:"Response"`
}

func (r *DescribeMNPPrivacyResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPPrivacyResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPReleasedVersionHistoryRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPReleasedVersionHistoryRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPReleasedVersionHistoryRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPReleasedVersionHistoryRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPReleasedVersionHistoryRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPReleasedVersionHistoryResponseParams struct {
	// Response data
	Data *DescribeRevertOnlineVersionPageResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPReleasedVersionHistoryResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPReleasedVersionHistoryResponseParams `json:"Response"`
}

func (r *DescribeMNPReleasedVersionHistoryResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPReleasedVersionHistoryResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeMNPManagerDetailData `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPResponseParams `json:"Response"`
}

func (r *DescribeMNPResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPSensitiveAPIPermissionApprovalData struct {
	// API ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`

	// API request method
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIMethod *string `json:"APIMethod,omitnil,omitempty" name:"APIMethod"`

	// Reason for the request
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplyReason *string `json:"ApplyReason,omitnil,omitempty" name:"ApplyReason"`

	// Reason for rejection
	// Note: This field may return null, indicating that no valid values can be obtained.
	RejectReason *string `json:"RejectReason,omitnil,omitempty" name:"RejectReason"`

	// Approval status. 20: Rejected; 30: Approved
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApprovalStatus *int64 `json:"ApprovalStatus,omitnil,omitempty" name:"ApprovalStatus"`

	// API feature description
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIDesc *string `json:"APIDesc,omitnil,omitempty" name:"APIDesc"`

	// API type. 1: System; 2: Custom
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIType *int64 `json:"APIType,omitnil,omitempty" name:"APIType"`
}

type DescribeMNPSensitiveAPIPermissionApprovalListData struct {
	// Approval ID
	ApprovalNo *string `json:"ApprovalNo,omitnil,omitempty" name:"ApprovalNo"`

	// Sensitive API ID
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`

	// API name
	APIName *string `json:"APIName,omitnil,omitempty" name:"APIName"`

	// API request method
	APIMethod *string `json:"APIMethod,omitnil,omitempty" name:"APIMethod"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program name
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Applicant
	ApplyUser *string `json:"ApplyUser,omitnil,omitempty" name:"ApplyUser"`

	// Application time
	ApplyTime *string `json:"ApplyTime,omitnil,omitempty" name:"ApplyTime"`

	// Application notes
	ApplyNote *string `json:"ApplyNote,omitnil,omitempty" name:"ApplyNote"`

	// Approval status. 1: Processing; 20: Rejected; 30: Approved
	ApprovalStatus *int64 `json:"ApprovalStatus,omitnil,omitempty" name:"ApprovalStatus"`

	// Approver
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApprovalUser *string `json:"ApprovalUser,omitnil,omitempty" name:"ApprovalUser"`

	// Approval time
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApprovalTime *string `json:"ApprovalTime,omitnil,omitempty" name:"ApprovalTime"`

	// Approval notes
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApprovalNote *string `json:"ApprovalNote,omitnil,omitempty" name:"ApprovalNote"`

	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Application name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// Application icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationLogo *string `json:"ApplicationLogo,omitnil,omitempty" name:"ApplicationLogo"`

	// API type. 1: System; 2: Custom
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIType *int64 `json:"APIType,omitnil,omitempty" name:"APIType"`

	// API feature description
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIDesc *string `json:"APIDesc,omitnil,omitempty" name:"APIDesc"`
}

// Predefined struct for user
type DescribeMNPSensitiveAPIPermissionApprovalListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval status. 1: Processing; 20: Rejected; 30: Approved
	ApprovalStatusList []*int64 `json:"ApprovalStatusList,omitnil,omitempty" name:"ApprovalStatusList"`

	// Keywords for search (API name, API method or application name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

type DescribeMNPSensitiveAPIPermissionApprovalListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval status. 1: Processing; 20: Rejected; 30: Approved
	ApprovalStatusList []*int64 `json:"ApprovalStatusList,omitnil,omitempty" name:"ApprovalStatusList"`

	// Keywords for search (API name, API method or application name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

func (r *DescribeMNPSensitiveAPIPermissionApprovalListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPSensitiveAPIPermissionApprovalListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "ApprovalStatusList")
	delete(f, "Keyword")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPSensitiveAPIPermissionApprovalListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPSensitiveAPIPermissionApprovalListResp struct {
	// Total number of entries
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	DataList []*DescribeMNPSensitiveAPIPermissionApprovalListData `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeMNPSensitiveAPIPermissionApprovalListResponseParams struct {
	// Response data
	Data *DescribeMNPSensitiveAPIPermissionApprovalListResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPSensitiveAPIPermissionApprovalListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPSensitiveAPIPermissionApprovalListResponseParams `json:"Response"`
}

func (r *DescribeMNPSensitiveAPIPermissionApprovalListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPSensitiveAPIPermissionApprovalListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPSensitiveAPIPermissionApprovalRequestParams struct {
	// Approval request number
	ApprovalNo *string `json:"ApprovalNo,omitnil,omitempty" name:"ApprovalNo"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPSensitiveAPIPermissionApprovalRequest struct {
	*tchttp.BaseRequest
	
	// Approval request number
	ApprovalNo *string `json:"ApprovalNo,omitnil,omitempty" name:"ApprovalNo"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPSensitiveAPIPermissionApprovalRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPSensitiveAPIPermissionApprovalRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApprovalNo")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPSensitiveAPIPermissionApprovalRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPSensitiveAPIPermissionApprovalResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeMNPSensitiveAPIPermissionApprovalData `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPSensitiveAPIPermissionApprovalResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPSensitiveAPIPermissionApprovalResponseParams `json:"Response"`
}

func (r *DescribeMNPSensitiveAPIPermissionApprovalResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPSensitiveAPIPermissionApprovalResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPSensitiveAPIPermissionListData struct {
	// API ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`

	// API name
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIName *string `json:"APIName,omitnil,omitempty" name:"APIName"`

	// API request method
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIMethod *string `json:"APIMethod,omitnil,omitempty" name:"APIMethod"`

	// API status
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIStatus *int64 `json:"APIStatus,omitnil,omitempty" name:"APIStatus"`

	// API application status
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIApplyStatus *int64 `json:"APIApplyStatus,omitnil,omitempty" name:"APIApplyStatus"`

	// Reason for rejection
	// Note: This field may return null, indicating that no valid values can be obtained.
	RejectReason *string `json:"RejectReason,omitnil,omitempty" name:"RejectReason"`

	// Approval ID
	ApprovalNo *string `json:"ApprovalNo,omitnil,omitempty" name:"ApprovalNo"`

	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Application icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationIcon *string `json:"ApplicationIcon,omitnil,omitempty" name:"ApplicationIcon"`

	// Application name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// API type. 1: System; 2: Custom
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIType *int64 `json:"APIType,omitnil,omitempty" name:"APIType"`

	// API feature description
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIDesc *string `json:"APIDesc,omitnil,omitempty" name:"APIDesc"`
}

// Predefined struct for user
type DescribeMNPSensitiveAPIPermissionListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Keywords for search (API name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

type DescribeMNPSensitiveAPIPermissionListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Keywords for search (API name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

func (r *DescribeMNPSensitiveAPIPermissionListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPSensitiveAPIPermissionListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "MNPId")
	delete(f, "PlatformId")
	delete(f, "ApplicationId")
	delete(f, "Keyword")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPSensitiveAPIPermissionListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPSensitiveAPIPermissionListResp struct {
	// Total number of entries
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List data
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeMNPSensitiveAPIPermissionListData `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeMNPSensitiveAPIPermissionListResponseParams struct {
	// Response parameters
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeMNPSensitiveAPIPermissionListResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPSensitiveAPIPermissionListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPSensitiveAPIPermissionListResponseParams `json:"Response"`
}

func (r *DescribeMNPSensitiveAPIPermissionListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPSensitiveAPIPermissionListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPTypeRequestParams struct {
	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPTypeRequest struct {
	*tchttp.BaseRequest
	
	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPTypeRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPTypeRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPTypeRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPTypeResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data []*MNPTypeDefine `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPTypeResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPTypeResponseParams `json:"Response"`
}

func (r *DescribeMNPTypeResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPTypeResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPVersionCompileTaskExtInfo struct {
	// TCMPP error message
	// Note: This field may return null, indicating that no valid values can be obtained.
	TCMPPErrMsg *string `json:"TCMPPErrMsg,omitnil,omitempty" name:"TCMPPErrMsg"`

	// WX Error Message
	// Note: This field may return null, indicating that no valid values can be obtained.
	WXErrMsg *string `json:"WXErrMsg,omitnil,omitempty" name:"WXErrMsg"`

	// WeChat QR code
	// Note: This field may return null, indicating that no valid values can be obtained.
	WXQrCode *string `json:"WXQrCode,omitnil,omitempty" name:"WXQrCode"`

	// Compile size Information
	// Note: This field may return null, indicating that no valid values can be obtained.
	SizeInfo *string `json:"SizeInfo,omitnil,omitempty" name:"SizeInfo"`
}

type DescribeMNPVersionCompileTaskResp struct {
	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Task ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// 1: Pending; 20: Running; 30: Failed; 60: Succeeded 
	// Note: This field may return null, indicating that no valid values can be obtained.
	TaskStatus *int64 `json:"TaskStatus,omitnil,omitempty" name:"TaskStatus"`

	// Task status message
	// Note: This field may return null, indicating that no valid values can be obtained.
	TaskMsg *string `json:"TaskMsg,omitnil,omitempty" name:"TaskMsg"`

	// QR code address
	// Note: This field may return null, indicating that no valid values can be obtained.
	QrCodeUrl *string `json:"QrCodeUrl,omitnil,omitempty" name:"QrCodeUrl"`

	// Packet size
	// Note: This field may return null, indicating that no valid values can be obtained.
	PkgSize *int64 `json:"PkgSize,omitnil,omitempty" name:"PkgSize"`

	// Subpackage information
	// Note: This field may return null, indicating that no valid values can be obtained.
	SubPkgInfos []*DescribeMNPVersionCompileTaskSubSimpleInfo `json:"SubPkgInfos,omitnil,omitempty" name:"SubPkgInfos"`

	// QR code content
	// Note: This field may return null, indicating that no valid values can be obtained.
	QrCodeContent *string `json:"QrCodeContent,omitnil,omitempty" name:"QrCodeContent"`

	// Additional information
	// Note: This field may return null, indicating that no valid values can be obtained.
	ExtInfo *DescribeMNPVersionCompileTaskExtInfo `json:"ExtInfo,omitnil,omitempty" name:"ExtInfo"`
}

type DescribeMNPVersionCompileTaskSubSimpleInfo struct {
	// Name
	// Note: This field may return null, indicating that no valid values can be obtained.
	PkgName *string `json:"PkgName,omitnil,omitempty" name:"PkgName"`

	// Prefix of the package name
	// Note: This field may return null, indicating that no valid values can be obtained.
	PathPrefix *string `json:"PathPrefix,omitnil,omitempty" name:"PathPrefix"`

	// Package size in bytes
	// Note: This field may return null, indicating that no valid values can be obtained.
	PkgSize *int64 `json:"PkgSize,omitnil,omitempty" name:"PkgSize"`
}

// Predefined struct for user
type DescribeMNPVersionPreviewRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPVersionPreviewRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPVersionPreviewRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPVersionPreviewRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "MNPVersionId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPVersionPreviewRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPVersionPreviewResponseParams struct {
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeShowCaseResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPVersionPreviewResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPVersionPreviewResponseParams `json:"Response"`
}

func (r *DescribeMNPVersionPreviewResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPVersionPreviewResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeMNPVersionRequestParams struct {
	// ID of the task to create a mini program version
	BusinessId *string `json:"BusinessId,omitnil,omitempty" name:"BusinessId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeMNPVersionRequest struct {
	*tchttp.BaseRequest
	
	// ID of the task to create a mini program version
	BusinessId *string `json:"BusinessId,omitnil,omitempty" name:"BusinessId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeMNPVersionRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPVersionRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "BusinessId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeMNPVersionRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMNPVersionResp struct {
	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Task ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TaskId *string `json:"TaskId,omitnil,omitempty" name:"TaskId"`

	// 1: Pending; 20: Running; 30: Failed; 60: Succeeded 
	// Note: This field may return null, indicating that no valid values can be obtained.
	TaskStatus *int64 `json:"TaskStatus,omitnil,omitempty" name:"TaskStatus"`

	// Task status message
	// Note: This field may return null, indicating that no valid values can be obtained.
	TaskMsg *string `json:"TaskMsg,omitnil,omitempty" name:"TaskMsg"`
}

// Predefined struct for user
type DescribeMNPVersionResponseParams struct {
	// Response data
	Data *DescribeMNPVersionResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeMNPVersionResponse struct {
	*tchttp.BaseResponse
	Response *DescribeMNPVersionResponseParams `json:"Response"`
}

func (r *DescribeMNPVersionResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeMNPVersionResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeMPAllStageVersionsResp struct {
	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program version ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Mini program name
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini program icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`

	// Mini program type
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPType *string `json:"MNPType,omitnil,omitempty" name:"MNPType"`

	// Mini program introduction
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIntro *string `json:"MNPIntro,omitnil,omitempty" name:"MNPIntro"`

	// Mini program description
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPDesc *string `json:"MNPDesc,omitnil,omitempty" name:"MNPDesc"`

	// Developer
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// The time when the developer created it
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Mini program version
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`

	// Version features
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersionIntro *string `json:"MNPVersionIntro,omitnil,omitempty" name:"MNPVersionIntro"`

	// Phase. Values: [Develop,Platform,Online]
	// Note: This field may return null, indicating that no valid values can be obtained.
	Phase *string `json:"Phase,omitnil,omitempty" name:"Phase"`

	// 0: Pending; 1: Processing; 2: Rejected; 3: Approved; 4: Cancelled
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApprovalStatus *int64 `json:"ApprovalStatus,omitnil,omitempty" name:"ApprovalStatus"`

	// Approval request ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApprovalNo *string `json:"ApprovalNo,omitnil,omitempty" name:"ApprovalNo"`

	// Whether it is a preview version. 
	// 0: Not a preview version; 1: Preview version
	// Note: This field may return null, indicating that no valid values can be obtained.
	ShowCase *int64 `json:"ShowCase,omitnil,omitempty" name:"ShowCase"`

	// Version number to roll back to
	// Note: This field may return null, indicating that no valid values can be obtained.
	RollbackVersion *int64 `json:"RollbackVersion,omitnil,omitempty" name:"RollbackVersion"`

	// Release status
	// Note: This field may return null, indicating that no valid values can be obtained.
	Status *int64 `json:"Status,omitnil,omitempty" name:"Status"`

	// Version approval status. 0: Pending; 1: Processing; 2: Rejected; 3: Approved; 4: Cancelled
	// Note: This field may return null, indicating that no valid values can be obtained.
	VersionCurrentStatus *int64 `json:"VersionCurrentStatus,omitnil,omitempty" name:"VersionCurrentStatus"`
}

// Predefined struct for user
type DescribeOfflineMNPPackageRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeOfflineMNPPackageRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeOfflineMNPPackageRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeOfflineMNPPackageRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeOfflineMNPPackageRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeOfflineMNPPackageResponseParams struct {
	// Response data
	Data *StringData `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeOfflineMNPPackageResponse struct {
	*tchttp.BaseResponse
	Response *DescribeOfflineMNPPackageResponseParams `json:"Response"`
}

func (r *DescribeOfflineMNPPackageResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeOfflineMNPPackageResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeOnlineVersionRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeOnlineVersionRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeOnlineVersionRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeOnlineVersionRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeOnlineVersionRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeOnlineVersionResponseParams struct {
	// Response data
	Data *DescribeRevertOnlineVersionPageResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeOnlineVersionResponse struct {
	*tchttp.BaseResponse
	Response *DescribeOnlineVersionResponseParams `json:"Response"`
}

func (r *DescribeOnlineVersionResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeOnlineVersionResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeRevertOnlineVersionPageResp struct {
	// Total number of entries
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*QueryOnlineVersionResp `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeRoleDetailRequestParams struct {
	// Role ID
	RoleId *int64 `json:"RoleId,omitnil,omitempty" name:"RoleId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeRoleDetailRequest struct {
	*tchttp.BaseRequest
	
	// Role ID
	RoleId *int64 `json:"RoleId,omitnil,omitempty" name:"RoleId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeRoleDetailRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeRoleDetailRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "RoleId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeRoleDetailRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeRoleDetailResp struct {
	// Role ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	RoleId *int64 `json:"RoleId,omitnil,omitempty" name:"RoleId"`

	// Role name
	// Note: This field may return null, indicating that no valid values can be obtained.
	RoleName *string `json:"RoleName,omitnil,omitempty" name:"RoleName"`

	// Team ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Accessible menu list
	// Note: This field may return null, indicating that no valid values can be obtained.
	ResourceIds []*string `json:"ResourceIds,omitnil,omitempty" name:"ResourceIds"`
}

// Predefined struct for user
type DescribeRoleDetailResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeRoleDetailResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeRoleDetailResponse struct {
	*tchttp.BaseResponse
	Response *DescribeRoleDetailResponseParams `json:"Response"`
}

func (r *DescribeRoleDetailResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeRoleDetailResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeRoleListData struct {
	// Role ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	RoleId *int64 `json:"RoleId,omitnil,omitempty" name:"RoleId"`

	// Role name
	// Note: This field may return null, indicating that no valid values can be obtained.
	RoleName *string `json:"RoleName,omitnil,omitempty" name:"RoleName"`

	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Creation time
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Role type 1-Preset role 2-Custom role
	// Note: This field may return null, indicating that no valid values can be obtained.
	RoleType *int64 `json:"RoleType,omitnil,omitempty" name:"RoleType"`
}

// Predefined struct for user
type DescribeRoleListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Keywords for search (role name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

type DescribeRoleListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Keywords for search (role name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

func (r *DescribeRoleListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeRoleListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "Keyword")
	delete(f, "TeamId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeRoleListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeRoleListResp struct {
	// Total number of entries
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List data
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeRoleListData `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeRoleListResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeRoleListResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeRoleListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeRoleListResponseParams `json:"Response"`
}

func (r *DescribeRoleListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeRoleListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSensitiveAPIAuditListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Status list
	AuditStatusList []*int64 `json:"AuditStatusList,omitnil,omitempty" name:"AuditStatusList"`

	// Keywords for search (API name or API method or app name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

type DescribeSensitiveAPIAuditListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Status list
	AuditStatusList []*int64 `json:"AuditStatusList,omitnil,omitempty" name:"AuditStatusList"`

	// Keywords for search (API name or API method or app name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

func (r *DescribeSensitiveAPIAuditListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSensitiveAPIAuditListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "AuditStatusList")
	delete(f, "Keyword")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeSensitiveAPIAuditListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSensitiveAPIAuditListResponseParams struct {
	// Response data
	Data *SensitiveApiAuditInfoPageResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeSensitiveAPIAuditListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeSensitiveAPIAuditListResponseParams `json:"Response"`
}

func (r *DescribeSensitiveAPIAuditListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSensitiveAPIAuditListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSensitiveAPIListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Keywords for search (API name or method)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`
}

type DescribeSensitiveAPIListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Keywords for search (API name or method)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`
}

func (r *DescribeSensitiveAPIListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSensitiveAPIListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "Keyword")
	delete(f, "TeamId")
	delete(f, "ApplicationId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeSensitiveAPIListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSensitiveAPIListResponseParams struct {
	// Response data
	Data *SensitiveApiPageInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeSensitiveAPIListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeSensitiveAPIListResponseParams `json:"Response"`
}

func (r *DescribeSensitiveAPIListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSensitiveAPIListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeSensitiveApiApplyDetail struct {
	// API ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`

	// API request method
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIMethod *string `json:"APIMethod,omitnil,omitempty" name:"APIMethod"`

	// Reason for application
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplyReason *string `json:"ApplyReason,omitnil,omitempty" name:"ApplyReason"`

	// Reason for rejection
	// Note: This field may return null, indicating that no valid values can be obtained.
	RejectReason *string `json:"RejectReason,omitnil,omitempty" name:"RejectReason"`

	// Approval status
	// Note: This field may return null, indicating that no valid values can be obtained.
	AuditStatus *int64 `json:"AuditStatus,omitnil,omitempty" name:"AuditStatus"`

	// API function description
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIDesc *string `json:"APIDesc,omitnil,omitempty" name:"APIDesc"`

	// API type. 1: System; 2: Custom
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIType *int64 `json:"APIType,omitnil,omitempty" name:"APIType"`
}

// Predefined struct for user
type DescribeSensitiveApiApplyDetailRequestParams struct {
	// Approval ticket ID
	AuditNo *string `json:"AuditNo,omitnil,omitempty" name:"AuditNo"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeSensitiveApiApplyDetailRequest struct {
	*tchttp.BaseRequest
	
	// Approval ticket ID
	AuditNo *string `json:"AuditNo,omitnil,omitempty" name:"AuditNo"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeSensitiveApiApplyDetailRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSensitiveApiApplyDetailRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "AuditNo")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeSensitiveApiApplyDetailRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSensitiveApiApplyDetailResponseParams struct {
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeSensitiveApiApplyDetail `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeSensitiveApiApplyDetailResponse struct {
	*tchttp.BaseResponse
	Response *DescribeSensitiveApiApplyDetailResponseParams `json:"Response"`
}

func (r *DescribeSensitiveApiApplyDetailResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSensitiveApiApplyDetailResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeSensitiveApiAuthListParam struct {
	// API ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`

	// API name
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIName *string `json:"APIName,omitnil,omitempty" name:"APIName"`

	// API method
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIMethod *string `json:"APIMethod,omitnil,omitempty" name:"APIMethod"`

	// API status
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIStatus *int64 `json:"APIStatus,omitnil,omitempty" name:"APIStatus"`

	// API application status
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIApplyStatus *int64 `json:"APIApplyStatus,omitnil,omitempty" name:"APIApplyStatus"`

	// Reason for rejection
	// Note: This field may return null, indicating that no valid values can be obtained.
	RejectReason *string `json:"RejectReason,omitnil,omitempty" name:"RejectReason"`

	// Approval ticket ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	AuditNo *string `json:"AuditNo,omitnil,omitempty" name:"AuditNo"`

	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Application icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationIcon *string `json:"ApplicationIcon,omitnil,omitempty" name:"ApplicationIcon"`

	// Application name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// API type 1 - System API 2 - Custom API
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIType *int64 `json:"APIType,omitnil,omitempty" name:"APIType"`

	// API feature description
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIDesc *string `json:"APIDesc,omitnil,omitempty" name:"APIDesc"`
}

// Predefined struct for user
type DescribeSensitiveApiAuthListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Keywords for search (API name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

type DescribeSensitiveApiAuthListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Keywords for search (API name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

func (r *DescribeSensitiveApiAuthListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSensitiveApiAuthListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "MNPId")
	delete(f, "PlatformId")
	delete(f, "ApplicationId")
	delete(f, "Keyword")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeSensitiveApiAuthListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSensitiveApiAuthListResponseParams struct {
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeSensitiveApiAuthPageParam `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeSensitiveApiAuthListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeSensitiveApiAuthListResponseParams `json:"Response"`
}

func (r *DescribeSensitiveApiAuthListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSensitiveApiAuthListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeSensitiveApiAuthPageParam struct {
	// Total number of entries
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List data
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeSensitiveApiAuthListParam `json:"DataList,omitnil,omitempty" name:"DataList"`
}

type DescribeShowCaseResp struct {
	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program name
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini program description
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPDesc *string `json:"MNPDesc,omitnil,omitempty" name:"MNPDesc"`

	// Mini program version
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`

	// Mini program introduction
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersionIntro *string `json:"MNPVersionIntro,omitnil,omitempty" name:"MNPVersionIntro"`

	// Mini program QR code
	// Note: This field may return null, indicating that no valid values can be obtained.
	QRCodeUrl *string `json:"QRCodeUrl,omitnil,omitempty" name:"QRCodeUrl"`

	// Application information
	// Note: This field may return null, indicating that no valid values can be obtained.
	AppList []*ShowCaseRelAppInfo `json:"AppList,omitnil,omitempty" name:"AppList"`

	// Path to the demo
	// Note: This field may return null, indicating that no valid values can be obtained.
	TestEntrancePath *string `json:"TestEntrancePath,omitnil,omitempty" name:"TestEntrancePath"`
}

// Predefined struct for user
type DescribeSimpleApplicationInfoListRequestParams struct {
	// Pagination offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Query keywords (application name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Whether TCMPP Assistant is loaded
	LoadAssistantApp *bool `json:"LoadAssistantApp,omitnil,omitempty" name:"LoadAssistantApp"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`
}

type DescribeSimpleApplicationInfoListRequest struct {
	*tchttp.BaseRequest
	
	// Pagination offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Query keywords (application name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Whether TCMPP Assistant is loaded
	LoadAssistantApp *bool `json:"LoadAssistantApp,omitnil,omitempty" name:"LoadAssistantApp"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`
}

func (r *DescribeSimpleApplicationInfoListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSimpleApplicationInfoListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "Keyword")
	delete(f, "LoadAssistantApp")
	delete(f, "MNPId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeSimpleApplicationInfoListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSimpleApplicationInfoListResponseParams struct {
	// Response data
	Data *ApplicationSimpleListInfoResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeSimpleApplicationInfoListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeSimpleApplicationInfoListResponseParams `json:"Response"`
}

func (r *DescribeSimpleApplicationInfoListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSimpleApplicationInfoListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeSimpleTeamListRequestParams struct {
	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Team permission type 1. Mini program management 2 Application management
	TeamRoleTypeList []*int64 `json:"TeamRoleTypeList,omitnil,omitempty" name:"TeamRoleTypeList"`
}

type DescribeSimpleTeamListRequest struct {
	*tchttp.BaseRequest
	
	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Team permission type 1. Mini program management 2 Application management
	TeamRoleTypeList []*int64 `json:"TeamRoleTypeList,omitnil,omitempty" name:"TeamRoleTypeList"`
}

func (r *DescribeSimpleTeamListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSimpleTeamListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "PlatformId")
	delete(f, "TeamRoleTypeList")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeSimpleTeamListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeSimpleTeamListResp struct {
	// Total number of entries
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*SimpleStringKeyValue `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeSimpleTeamListResponseParams struct {
	// Response data
	Data *DescribeSimpleTeamListResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeSimpleTeamListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeSimpleTeamListResponseParams `json:"Response"`
}

func (r *DescribeSimpleTeamListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeSimpleTeamListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeTeamDetailResp struct {
	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Team role type 1-Mini program team 2-Application team
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamRoleType *int64 `json:"TeamRoleType,omitnil,omitempty" name:"TeamRoleType"`

	// Admin account
	// Note: This field may return null, indicating that no valid values can be obtained.
	AdminUserAccount *string `json:"AdminUserAccount,omitnil,omitempty" name:"AdminUserAccount"`

	// Creator
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// Creation time
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Number of team members
	// Note: This field may return null, indicating that no valid values can be obtained.
	MemberCount *int64 `json:"MemberCount,omitnil,omitempty" name:"MemberCount"`

	// Number of bound mini program teams
	// Note: This field may return null, indicating that no valid values can be obtained.
	BindMiniTeamCount *int64 `json:"BindMiniTeamCount,omitnil,omitempty" name:"BindMiniTeamCount"`

	// Name of the bound team
	BindTeamName *string `json:"BindTeamName,omitnil,omitempty" name:"BindTeamName"`

	// Team registration link
	RegisterLink *string `json:"RegisterLink,omitnil,omitempty" name:"RegisterLink"`

	// Application name. It’s required when querying details of a mini program team.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`
}

type DescribeTeamDomainListInfoResp struct {
	// Domain ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	DomainId *int64 `json:"DomainId,omitnil,omitempty" name:"DomainId"`

	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program name
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Domain name
	// Note: This field may return null, indicating that no valid values can be obtained.
	DomainUrl *string `json:"DomainUrl,omitnil,omitempty" name:"DomainUrl"`

	// Type 
	// Note: This field may return null, indicating that no valid values can be obtained.
	DomainType *int64 `json:"DomainType,omitnil,omitempty" name:"DomainType"`

	// Domain name status. 1: Normal; 2: Disabled
	// Note: This field may return null, indicating that no valid values can be obtained.
	Status *int64 `json:"Status,omitnil,omitempty" name:"Status"`

	// Creator
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// The creation time.
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`
}

type DescribeTeamDomainListPageResp struct {
	// Total number of entries
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeTeamDomainListInfoResp `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeTeamDomainListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeTeamDomainListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeTeamDomainListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTeamDomainListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "TeamId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeTeamDomainListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTeamDomainListResponseParams struct {
	// Response data
	Data *DescribeTeamDomainListPageResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeTeamDomainListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeTeamDomainListResponseParams `json:"Response"`
}

func (r *DescribeTeamDomainListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTeamDomainListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeTeamListInfoResp struct {
	// Team ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Admin ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	AdminUserId *string `json:"AdminUserId,omitnil,omitempty" name:"AdminUserId"`

	// Admin account
	// Note: This field may return null, indicating that no valid values can be obtained.
	AdminUserAccount *string `json:"AdminUserAccount,omitnil,omitempty" name:"AdminUserAccount"`

	// Admin username
	// Note: This field may return null, indicating that no valid values can be obtained.
	AdminUserName *string `json:"AdminUserName,omitnil,omitempty" name:"AdminUserName"`

	// Number of team members
	// Note: This field may return null, indicating that no valid values can be obtained.
	MemberCount *int64 `json:"MemberCount,omitnil,omitempty" name:"MemberCount"`

	// Team registration link
	RegisterLink *string `json:"RegisterLink,omitnil,omitempty" name:"RegisterLink"`

	// Team permission type
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamRoleTypeList []*int64 `json:"TeamRoleTypeList,omitnil,omitempty" name:"TeamRoleTypeList"`

	// Associated team ID
	RelatedTeamId *int64 `json:"RelatedTeamId,omitnil,omitempty" name:"RelatedTeamId"`
}

// Predefined struct for user
type DescribeTeamListRequestParams struct {
	// Pagination offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Name of the team to be queried
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

type DescribeTeamListRequest struct {
	*tchttp.BaseRequest
	
	// Pagination offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Name of the team to be queried
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`
}

func (r *DescribeTeamListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTeamListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "Keyword")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeTeamListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTeamListResponseParams struct {
	// Response data
	Data *DescribeTeamPageResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeTeamListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeTeamListResponseParams `json:"Response"`
}

func (r *DescribeTeamListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTeamListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeTeamMemberInfoResp struct {
	// User ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// User account
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserAccount *string `json:"UserAccount,omitnil,omitempty" name:"UserAccount"`

	// User name
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserName *string `json:"UserName,omitnil,omitempty" name:"UserName"`

	// Team ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Team role name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamRoleName *string `json:"TeamRoleName,omitnil,omitempty" name:"TeamRoleName"`

	// Team role ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamRoleId *int64 `json:"TeamRoleId,omitnil,omitempty" name:"TeamRoleId"`

	// Editable or not
	// Note: This field may return null, indicating that no valid values can be obtained.
	CanEdit *bool `json:"CanEdit,omitnil,omitempty" name:"CanEdit"`
}

type DescribeTeamMemberListPageResp struct {
	// Total number of results.
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeTeamMemberInfoResp `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeTeamMemberListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Keywords for search (user name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Role ID
	RoleIds []*int64 `json:"RoleIds,omitnil,omitempty" name:"RoleIds"`
}

type DescribeTeamMemberListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Keywords for search (user name)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// Role ID
	RoleIds []*int64 `json:"RoleIds,omitnil,omitempty" name:"RoleIds"`
}

func (r *DescribeTeamMemberListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTeamMemberListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "TeamId")
	delete(f, "Keyword")
	delete(f, "RoleIds")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeTeamMemberListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTeamMemberListResponseParams struct {
	// Response data
	Data *DescribeTeamMemberListPageResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeTeamMemberListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeTeamMemberListResponseParams `json:"Response"`
}

func (r *DescribeTeamMemberListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTeamMemberListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeTeamMembersInfoPageResp struct {
	// Total number of results.
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeTeamMembersInfoResp `json:"DataList,omitnil,omitempty" name:"DataList"`
}

type DescribeTeamMembersInfoResp struct {
	// User ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// User account
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserAccount *string `json:"UserAccount,omitnil,omitempty" name:"UserAccount"`

	// Username
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserName *string `json:"UserName,omitnil,omitempty" name:"UserName"`

	// Role
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserRoles *string `json:"UserRoles,omitnil,omitempty" name:"UserRoles"`
}

// Predefined struct for user
type DescribeTeamMembersRequestParams struct {
	// Pagination offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeTeamMembersRequest struct {
	*tchttp.BaseRequest
	
	// Pagination offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeTeamMembersRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTeamMembersRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "TeamId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeTeamMembersRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTeamMembersResponseParams struct {
	// Response data
	Data *DescribeTeamMembersInfoPageResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeTeamMembersResponse struct {
	*tchttp.BaseResponse
	Response *DescribeTeamMembersResponseParams `json:"Response"`
}

func (r *DescribeTeamMembersResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTeamMembersResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeTeamPageResp struct {
	// Total number of results.
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeTeamListInfoResp `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeTeamRequestParams struct {
	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeTeamRequest struct {
	*tchttp.BaseRequest
	
	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeTeamRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTeamRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "TeamId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeTeamRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTeamResponseParams struct {
	// Response data
	Data *DescribeTeamDetailResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeTeamResponse struct {
	*tchttp.BaseResponse
	Response *DescribeTeamResponseParams `json:"Response"`
}

func (r *DescribeTeamResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTeamResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTempSecret4UploadFile2CosRequestParams struct {
	// Service name
	BusinessName *string `json:"BusinessName,omitnil,omitempty" name:"BusinessName"`

	// File suffix
	Suffix *string `json:"Suffix,omitnil,omitempty" name:"Suffix"`
}

type DescribeTempSecret4UploadFile2CosRequest struct {
	*tchttp.BaseRequest
	
	// Service name
	BusinessName *string `json:"BusinessName,omitnil,omitempty" name:"BusinessName"`

	// File suffix
	Suffix *string `json:"Suffix,omitnil,omitempty" name:"Suffix"`
}

func (r *DescribeTempSecret4UploadFile2CosRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTempSecret4UploadFile2CosRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "BusinessName")
	delete(f, "Suffix")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeTempSecret4UploadFile2CosRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeTempSecret4UploadFile2CosResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *UploadFileTempSecret `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeTempSecret4UploadFile2CosResponse struct {
	*tchttp.BaseResponse
	Response *DescribeTempSecret4UploadFile2CosResponseParams `json:"Response"`
}

func (r *DescribeTempSecret4UploadFile2CosResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeTempSecret4UploadFile2CosResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeUserDetailRequestParams struct {
	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeUserDetailRequest struct {
	*tchttp.BaseRequest
	
	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeUserDetailRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeUserDetailRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "UserId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeUserDetailRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeUserDetailResp struct {
	// User ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// User account
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserAccount *string `json:"UserAccount,omitnil,omitempty" name:"UserAccount"`

	// User account
	// 1 - Super admin 2 - Platform admin 3 - Ordinary member
	// Note: This field may return null, indicating that no valid values can be obtained.
	AccountType *int64 `json:"AccountType,omitnil,omitempty" name:"AccountType"`

	// User name
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserName *string `json:"UserName,omitnil,omitempty" name:"UserName"`
}

// Predefined struct for user
type DescribeUserDetailResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeUserDetailResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeUserDetailResponse struct {
	*tchttp.BaseResponse
	Response *DescribeUserDetailResponseParams `json:"Response"`
}

func (r *DescribeUserDetailResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeUserDetailResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DescribeUserListData struct {
	// User ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// User account
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserAccount *string `json:"UserAccount,omitnil,omitempty" name:"UserAccount"`

	// Associated team
	// Note: This field may return null, indicating that no valid values can be obtained.
	//
	// Deprecated: Teams is deprecated.
	Teams *string `json:"Teams,omitnil,omitempty" name:"Teams"`

	// Account type. 1: Super administrator; 2: Platform administrator; 3: Ordinary member
	// Note: This field may return null, indicating that no valid values can be obtained.
	AccountType *int64 `json:"AccountType,omitnil,omitempty" name:"AccountType"`

	// User name
	// Note: This field may return null, indicating that no valid values can be obtained.
	UserName *string `json:"UserName,omitnil,omitempty" name:"UserName"`

	// Creation time
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Status. 1: Normal; 2: Disabled
	// Note: This field may return null, indicating that no valid values can be obtained.
	Status *int64 `json:"Status,omitnil,omitempty" name:"Status"`

	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`
}

// Predefined struct for user
type DescribeUserListRequestParams struct {
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Keywords for search (username or account)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// User account 1 - Super Admin 2 - Platform Admin 3 - Ordinary member
	AccountType *int64 `json:"AccountType,omitnil,omitempty" name:"AccountType"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

type DescribeUserListRequest struct {
	*tchttp.BaseRequest
	
	// Page offset
	Offset *int64 `json:"Offset,omitnil,omitempty" name:"Offset"`

	// Number of results per page
	Limit *int64 `json:"Limit,omitnil,omitempty" name:"Limit"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Keywords for search (username or account)
	Keyword *string `json:"Keyword,omitnil,omitempty" name:"Keyword"`

	// User account 1 - Super Admin 2 - Platform Admin 3 - Ordinary member
	AccountType *int64 `json:"AccountType,omitnil,omitempty" name:"AccountType"`

	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`
}

func (r *DescribeUserListRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeUserListRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "Offset")
	delete(f, "Limit")
	delete(f, "PlatformId")
	delete(f, "Keyword")
	delete(f, "AccountType")
	delete(f, "TeamId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeUserListRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

type DescribeUserListResp struct {
	// Total number of entries
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List data
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*DescribeUserListData `json:"DataList,omitnil,omitempty" name:"DataList"`
}

// Predefined struct for user
type DescribeUserListResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeUserListResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeUserListResponse struct {
	*tchttp.BaseResponse
	Response *DescribeUserListResponseParams `json:"Response"`
}

func (r *DescribeUserListResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeUserListResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeUserRequestParams struct {
	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DescribeUserRequest struct {
	*tchttp.BaseRequest
	
	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DescribeUserRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeUserRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "UserId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DescribeUserRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DescribeUserResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *DescribeUserDetailResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DescribeUserResponse struct {
	*tchttp.BaseResponse
	Response *DescribeUserResponseParams `json:"Response"`
}

func (r *DescribeUserResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DescribeUserResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DisableApplicationSensitiveAPIRequestParams struct {
	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// API ID
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`
}

type DisableApplicationSensitiveAPIRequest struct {
	*tchttp.BaseRequest
	
	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// API ID
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`
}

func (r *DisableApplicationSensitiveAPIRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DisableApplicationSensitiveAPIRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "PlatformId")
	delete(f, "APIId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DisableApplicationSensitiveAPIRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DisableApplicationSensitiveAPIResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DisableApplicationSensitiveAPIResponse struct {
	*tchttp.BaseResponse
	Response *DisableApplicationSensitiveAPIResponseParams `json:"Response"`
}

func (r *DisableApplicationSensitiveAPIResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DisableApplicationSensitiveAPIResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DisableEnterpriseDomainResp struct {
	// Result
	// Note: This field may return null, indicating that no valid values can be obtained.
	Result *bool `json:"Result,omitnil,omitempty" name:"Result"`
}

// Predefined struct for user
type DisableTeamDomainRequestParams struct {

	DomainId *int64 `json:"DomainId,omitnil,omitempty" name:"DomainId"`


	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type DisableTeamDomainRequest struct {
	*tchttp.BaseRequest
	
	DomainId *int64 `json:"DomainId,omitnil,omitempty" name:"DomainId"`

	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *DisableTeamDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DisableTeamDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "DomainId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "DisableTeamDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type DisableTeamDomainResponseParams struct {

	Data *DisableEnterpriseDomainResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type DisableTeamDomainResponse struct {
	*tchttp.BaseResponse
	Response *DisableTeamDomainResponseParams `json:"Response"`
}

func (r *DisableTeamDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *DisableTeamDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type DownloadApplicationConfigResp struct {
	// Configuration information in Base64 format
	// Note: This field may return null, indicating that no valid values can be obtained.
	File *string `json:"File,omitnil,omitempty" name:"File"`
}

// Predefined struct for user
type EnableApplicationSensitiveAPIRequestParams struct {
	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// API ID
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`
}

type EnableApplicationSensitiveAPIRequest struct {
	*tchttp.BaseRequest
	
	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// API ID
	APIId *string `json:"APIId,omitnil,omitempty" name:"APIId"`
}

func (r *EnableApplicationSensitiveAPIRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *EnableApplicationSensitiveAPIRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "PlatformId")
	delete(f, "APIId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "EnableApplicationSensitiveAPIRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type EnableApplicationSensitiveAPIResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type EnableApplicationSensitiveAPIResponse struct {
	*tchttp.BaseResponse
	Response *EnableApplicationSensitiveAPIResponseParams `json:"Response"`
}

func (r *EnableApplicationSensitiveAPIResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *EnableApplicationSensitiveAPIResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type GlobalDomainCheckResp struct {
	// List of duplicate domain names
	// Note: This field may return null, indicating that no valid values can be obtained.
	RepeatUrls []*string `json:"RepeatUrls,omitnil,omitempty" name:"RepeatUrls"`

	// List of allowed domain names
	// Note: This field may return null, indicating that no valid values can be obtained.
	ExistsWhiteUrls []*string `json:"ExistsWhiteUrls,omitnil,omitempty" name:"ExistsWhiteUrls"`

	// List of blocked domain names
	// Note: This field may return null, indicating that no valid values can be obtained.
	ExistsBlackUrls []*string `json:"ExistsBlackUrls,omitnil,omitempty" name:"ExistsBlackUrls"`
}

type GlobalDomainDeleteResp struct {
	// Response result
	// Note: This field may return null, indicating that no valid values can be obtained.
	Result *bool `json:"Result,omitnil,omitempty" name:"Result"`
}

type GlobalDomainDescribeListInfoResp struct {
	// Domain ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	DomainId *int64 `json:"DomainId,omitnil,omitempty" name:"DomainId"`

	// Platform ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	CustomerID *string `json:"CustomerID,omitnil,omitempty" name:"CustomerID"`

	// Domain name
	// Note: This field may return null, indicating that no valid values can be obtained.
	DomainURL *string `json:"DomainURL,omitnil,omitempty" name:"DomainURL"`

	// Type. 1: Allowed; 2: Blocked
	// Note: This field may return null, indicating that no valid values can be obtained.
	DomainType *int64 `json:"DomainType,omitnil,omitempty" name:"DomainType"`

	// Creator
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// Creation time
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Updated by
	// Note: This field may return null, indicating that no valid values can be obtained.
	UpdateUser *string `json:"UpdateUser,omitnil,omitempty" name:"UpdateUser"`

	// Update date
	// Note: This field may return null, indicating that no valid values can be obtained.
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

type GlobalDomainDescribeListPageResp struct {
	// Total number of results
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// Domain name information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*GlobalDomainDescribeListInfoResp `json:"DataList,omitnil,omitempty" name:"DataList"`
}

type GlobalDomainModifyRespResp struct {
	// 0: Success; 1: Allowed domains exist; 2: Blocked domains exist
	// Note: This field may return null, indicating that no valid values can be obtained.
	Result *int64 `json:"Result,omitnil,omitempty" name:"Result"`
}

type MNPDetail struct {
	// Mini program type 
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPType *string `json:"MNPType,omitnil,omitempty" name:"MNPType"`

	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program name
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini program icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`

	// Mini program introduction
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIntro *string `json:"MNPIntro,omitnil,omitempty" name:"MNPIntro"`

	// Mini program description
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPDesc *string `json:"MNPDesc,omitnil,omitempty" name:"MNPDesc"`

	// Creator account
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// Creation time, timestamp
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *int64 `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Online Status 0 Not Online, 1 Online
	// Note: This field may return null, indicating that no valid values can be obtained.
	OnlineStatus *int64 `json:"OnlineStatus,omitnil,omitempty" name:"OnlineStatus"`

	// Application information
	// Note: This field may return null, indicating that no valid values can be obtained.
	Applications []*ApplicationSimpleInfo `json:"Applications,omitnil,omitempty" name:"Applications"`

	// Mini program tag
	// Note: This field may return null, indicating that no valid values can be obtained.
	Tags []*string `json:"Tags,omitnil,omitempty" name:"Tags"`

	// Mini program status 1-Released 2-Removed
	// Note: This field may return null, indicating that no valid values can be obtained.
	Status *int64 `json:"Status,omitnil,omitempty" name:"Status"`
}

type MNPTypeDefine struct {
	// Mini program category name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TypeName *string `json:"TypeName,omitnil,omitempty" name:"TypeName"`

	// Mini program category value
	// Note: This field may return null, indicating that no valid values can be obtained.
	TypeValue []*string `json:"TypeValue,omitnil,omitempty" name:"TypeValue"`

	// Category ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TypeId *int64 `json:"TypeId,omitnil,omitempty" name:"TypeId"`

	// Creation time
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *int64 `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Creator
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// Whether it is a system category
	// Note: This field may return null, indicating that no valid values can be obtained.
	IsSystem *bool `json:"IsSystem,omitnil,omitempty" name:"IsSystem"`
}

// Predefined struct for user
type ModifyApplicationAppKeyRequestParams struct {
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Android package name
	AndroidAppKey *string `json:"AndroidAppKey,omitnil,omitempty" name:"AndroidAppKey"`

	// iOS package name
	IOSAppKey *string `json:"IOSAppKey,omitnil,omitempty" name:"IOSAppKey"`
}

type ModifyApplicationAppKeyRequest struct {
	*tchttp.BaseRequest
	
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Android package name
	AndroidAppKey *string `json:"AndroidAppKey,omitnil,omitempty" name:"AndroidAppKey"`

	// iOS package name
	IOSAppKey *string `json:"IOSAppKey,omitnil,omitempty" name:"IOSAppKey"`
}

func (r *ModifyApplicationAppKeyRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyApplicationAppKeyRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApplicationId")
	delete(f, "PlatformId")
	delete(f, "AndroidAppKey")
	delete(f, "IOSAppKey")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyApplicationAppKeyRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyApplicationAppKeyResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyApplicationAppKeyResponse struct {
	*tchttp.BaseResponse
	Response *ModifyApplicationAppKeyResponseParams `json:"Response"`
}

func (r *ModifyApplicationAppKeyResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyApplicationAppKeyResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyApplicationAppUrlRequestParams struct {
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Android address
	AndroidAppURL *string `json:"AndroidAppURL,omitnil,omitempty" name:"AndroidAppURL"`

	// iOS address
	IOSAppURL *string `json:"IOSAppURL,omitnil,omitempty" name:"IOSAppURL"`
}

type ModifyApplicationAppUrlRequest struct {
	*tchttp.BaseRequest
	
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Android address
	AndroidAppURL *string `json:"AndroidAppURL,omitnil,omitempty" name:"AndroidAppURL"`

	// iOS address
	IOSAppURL *string `json:"IOSAppURL,omitnil,omitempty" name:"IOSAppURL"`
}

func (r *ModifyApplicationAppUrlRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyApplicationAppUrlRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApplicationId")
	delete(f, "PlatformId")
	delete(f, "AndroidAppURL")
	delete(f, "IOSAppURL")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyApplicationAppUrlRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyApplicationAppUrlResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyApplicationAppUrlResponse struct {
	*tchttp.BaseResponse
	Response *ModifyApplicationAppUrlResponseParams `json:"Response"`
}

func (r *ModifyApplicationAppUrlResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyApplicationAppUrlResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyApplicationRequestParams struct {
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// The application name.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// Application introduction
	Intro *string `json:"Intro,omitnil,omitempty" name:"Intro"`

	// Icon
	Logo *string `json:"Logo,omitnil,omitempty" name:"Logo"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Android app package name
	AndroidAppKey *string `json:"AndroidAppKey,omitnil,omitempty" name:"AndroidAppKey"`

	// iOS App bundleId
	IosAppKey *string `json:"IosAppKey,omitnil,omitempty" name:"IosAppKey"`

	// Remarks
	Remark *string `json:"Remark,omitnil,omitempty" name:"Remark"`
}

type ModifyApplicationRequest struct {
	*tchttp.BaseRequest
	
	// Application ID
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// The application name.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// Application introduction
	Intro *string `json:"Intro,omitnil,omitempty" name:"Intro"`

	// Icon
	Logo *string `json:"Logo,omitnil,omitempty" name:"Logo"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Android app package name
	AndroidAppKey *string `json:"AndroidAppKey,omitnil,omitempty" name:"AndroidAppKey"`

	// iOS App bundleId
	IosAppKey *string `json:"IosAppKey,omitnil,omitempty" name:"IosAppKey"`

	// Remarks
	Remark *string `json:"Remark,omitnil,omitempty" name:"Remark"`
}

func (r *ModifyApplicationRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyApplicationRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApplicationId")
	delete(f, "ApplicationName")
	delete(f, "Intro")
	delete(f, "Logo")
	delete(f, "PlatformId")
	delete(f, "AndroidAppKey")
	delete(f, "IosAppKey")
	delete(f, "Remark")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyApplicationRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyApplicationResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyApplicationResponse struct {
	*tchttp.BaseResponse
	Response *ModifyApplicationResponseParams `json:"Response"`
}

func (r *ModifyApplicationResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyApplicationResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyDomainRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Domain name list
	Domain []*CreateDomainParam `json:"Domain,omitnil,omitempty" name:"Domain"`
}

type ModifyDomainRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Domain name list
	Domain []*CreateDomainParam `json:"Domain,omitnil,omitempty" name:"Domain"`
}

func (r *ModifyDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	delete(f, "Domain")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyDomainResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyDomainResponse struct {
	*tchttp.BaseResponse
	Response *ModifyDomainResponseParams `json:"Response"`
}

func (r *ModifyDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyGlobalDomainRequestParams struct {
	// Domain ID
	DomainId *int64 `json:"DomainId,omitnil,omitempty" name:"DomainId"`

	// Domain name
	DomainUrl *string `json:"DomainUrl,omitnil,omitempty" name:"DomainUrl"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type ModifyGlobalDomainRequest struct {
	*tchttp.BaseRequest
	
	// Domain ID
	DomainId *int64 `json:"DomainId,omitnil,omitempty" name:"DomainId"`

	// Domain name
	DomainUrl *string `json:"DomainUrl,omitnil,omitempty" name:"DomainUrl"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *ModifyGlobalDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyGlobalDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "DomainId")
	delete(f, "DomainUrl")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyGlobalDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyGlobalDomainResponseParams struct {
	// Response data
	Data *GlobalDomainModifyRespResp `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyGlobalDomainResponse struct {
	*tchttp.BaseResponse
	Response *ModifyGlobalDomainResponseParams `json:"Response"`
}

func (r *ModifyGlobalDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyGlobalDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyMNPDomainRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Domain name list
	Domain []*CreateDomainParam `json:"Domain,omitnil,omitempty" name:"Domain"`
}

type ModifyMNPDomainRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Domain name list
	Domain []*CreateDomainParam `json:"Domain,omitnil,omitempty" name:"Domain"`
}

func (r *ModifyMNPDomainRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyMNPDomainRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	delete(f, "Domain")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyMNPDomainRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyMNPDomainResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyMNPDomainResponse struct {
	*tchttp.BaseResponse
	Response *ModifyMNPDomainResponseParams `json:"Response"`
}

func (r *ModifyMNPDomainResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyMNPDomainResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyMNPRequestParams struct {
	// Mini program type
	MNPType *string `json:"MNPType,omitnil,omitempty" name:"MNPType"`

	// Mini program name
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini program introduction
	MNPIntro *string `json:"MNPIntro,omitnil,omitempty" name:"MNPIntro"`

	// Mini program description
	MNPDesc *string `json:"MNPDesc,omitnil,omitempty" name:"MNPDesc"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Mini program icon
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`
}

type ModifyMNPRequest struct {
	*tchttp.BaseRequest
	
	// Mini program type
	MNPType *string `json:"MNPType,omitnil,omitempty" name:"MNPType"`

	// Mini program name
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini program introduction
	MNPIntro *string `json:"MNPIntro,omitnil,omitempty" name:"MNPIntro"`

	// Mini program description
	MNPDesc *string `json:"MNPDesc,omitnil,omitempty" name:"MNPDesc"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Mini program icon
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`
}

func (r *ModifyMNPRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyMNPRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPType")
	delete(f, "MNPName")
	delete(f, "MNPIntro")
	delete(f, "MNPDesc")
	delete(f, "MNPId")
	delete(f, "PlatformId")
	delete(f, "MNPIcon")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyMNPRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyMNPResponseParams struct {
	// Response data
	Data *ResourceIdInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyMNPResponse struct {
	*tchttp.BaseResponse
	Response *ModifyMNPResponseParams `json:"Response"`
}

func (r *ModifyMNPResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyMNPResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyMNPStatusOfflineRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type ModifyMNPStatusOfflineRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *ModifyMNPStatusOfflineRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyMNPStatusOfflineRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyMNPStatusOfflineRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyMNPStatusOfflineResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyMNPStatusOfflineResponse struct {
	*tchttp.BaseResponse
	Response *ModifyMNPStatusOfflineResponseParams `json:"Response"`
}

func (r *ModifyMNPStatusOfflineResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyMNPStatusOfflineResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyMNPVersionPreviewRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// 1 Set 2 Cancel
	ActionType *int64 `json:"ActionType,omitnil,omitempty" name:"ActionType"`

	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Path to the demo page
	TestEntrancePath *string `json:"TestEntrancePath,omitnil,omitempty" name:"TestEntrancePath"`
}

type ModifyMNPVersionPreviewRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// 1 Set 2 Cancel
	ActionType *int64 `json:"ActionType,omitnil,omitempty" name:"ActionType"`

	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Path to the demo page
	TestEntrancePath *string `json:"TestEntrancePath,omitnil,omitempty" name:"TestEntrancePath"`
}

func (r *ModifyMNPVersionPreviewRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyMNPVersionPreviewRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "ActionType")
	delete(f, "MNPVersionId")
	delete(f, "PlatformId")
	delete(f, "TestEntrancePath")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyMNPVersionPreviewRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyMNPVersionPreviewResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyMNPVersionPreviewResponse struct {
	*tchttp.BaseResponse
	Response *ModifyMNPVersionPreviewResponseParams `json:"Response"`
}

func (r *ModifyMNPVersionPreviewResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyMNPVersionPreviewResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyOnlineVersionRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Mini program version number
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`
}

type ModifyOnlineVersionRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Mini program version number
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`
}

func (r *ModifyOnlineVersionRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyOnlineVersionRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "MNPVersionId")
	delete(f, "PlatformId")
	delete(f, "MNPVersion")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyOnlineVersionRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyOnlineVersionResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyOnlineVersionResponse struct {
	*tchttp.BaseResponse
	Response *ModifyOnlineVersionResponseParams `json:"Response"`
}

func (r *ModifyOnlineVersionResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyOnlineVersionResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyPlatformAuditStatusRequestParams struct {
	// Approval ticket ID
	AuditNo *string `json:"AuditNo,omitnil,omitempty" name:"AuditNo"`

	// Approval result
	AuditResult *int64 `json:"AuditResult,omitnil,omitempty" name:"AuditResult"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval description
	AuditNote *string `json:"AuditNote,omitnil,omitempty" name:"AuditNote"`

	// Approval details
	AuditItems []*AuditInfoReq `json:"AuditItems,omitnil,omitempty" name:"AuditItems"`
}

type ModifyPlatformAuditStatusRequest struct {
	*tchttp.BaseRequest
	
	// Approval ticket ID
	AuditNo *string `json:"AuditNo,omitnil,omitempty" name:"AuditNo"`

	// Approval result
	AuditResult *int64 `json:"AuditResult,omitnil,omitempty" name:"AuditResult"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval description
	AuditNote *string `json:"AuditNote,omitnil,omitempty" name:"AuditNote"`

	// Approval details
	AuditItems []*AuditInfoReq `json:"AuditItems,omitnil,omitempty" name:"AuditItems"`
}

func (r *ModifyPlatformAuditStatusRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyPlatformAuditStatusRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "AuditNo")
	delete(f, "AuditResult")
	delete(f, "PlatformId")
	delete(f, "AuditNote")
	delete(f, "AuditItems")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyPlatformAuditStatusRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyPlatformAuditStatusResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyPlatformAuditStatusResponse struct {
	*tchttp.BaseResponse
	Response *ModifyPlatformAuditStatusResponseParams `json:"Response"`
}

func (r *ModifyPlatformAuditStatusResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyPlatformAuditStatusResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifySensitiveAPIAuditStatusRequestParams struct {
	// Approval ticket ID
	AuditNo *string `json:"AuditNo,omitnil,omitempty" name:"AuditNo"`

	// Approval status 20 Rejected 30 Approved
	AuditStatus *int64 `json:"AuditStatus,omitnil,omitempty" name:"AuditStatus"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval notes
	AuditNote *string `json:"AuditNote,omitnil,omitempty" name:"AuditNote"`
}

type ModifySensitiveAPIAuditStatusRequest struct {
	*tchttp.BaseRequest
	
	// Approval ticket ID
	AuditNo *string `json:"AuditNo,omitnil,omitempty" name:"AuditNo"`

	// Approval status 20 Rejected 30 Approved
	AuditStatus *int64 `json:"AuditStatus,omitnil,omitempty" name:"AuditStatus"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval notes
	AuditNote *string `json:"AuditNote,omitnil,omitempty" name:"AuditNote"`
}

func (r *ModifySensitiveAPIAuditStatusRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifySensitiveAPIAuditStatusRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "AuditNo")
	delete(f, "AuditStatus")
	delete(f, "PlatformId")
	delete(f, "AuditNote")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifySensitiveAPIAuditStatusRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifySensitiveAPIAuditStatusResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifySensitiveAPIAuditStatusResponse struct {
	*tchttp.BaseResponse
	Response *ModifySensitiveAPIAuditStatusResponseParams `json:"Response"`
}

func (r *ModifySensitiveAPIAuditStatusResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifySensitiveAPIAuditStatusResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyTeamMemberRequestParams struct {
	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// Role ID.
	RoleId *int64 `json:"RoleId,omitnil,omitempty" name:"RoleId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type ModifyTeamMemberRequest struct {
	*tchttp.BaseRequest
	
	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// Role ID.
	RoleId *int64 `json:"RoleId,omitnil,omitempty" name:"RoleId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *ModifyTeamMemberRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyTeamMemberRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "TeamId")
	delete(f, "UserId")
	delete(f, "RoleId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyTeamMemberRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyTeamMemberResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyTeamMemberResponse struct {
	*tchttp.BaseResponse
	Response *ModifyTeamMemberResponseParams `json:"Response"`
}

func (r *ModifyTeamMemberResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyTeamMemberResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyTeamRequestParams struct {
	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team name
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Team administrator
	AdminUserId *string `json:"AdminUserId,omitnil,omitempty" name:"AdminUserId"`
}

type ModifyTeamRequest struct {
	*tchttp.BaseRequest
	
	// Team ID
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team name
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Team administrator
	AdminUserId *string `json:"AdminUserId,omitnil,omitempty" name:"AdminUserId"`
}

func (r *ModifyTeamRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyTeamRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "TeamId")
	delete(f, "TeamName")
	delete(f, "PlatformId")
	delete(f, "AdminUserId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyTeamRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyTeamResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyTeamResponse struct {
	*tchttp.BaseResponse
	Response *ModifyTeamResponseParams `json:"Response"`
}

func (r *ModifyTeamResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyTeamResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyUserPasswordRequestParams struct {
	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// Account password. Use CreatePresetKey to get publick key to encrypt the password.
	Password *string `json:"Password,omitnil,omitempty" name:"Password"`

	// Call CreatePresetKey to get the keyID from RequestId
	KeyId *string `json:"KeyId,omitnil,omitempty" name:"KeyId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type ModifyUserPasswordRequest struct {
	*tchttp.BaseRequest
	
	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// Account password. Use CreatePresetKey to get publick key to encrypt the password.
	Password *string `json:"Password,omitnil,omitempty" name:"Password"`

	// Call CreatePresetKey to get the keyID from RequestId
	KeyId *string `json:"KeyId,omitnil,omitempty" name:"KeyId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *ModifyUserPasswordRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyUserPasswordRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "UserId")
	delete(f, "Password")
	delete(f, "KeyId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyUserPasswordRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyUserPasswordResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyUserPasswordResponse struct {
	*tchttp.BaseResponse
	Response *ModifyUserPasswordResponseParams `json:"Response"`
}

func (r *ModifyUserPasswordResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyUserPasswordResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyUserRequestParams struct {
	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// User name
	UserName *string `json:"UserName,omitnil,omitempty" name:"UserName"`

	// Account type 2 - Platform administrator 3 - Ordinary member
	AccountType *int64 `json:"AccountType,omitnil,omitempty" name:"AccountType"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Account
	//
	// Deprecated: UserAccount is deprecated.
	UserAccount *string `json:"UserAccount,omitnil,omitempty" name:"UserAccount"`
}

type ModifyUserRequest struct {
	*tchttp.BaseRequest
	
	// User ID
	UserId *string `json:"UserId,omitnil,omitempty" name:"UserId"`

	// User name
	UserName *string `json:"UserName,omitnil,omitempty" name:"UserName"`

	// Account type 2 - Platform administrator 3 - Ordinary member
	AccountType *int64 `json:"AccountType,omitnil,omitempty" name:"AccountType"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Account
	UserAccount *string `json:"UserAccount,omitnil,omitempty" name:"UserAccount"`
}

func (r *ModifyUserRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyUserRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "UserId")
	delete(f, "UserName")
	delete(f, "AccountType")
	delete(f, "PlatformId")
	delete(f, "UserAccount")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ModifyUserRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ModifyUserResponseParams struct {
	// Response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ModifyUserResponse struct {
	*tchttp.BaseResponse
	Response *ModifyUserResponseParams `json:"Response"`
}

func (r *ModifyUserResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ModifyUserResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type PresetResp struct {
	// RSA encryption public key
	// Note: This field may return null, indicating that no valid values can be obtained.
	Key *string `json:"Key,omitnil,omitempty" name:"Key"`
}

// Predefined struct for user
type ProcessMNPApprovalRequestParams struct {
	// Approval ID
	ApprovalNo *string `json:"ApprovalNo,omitnil,omitempty" name:"ApprovalNo"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval details
	ApprovalItems []*ApprovalItem `json:"ApprovalItems,omitnil,omitempty" name:"ApprovalItems"`
}

type ProcessMNPApprovalRequest struct {
	*tchttp.BaseRequest
	
	// Approval ID
	ApprovalNo *string `json:"ApprovalNo,omitnil,omitempty" name:"ApprovalNo"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval details
	ApprovalItems []*ApprovalItem `json:"ApprovalItems,omitnil,omitempty" name:"ApprovalItems"`
}

func (r *ProcessMNPApprovalRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ProcessMNPApprovalRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApprovalNo")
	delete(f, "PlatformId")
	delete(f, "ApprovalItems")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ProcessMNPApprovalRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ProcessMNPApprovalResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ProcessMNPApprovalResponse struct {
	*tchttp.BaseResponse
	Response *ProcessMNPApprovalResponseParams `json:"Response"`
}

func (r *ProcessMNPApprovalResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ProcessMNPApprovalResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ProcessMNPSensitiveAPIPermissionApprovalRequestParams struct {
	// Approval ID
	ApprovalNo *string `json:"ApprovalNo,omitnil,omitempty" name:"ApprovalNo"`

	// Approval status. 20: Rejected; 30: Approved
	ApprovalStatus *int64 `json:"ApprovalStatus,omitnil,omitempty" name:"ApprovalStatus"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval notes
	ApprovalNote *string `json:"ApprovalNote,omitnil,omitempty" name:"ApprovalNote"`
}

type ProcessMNPSensitiveAPIPermissionApprovalRequest struct {
	*tchttp.BaseRequest
	
	// Approval ID
	ApprovalNo *string `json:"ApprovalNo,omitnil,omitempty" name:"ApprovalNo"`

	// Approval status. 20: Rejected; 30: Approved
	ApprovalStatus *int64 `json:"ApprovalStatus,omitnil,omitempty" name:"ApprovalStatus"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Approval notes
	ApprovalNote *string `json:"ApprovalNote,omitnil,omitempty" name:"ApprovalNote"`
}

func (r *ProcessMNPSensitiveAPIPermissionApprovalRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ProcessMNPSensitiveAPIPermissionApprovalRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "ApprovalNo")
	delete(f, "ApprovalStatus")
	delete(f, "PlatformId")
	delete(f, "ApprovalNote")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ProcessMNPSensitiveAPIPermissionApprovalRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ProcessMNPSensitiveAPIPermissionApprovalResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ProcessMNPSensitiveAPIPermissionApprovalResponse struct {
	*tchttp.BaseResponse
	Response *ProcessMNPSensitiveAPIPermissionApprovalResponseParams `json:"Response"`
}

func (r *ProcessMNPSensitiveAPIPermissionApprovalResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ProcessMNPSensitiveAPIPermissionApprovalResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type QueryOnlineVersionResp struct {
	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Version
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`

	// Version ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Version note
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersionNote *string `json:"MNPVersionNote,omitnil,omitempty" name:"MNPVersionNote"`

	// Update time
	// Note: This field may return null, indicating that no valid values can be obtained.
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`
}

// Predefined struct for user
type ReleaseMNPVersionRequestParams struct {
	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type ReleaseMNPVersionRequest struct {
	*tchttp.BaseRequest
	
	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *ReleaseMNPVersionRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ReleaseMNPVersionRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPVersionId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "ReleaseMNPVersionRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type ReleaseMNPVersionResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type ReleaseMNPVersionResponse struct {
	*tchttp.BaseResponse
	Response *ReleaseMNPVersionResponseParams `json:"Response"`
}

func (r *ReleaseMNPVersionResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *ReleaseMNPVersionResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type RemoveMNPRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

type RemoveMNPRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`
}

func (r *RemoveMNPRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RemoveMNPRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "PlatformId")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "RemoveMNPRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type RemoveMNPResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type RemoveMNPResponse struct {
	*tchttp.BaseResponse
	Response *RemoveMNPResponseParams `json:"Response"`
}

func (r *RemoveMNPResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RemoveMNPResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type ResourceIdInfo struct {
	// Resource ID
	// 0: No trial version currently available
	// 1: A trial version is currently available and uploaded by the current user
	// 2: A trial version is currently available and uploaded by another user
	// Note: This field may return null, indicating that no valid values can be obtained.
	ResourceId *int64 `json:"ResourceId,omitnil,omitempty" name:"ResourceId"`
}

type ResourceIdStringInfo struct {
	// The ID of the resource returned
	// Note: This field may return null, indicating that no valid values can be obtained.
	ResourceId *string `json:"ResourceId,omitnil,omitempty" name:"ResourceId"`
}

// Predefined struct for user
type RollbackMNPVersionRequestParams struct {
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Mini program version number
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`
}

type RollbackMNPVersionRequest struct {
	*tchttp.BaseRequest
	
	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program version ID
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Platform ID
	PlatformId *string `json:"PlatformId,omitnil,omitempty" name:"PlatformId"`

	// Mini program version number
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`
}

func (r *RollbackMNPVersionRequest) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RollbackMNPVersionRequest) FromJsonString(s string) error {
	f := make(map[string]interface{})
	if err := json.Unmarshal([]byte(s), &f); err != nil {
		return err
	}
	delete(f, "MNPId")
	delete(f, "MNPVersionId")
	delete(f, "PlatformId")
	delete(f, "MNPVersion")
	if len(f) > 0 {
		return tcerr.NewTencentCloudSDKError("ClientError.BuildRequestError", "RollbackMNPVersionRequest has unknown keys!", "")
	}
	return json.Unmarshal([]byte(s), &r)
}

// Predefined struct for user
type RollbackMNPVersionResponseParams struct {
	// Response data
	Data *BooleanInfo `json:"Data,omitnil,omitempty" name:"Data"`

	// The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
	RequestId *string `json:"RequestId,omitnil,omitempty" name:"RequestId"`
}

type RollbackMNPVersionResponse struct {
	*tchttp.BaseResponse
	Response *RollbackMNPVersionResponseParams `json:"Response"`
}

func (r *RollbackMNPVersionResponse) ToJsonString() string {
    b, _ := json.Marshal(r)
    return string(b)
}

// FromJsonString It is highly **NOT** recommended to use this function
// because it has no param check, nor strict type check
func (r *RollbackMNPVersionResponse) FromJsonString(s string) error {
	return json.Unmarshal([]byte(s), &r)
}

type SensitiveApiAuditInfoPageResp struct {
	// Total number of entries
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	DataList []*SensitiveApiAuditInfoResp `json:"DataList,omitnil,omitempty" name:"DataList"`
}

type SensitiveApiAuditInfoResp struct {
	// Approval ticket ID
	AuditNo *string `json:"AuditNo,omitnil,omitempty" name:"AuditNo"`

	// Approval ticket ID
	ApiId *string `json:"ApiId,omitnil,omitempty" name:"ApiId"`

	// API name
	ApiName *string `json:"ApiName,omitnil,omitempty" name:"ApiName"`

	// API request method
	ApiMethod *string `json:"ApiMethod,omitnil,omitempty" name:"ApiMethod"`

	// Mini program ID
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program name
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Applicant
	ApplyUser *string `json:"ApplyUser,omitnil,omitempty" name:"ApplyUser"`

	// Application time
	ApplyTime *string `json:"ApplyTime,omitnil,omitempty" name:"ApplyTime"`

	// Application notes
	ApplyNote *string `json:"ApplyNote,omitnil,omitempty" name:"ApplyNote"`

	// Approval status
	AuditStatus *int64 `json:"AuditStatus,omitnil,omitempty" name:"AuditStatus"`

	// Approver
	// Note: This field may return null, indicating that no valid values can be obtained.
	AuditUser *string `json:"AuditUser,omitnil,omitempty" name:"AuditUser"`

	// Approval time
	// Note: This field may return null, indicating that no valid values can be obtained.
	AuditTime *string `json:"AuditTime,omitnil,omitempty" name:"AuditTime"`

	// Approval notes
	// Note: This field may return null, indicating that no valid values can be obtained.
	AuditNote *string `json:"AuditNote,omitnil,omitempty" name:"AuditNote"`

	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// The application name.
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// Application icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationLogo *string `json:"ApplicationLogo,omitnil,omitempty" name:"ApplicationLogo"`

	// API type. 1: System; 2: Custom
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApiType *int64 `json:"ApiType,omitnil,omitempty" name:"ApiType"`

	// API function description
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApiDesc *string `json:"ApiDesc,omitnil,omitempty" name:"ApiDesc"`
}

type SensitiveApiInfoResp struct {
	// APIID
	ApiId *string `json:"ApiId,omitnil,omitempty" name:"ApiId"`

	// API name
	ApiName *string `json:"ApiName,omitnil,omitempty" name:"ApiName"`

	// API method
	ApiMethod *string `json:"ApiMethod,omitnil,omitempty" name:"ApiMethod"`

	// API description
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApiDesc *string `json:"ApiDesc,omitnil,omitempty" name:"ApiDesc"`

	// Creator
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// Creation time
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Updater
	UpdateUser *string `json:"UpdateUser,omitnil,omitempty" name:"UpdateUser"`

	// Update date
	UpdateTime *string `json:"UpdateTime,omitnil,omitempty" name:"UpdateTime"`

	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Application name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// Team ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamId *string `json:"TeamId,omitnil,omitempty" name:"TeamId"`

	// Team name
	// Note: This field may return null, indicating that no valid values can be obtained.
	TeamName *string `json:"TeamName,omitnil,omitempty" name:"TeamName"`

	// Application icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationLogo *string `json:"ApplicationLogo,omitnil,omitempty" name:"ApplicationLogo"`

	// API type 1 - System API 2 Custom API
	// Note: This field may return null, indicating that no valid values can be obtained.
	APIType *int64 `json:"APIType,omitnil,omitempty" name:"APIType"`

	// API status 0 Public 1 Restricted
	// Note: This field may return null, indicating that no valid values can be obtained.
	Status *int64 `json:"Status,omitnil,omitempty" name:"Status"`
}

type SensitiveApiPageInfo struct {
	// Total number of results.
	// Note: This field may return null, indicating that no valid values can be obtained.
	TotalCount *int64 `json:"TotalCount,omitnil,omitempty" name:"TotalCount"`

	// List information
	// Note: This field may return null, indicating that no valid values can be obtained.
	DataList []*SensitiveApiInfoResp `json:"DataList,omitnil,omitempty" name:"DataList"`
}

type ShowCaseRelAppInfo struct {
	// Application ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationId *string `json:"ApplicationId,omitnil,omitempty" name:"ApplicationId"`

	// Application name
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationName *string `json:"ApplicationName,omitnil,omitempty" name:"ApplicationName"`

	// Android URL
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationAndUrl *string `json:"ApplicationAndUrl,omitnil,omitempty" name:"ApplicationAndUrl"`

	// iOS URL
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationIOSUrl *string `json:"ApplicationIOSUrl,omitnil,omitempty" name:"ApplicationIOSUrl"`

	// Application icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	ApplicationIcon *string `json:"ApplicationIcon,omitnil,omitempty" name:"ApplicationIcon"`
}

type SimpleStringKeyValue struct {
	// Key ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	Key *string `json:"Key,omitnil,omitempty" name:"Key"`

	// Text description
	// Note: This field may return null, indicating that no valid values can be obtained.
	Value *string `json:"Value,omitnil,omitempty" name:"Value"`
}

type StringData struct {
	// String type response data
	// Note: This field may return null, indicating that no valid values can be obtained.
	Data *string `json:"Data,omitnil,omitempty" name:"Data"`
}

type UploadFileTempSecret struct {
	// Bucket
	// Note: This field may return null, indicating that no valid values can be obtained.
	Bucket *string `json:"Bucket,omitnil,omitempty" name:"Bucket"`

	// Region
	// Note: This field may return null, indicating that no valid values can be obtained.
	Region *string `json:"Region,omitnil,omitempty" name:"Region"`

	// Destination of upload
	// Note: This field may return null, indicating that no valid values can be obtained.
	Path *string `json:"Path,omitnil,omitempty" name:"Path"`

	// Temporary secret ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	TempSecretId *string `json:"TempSecretId,omitnil,omitempty" name:"TempSecretId"`

	// Temporary secret key
	// Note: This field may return null, indicating that no valid values can be obtained.
	TempSecretKey *string `json:"TempSecretKey,omitnil,omitempty" name:"TempSecretKey"`

	// Token 
	// Note: This field may return null, indicating that no valid values can be obtained.
	Token *string `json:"Token,omitnil,omitempty" name:"Token"`
}

type VersionBoardResp struct {
	// Mini program ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPId *string `json:"MNPId,omitnil,omitempty" name:"MNPId"`

	// Mini program version ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersionId *int64 `json:"MNPVersionId,omitnil,omitempty" name:"MNPVersionId"`

	// Mini program name
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPName *string `json:"MNPName,omitnil,omitempty" name:"MNPName"`

	// Mini program icon
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIcon *string `json:"MNPIcon,omitnil,omitempty" name:"MNPIcon"`

	// Mini program category
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPType *string `json:"MNPType,omitnil,omitempty" name:"MNPType"`

	// Mini program introduction
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPIntro *string `json:"MNPIntro,omitnil,omitempty" name:"MNPIntro"`

	// Mini program description
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPDesc *string `json:"MNPDesc,omitnil,omitempty" name:"MNPDesc"`

	// Developer
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateUser *string `json:"CreateUser,omitnil,omitempty" name:"CreateUser"`

	// The time when the developer created it
	// Note: This field may return null, indicating that no valid values can be obtained.
	CreateTime *string `json:"CreateTime,omitnil,omitempty" name:"CreateTime"`

	// Mini program version
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersion *string `json:"MNPVersion,omitnil,omitempty" name:"MNPVersion"`

	// Version features
	// Note: This field may return null, indicating that no valid values can be obtained.
	MNPVersionIntro *string `json:"MNPVersionIntro,omitnil,omitempty" name:"MNPVersionIntro"`

	// Phase. Values: [Develop,Platform,Online]
	// Note: This field may return null, indicating that no valid values can be obtained.
	Phase *string `json:"Phase,omitnil,omitempty" name:"Phase"`

	// 0: Pending; 1: Processing; 2: Rejected; 3: Approved; 4: Cancelled
	// Note: This field may return null, indicating that no valid values can be obtained.
	AuditStatus *int64 `json:"AuditStatus,omitnil,omitempty" name:"AuditStatus"`

	// Approval ticket ID
	// Note: This field may return null, indicating that no valid values can be obtained.
	AuditNo *string `json:"AuditNo,omitnil,omitempty" name:"AuditNo"`

	// Whether it is a trial version. 
	// 0: Not a trial version; 1: Trial version
	// Note: This field may return null, indicating that no valid values can be obtained.
	ShowCase *int64 `json:"ShowCase,omitnil,omitempty" name:"ShowCase"`

	// Scanning status
	// Note: This field may return null, indicating that no valid values can be obtained.
	ScanStatus *int64 `json:"ScanStatus,omitnil,omitempty" name:"ScanStatus"`

	// Scan score
	// Note: This field may return null, indicating that no valid values can be obtained.
	ScanScore *int64 `json:"ScanScore,omitnil,omitempty" name:"ScanScore"`

	// Version number to roll back to
	// Note: This field may return null, indicating that no valid values can be obtained.
	RollbackVersion *int64 `json:"RollbackVersion,omitnil,omitempty" name:"RollbackVersion"`

	// Release status
	// Note: This field may return null, indicating that no valid values can be obtained.
	Status *int64 `json:"Status,omitnil,omitempty" name:"Status"`

	// Address of the scan result
	// Note: This field may return null, indicating that no valid values can be obtained.
	ScanHtmlPath *string `json:"ScanHtmlPath,omitnil,omitempty" name:"ScanHtmlPath"`

	// Version approval status. 0: Pending; 1: Processing; 2: Rejected; 3: Approved; 4: Cancelled
	// Note: This field may return null, indicating that no valid values can be obtained.
	VersionCurrentStatus *int64 `json:"VersionCurrentStatus,omitnil,omitempty" name:"VersionCurrentStatus"`
}